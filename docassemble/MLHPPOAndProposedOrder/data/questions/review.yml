---
modules:
  - docassemble.demo.accordion
---
features:
  css: docassemble.demo:data/static/accordion.css
---
id: personal protection order review screen
event: review_full
question: |
  Review your answers
review:
  - note: |
      % if defined('is_incapacitated_adult'):
      ${ review_accordion_explainer }
      % else:
      ${ review_empty_explainer }
      % endif
  - raw html: |
      ${ start_accordion('<h2 class="h5">Petitioner (you)</h2>') }
    show if: is_incapacitated_adult or not is_incapacitated_adult
  - note: |
      The person who needs a PPO is an **incapacitated adult**. *(If you need to change this, please start over from the beginning.)*
    show if: is_incapacitated_adult
  - note: |
      You are an **emancipated** minor. *(If you need to change this, please start over from the beginning.)*
    show if: petitioner_is_emancipated_minor
  - Edit: 
      - users[0].name.first
      - users[0].address.address
      - edit_user_age
      - recompute:
        - check_parties_living_together
        - check_petitioner_under_fourteen
    button: |-
      % for item in users:
        **${ item }**

        **Age:** ${ users[0].age_in_years() }[BR]

        **Address:** ${ item.address.on_one_line() }

        **Phone:** ${ item.phone_numbers() }
      % endfor
  - Edit: 
      - contact_email
    button: |-
      **Contact e-mail:**
      
      ${ contact_email }
  - Edit: 
      - user_alias.there_are_any
      - recompute:
        - check_user_alias_list
    button: |-
      **Do you have any aliases?**

      ${ word(yesno(user_alias.there_are_any)) }
  - Edit: 
      - user_alias.revisit
      - recompute:
        - check_user_alias_list
    button: |-
      **Your aliases:**

      % if len(user_alias.complete_elements()) > 0:
      % for item in user_alias:
        * ${ item }
      % endfor
      % else:
      *You have not added any aliases yet.*
      % endif
    show if: user_alias.there_are_any
  - Edit:
      - wants_confidential_contact_details
    button: |-
      **Do you want to keep your contact information confidential?**

      ${ word(yesno(wants_confidential_contact_details)) }
  - Edit: 
      - petitioner_lives_in_michigan
      - recompute:
          - county_check_minor_respondent_done
    button: |-
      **Do you live in Michigan?**

      ${ word(yesno(petitioner_lives_in_michigan)) }
  - Edit: 
      - next_friends[0].name.first
      - recompute:
        - reset_next_friend
    button: |-
      **Next Friend:**  ${ next_friends[0] }
    show if: next_friends.there_are_any
  - raw html: |
      ${ next_accordion('<h2 class="h5">Respondent</h2>') }
    show if: respondent_lives_in_michigan or not respondent_lives_in_michigan
  - note: |
      The respondent is an **emancipated** minor. *(If you need to change this, please start over from the beginning.)*
    show if: respondent_is_emancipated_minor
  - Edit: 
      - other_parties[0].name.first
      - other_parties[0].address.address
      - other_parties[0].no_phone_number
      - edit_respondent_age
      - recompute:
        - check_parties_living_together
        - check_respondent_address_missing
        - avoid_conflicting_respondent_age
      - follow up:
        - respondent_contact_info_kickout
    button: |-
      **${ other_parties[0] }**, 
      % if knows_respondents_birthdate:
      **Birthdate:** ${ other_parties[0].birthdate }[BR]
      % else:
      **Est. Age:** ${ other_parties[0].age }[BR]
      % endif
      
      **Address:** ${ other_parties[0].address.on_one_line() }
      
      **Phone:** ${ word("Unknown") if other_parties[0].no_phone_number else other_parties[0].phone_number }
  - Edit: 
      - edit_petitioner_respondent_relationship
      - recompute:
        - reset_relationship_description
        - set_petitioner_respondent_relationship
    button: |-
      **Your Relationship to the Respondent:**
      % if married_choice and petitioner_respondent_relationship['married']:

      * You are currently married.
      % endif
      % if was_married_choice and petitioner_respondent_relationship['was_married']:

      * You were previously married.
      % endif
      % if petitioner_respondent_relationship['have_child']:

      * You have children together.
      % endif
      % if petitioner_respondent_relationship['dating']:

      * You dated or are dating.
      % endif
      % if petitioner_respondent_relationship['live_together']:

      * You live or used to live together.
      % endif
      % if parent_choice and petitioner_respondent_relationship['parent']:
      
      * They are your parent and you live, or used to live, together.
      % endif
    show if: petitioner_respondent_relationship.any_true()
  - Edit: relationship_to_respondent_exp
    button: |-
      **Describe Your Relationship to the Respondent:**

      % if relationship_to_respondent_exp:
      ${ relationship_to_respondent_exp }
      % else:
      *You have not entered a description of your relationship yet.*
      % endif
  - Edit: 
      - other_parties[0].gender
    button: |-
      **What is the Respondent's gender?**
      % if other_parties[0].gender == "M":

      Male
      % elif other_parties[0].gender == "F":

      Female
      % elif other_parties[0].gender == "X":

      Nonbinary
      % endif
  - Edit: other_parties[0].race
    button: |-
      **What is the Respondent's race?**

      ${ other_parties[0].race }
  - Edit: other_parties[0].height_feet
    button: |-
      **What is the Respondent's height?**

      ${ other_parties[0].height }
  - Edit: other_parties[0].weight
    button: |-
      **What is the Respondent's weight?**

      ${ other_parties[0].weight } lbs
  - Edit: other_parties[0].hair_color
    button: |-
      **What is the Respondent's hair color?**

      ${ other_parties[0].hair_color }
  - Edit: other_parties[0].eye_color
    button: |-
      **What is the Respondent's eye color?**

      ${ other_parties[0].eye_color }
  - Edit: other_parties[0].license_number
    button: |-
      **What is the Respondent's license number?**
      % if other_parties[0].license_number:

      ${ other_parties[0].license_number }
      % else:

      *You have not entered a license number yet.*
      % endif
    show if: defined('other_parties[0].license_number')
  - Edit: other_parties[0].other_identifying_info
    button: |-
      **Do you have any other identifying information for the Respondent?**
      % if other_parties[0].other_identifying_info:

      ${ other_parties[0].other_identifying_info }
      % else:

      *You have not entered any other identifying information yet.*
      % endif
    show if: defined('other_parties[0].other_identifying_info')
  - Edit: other_parties[0].carries_gun_for_work
    button: |-
      **Does the Respondent carry a gun for work?**
        % if other_parties[0].carries_gun_for_work == "unknown":

        I don't know
        % elif other_parties[0].carries_gun_for_work == "no":

        No
        % elif other_parties[0].carries_gun_for_work == "yes":

        Yes
        % endif
    show if: defined('other_parties[0].carries_gun_for_work')
  - Edit: 
      - other_party_alias.there_are_any
      - recompute:
        - check_other_party_alias_list
    button: |-
      **Does the Respondent have any aliases?**

      ${ word(yesno(other_party_alias.there_are_any)) }
  - Edit: 
      - other_party_alias.revisit
      - recompute:
        - check_other_party_alias_list
    button: |-
      **Respondent's aliases:**

      % if len(other_party_alias.complete_elements()) > 0:
      % for item in other_party_alias:
        * ${ item }
      % endfor
      % else:
      *You have not added any aliases yet.*
      % endif
    show if: other_party_alias.there_are_any
  - Edit: 
      - respondent_lives_in_michigan
      - recompute:
          - county_check_minor_respondent_done
    button: |-
      **Does the Respondent live in Michigan?**

      ${ word(yesno(respondent_lives_in_michigan)) }
  - raw html: |
      ${ next_accordion('<h2 class="h5">Children</h2>') }
    show if: (petitioner_respondent_have_child and (len(children.complete_elements()) > 0)) or defined('petitioner_has_other_children')
  - Edit: 
      - children.revisit
      - recompute:
          - any_child_has_PT
    show if: petitioner_respondent_have_child
    button: |-
      % for item in children:

        **${ item }**, DOB: ${ item.birthdate }
        % if item.lives_with == "petitioner":

        * Lives with: ${ users[0] }
        % elif item.lives_with == "respondent":

        * Lives with: ${ other_parties[0] }
        % elif item.lives_with == "someone_else":

        * Lives with: Someone other than ${ users[0] } or ${ other_parties[0] }.
        % endif
        % if item.parties_married_when_born:
        % if item.married_parents_detail == "marital_child" or item.married_parents_detail == "conceived_outside_marriage" :
        
        * Parentage established by ${ users[0] } and ${ other_parties[0] } being married when ${ item.familiar() } was born.
        % elif item.married_parents_detail == "married_adoption":

        * ${ users[0] } and ${ other_parties[0] } adopted ${ item.familiar() } together. Adoption Case: ${ item.adoption_case_number }, ${ item.adoption_case_court }
        % endif
        % elif item.unmarried_adoption:
      
        * ${ users[0] } and ${ other_parties[0] } adopted ${ item.familiar() } together. Adoption Case: ${ item.adoption_case_number }, ${ item.adoption_case_court }
        % elif item.birthing_parent == "third_party":

        * Someone other than ${ users[0] } and ${ other_parties[0] } gave birth to ${ item.familiar() }. 
      
          * Explanation: ${ item.third_party_birthing_parent_exp }
      
        % else:

        % if item.birthing_parent == "petitioner":

        * ${ users[0] } gave birth to ${ item.familiar() }.
        % elif item.birthing_parent == "respondent":

        * ${ other_parties[0] } gave birth to ${ item.familiar() }.
        % endif
        % if item.paternity == "paternity_established" and item.paternity_established_where == "Michigan":
        % if item.paternity_how == "by_acknowledgment_of_parentage":

        * Parentage established in Michigan by *Acknowledgment of Parentage*
        % elif item.paternity_how == "by_court_order":
      
        * Parentage established by Michigan court order (Case \#${ item.paternity_case_number } - ${ item.paternity_case_court_name })
        % elif item.paternity_how == "by_adoption":

        * Parentage established by adoption. Case: ${ item.adoption_case_number }, ${ item.adoption_case_court }
        % endif
        % elif item.paternity == "paternity_established" and item.paternity_established_where == "out_of_state":

        * Parentage was established in: ${ item.state_of_paternity }
        % elif item.paternity == "paternity_pending" and item.paternity_pending_where == "Michigan":

        * Michigan Parentage case pending (Case \#${ item.paternity_case_number } - ${ item.paternity_case_court_name })
        % elif item.paternity == "paternity_pending" and item.paternity_pending_where == "out_of_state":

        * Parentage case pending in: item.state_of_paternity
        % elif item.paternity == "paternity_not_established":
        % if item.birthing_parent == "petitioner":

        * ${ other_parties[0] } is not a legal parent.
        % elif item.birthing_parent == "respondent":

        * ${ users[0] } is not a legal parent.
        % endif
        % endif
        % endif

      % endfor
  - Edit: 
      - children[0].has_order_in_effect
      - follow up:
        - children[0].informal_PT
        - children[0].custody_case_number
        - children[0].physical_custody_by_order
        - children[0].parenting_time_order
        - children[0].who_has_supervised_time
        - children[0].parent_without_parenting_time
        - custody_parenting_time_provisions_same
      - recompute:
          - gather_other_custody_info
          - any_child_has_PT
      - follow up:
        - desired_parenting_time_changes
        - exchange_location
    show if: petitioner_respondent_have_child and (children.target_number == 1 or custody_parenting_time_provisions_same)
    button: |-
      **Current Custody and Parenting Time Order**
      % if children[0].has_order_in_effect:

      Custody/parenting time order in effect (Case \#${ children[0].custody_case_number } - ${ children[0].custody_case_court })
      % if children[0].parenting_time_order == "reasonable_parenting_time":
      
      * Parenting time order says there will be "reasonable parenting time"
      % elif children[0].parenting_time_order == "specific_times":
      
      * Parenting time order lists specific days and times
      % elif children[0].parenting_time_order == "one_parent_supervised":
      
      * Parenting time order says ${ users[0] if children[0].who_has_supervised_time == "petitioner" else other_parties[0] } will be supervised by ${ children[0].who_supervises_parenting_time }
      % elif children[0].parenting_time_order == "one_parent_no_parenting_time":
      
      * Parenting time order says ${ users[0] if children[0].parent_without_parenting_time == "petitioner" else other_parties[0] } does not have any parenting time
      % endif
      % if children[0].physical_custody_by_order == 'sole_petitioner':
      * Custody: ${ users[0] } has sole custody
      % elif children[0].physical_custody_by_order == 'sole_respondent':
      * Custody: ${ other_parties[0] } has sole custody
      % elif children[0].physical_custody_by_order == 'joint_custody':
      * Custody: ${ users[0] } and ${ other_parties[0] } share custody
      % endif
      % elif children[0].informal_PT:

      There is no custody/parenting time order in place, but there is an **informal parenting time** arrangement:

      * ${ children[0].informal_PT_exp }
      
      % else:

      There is no custody/parenting time order in place.

      % endif

      % if children[0].has_order_in_effect or children[0].informal_PT:
      **Desired Parenting Time Changes**
      % if desired_parenting_time_changes == "no_change":
      
      You don't want parenting time changes.
      % elif desired_parenting_time_changes == "no_change_except_exchange":
      
      You want parenting time to stay the same. But you want the exchange to take place at ${ exchange_police_department_location if exchange_location == "police" else exchange_other_location }
      % elif desired_parenting_time_changes == "suspend_respondent_time":
      
      You want ${ other_parties }'s parenting time to stop.
      % elif desired_parenting_time_changes == "something_else":

      You want something else:
      
      ${ parenting_time_changes_exp }
      % endif
      % endif
  - Edit: 
      - special_custody_review_screen
      - recompute:
          - any_child_has_PT
    show if: petitioner_respondent_have_child and children.target_number > 1 and not custody_parenting_time_provisions_same
    button: |-
      **Current Custody and Parenting Time Orders**
      % for item in children:
        % if item.has_order_in_effect:

        For **${ item.familiar() }**, there is a custody/parenting time order (Case \#${ item.custody_case_number } - ${ item.custody_case_court }):
        % if item.parenting_time_order == "reasonable_parenting_time":

        * Parenting time order only says there will be "reasonable parenting time"
        % elif item.parenting_time_order == "specific_times":

        * Parenting time order lists specific days and times
        % elif item.parenting_time_order == "one_parent_supervised":

        * Parenting time order says ${ users[0] if item.who_has_supervised_time == "petitioner" else other_parties[0] } will be supervised by ${ item.who_supervises_parenting_time }
        % elif item.parenting_time_order == "one_parent_no_parenting_time":

        * Parenting time order says ${ users[0] if item.parent_without_parenting_time == "petitioner" else other_parties[0] } does not have any parenting time
        % endif
        % if item.physical_custody_by_order == 'sole_petitioner':

        * Custody: ${ users[0] } has sole custody.
        % elif item.physical_custody_by_order == 'sole_respondent':

        * Custody: ${ other_parties[0] } has sole custody.
        % elif item.physical_custody_by_order == 'joint_custody':

        * Custody: ${ users[0] } and ${ other_parties[0] } share custody.
        % endif
        % elif item.informal_PT:

        For **${ item.familiar() }**, there is no custody/parenting time order, but there is an **informal parenting time** arrangement:

        * ${ item.informal_PT_exp }
        % else:

        For **${ item.familiar() }**, there is no custody/parenting time order.
        % endif
      % endfor 
  - Edit: 
      - desired_parenting_time_changes
      - follow up:
        - exchange_location
    show if: petitioner_respondent_have_child and children.target_number > 1 and not custody_parenting_time_provisions_same and any_child_has_PT
    button: |-
      **Desired Parenting Time Changes**
      % if desired_parenting_time_changes == "no_change":
      
      You don't want parenting time changes.
      % elif desired_parenting_time_changes == "no_change_except_exchange":
      
      You want parenting time to stay the same. But you want the exchange to take place at ${ exchange_police_department_location if exchange_location == "police" else exchange_other_location }
      % elif desired_parenting_time_changes == "suspend_respondent_time":
      
      You want ${ other_parties }'s parenting time to stop.
      % elif desired_parenting_time_changes == "something_else":

      You want something else:
      
      ${ parenting_time_changes_exp }
      % endif
  - note: |
      % if defined('petitioner_has_other_children'):
      <hr>
      <h2 class='h5'>Other Children Living with You</h2>
      % endif
  - Edit: petitioner_has_other_children
    button: |
      **Do you have any children living in your home who are NOT ${ other_parties[0] }'s children?**

      % if petitioner_has_other_children:
      Yes
      % else:
      No
      %endif
  - Edit: petitioner_other_children.revisit
    show if: petitioner_has_other_children
    button: |-
      % for item in petitioner_other_children:

        **${ item }**

        % if item.knows_other_child_birthdate:
        * DOB: ${ item.birthdate }
        % else:
        * Est. Age: ${ item.estimated_age }
        % endif

      % endfor
  - note: |
      % if defined('respondent_has_other_children'):
      <hr>
      <h2 class='h5'>Other Children Living with ${ other_parties[0] }</h2>
      % endif
  - Edit: 
      - respondent_has_other_children
      - follow up:
        - petitioner_knows_respondent_other_children_names
    button: |
      **Does ${ other_parties[0] } have any children living in their home who are NOT your children?**

      % if respondent_has_other_children:
      Yes

      **Do you know the names of the other children living with ${ other_parties[0] }?**

      % if petitioner_knows_respondent_other_children_names:
      Yes
      % else:
      No
      %endif
      % else:
      No, or unknown.
      %endif
  - Edit: respondent_other_children.revisit
    show if: respondent_has_other_children and petitioner_knows_respondent_other_children_names
    button: |-
      % for item in respondent_other_children:

        **${ item }**

        % if item.knows_other_child_birthdate:
        * DOB: ${ item.birthdate }
        % else:
        * Est. Age: ${ item.estimated_age }
        % endif

      % endfor
  - raw html: |
      ${ next_accordion('<h2 class="h5">PPO Type and Court</h2>') }
    show if: defined('ppo_type')
  - note: |
      % if defined('ppo_type'):
      You are filling out a petition for a
      % if ppo_type == "domestic":
      **domestic**
      % elif ppo_type == "nondomestic":
      **non-domestic**
      % elif ppo_type == "nondomestic_sexual_assault":
      **non-domestic sexual assault**
      % endif
      PPO. To change the petition type, please start over from the beginning.
      % endif
  - Edit:
      - county_choice
      - undefine:
        - county_check_minor_respondent
      - recompute:
          - court_index
          - the_court
          - reset_confidential_contact_details
          - ETC_county_status
          - reset_ex_parte
          - county_check_minor_respondent_done
    button: |
      **Court you will file in**:
      
      ${ the_court }, ${ county_choice } County
  - raw html: |
      ${ next_accordion('<h2 class="h5">Pending Legal Cases</h2>') }
    show if: defined('pending_actions.there_are_any')
  - Edit: 
      - pending_actions.there_are_any
      - recompute:
        - update_pending_actions
    button: |
      **Are there any pending legal cases between you and ${ other_parties[0] }?**

      % if pending_actions.there_are_any:
      Yes
      % elif not pending_actions.there_are_any:
      No
      % endif
  - Edit:
      - pending_actions.revisit
    button: |
      % if len(pending_actions.complete_elements()) > 0:
      % for item in pending_actions:

      **Pending Case \#${ loop.index+1 }**

      * Docket: ${ item.docket_number }
      * Court: ${ item.court_name }
      * County: ${ item.court_county }
      * State: ${ item.court_state }
      * Judge: ${ item.judge }


      % endfor
      % else:
      You have not listed any cases yet.
      % endif
    show if: pending_actions.there_are_any
  - raw html: |
      ${ next_accordion('<h2 class="h5">Sexual Assault History</h2>') }
    show if: defined('respondent_sexual_assault_conviction')
  - Edit: 
      - respondent_sexual_assault_conviction
      - recompute:
        - reset_SA_convictions_check
        - SA_convictions_check
        - reset_minimum_convictions_check
        - check_minimum_convictions_number
        - orders_judgments_asked
    button: |
      **Was ${ other_parties[0] } convicted of sexual assault against you?**  
      
      ${ word(yesno(respondent_sexual_assault_conviction)) }
      
      % if not respondent_sexual_assault_conviction:
      % if petitioner_is_minor:
      **Was ${ other_parties[0] } convicted of giving obscene material to you?** 

      ${ word(yesno(obscene_material_conviction)) }
      % endif

      % if not petitioner_is_minor or not obscene_material_conviction:
      **Do you fear that you could be sexually assaulted because ${ other_parties[0] } has either committed or threatened sexual assault against you?**

      ${ word(yesno(fears_future_sexual_assault)) }

      % if fears_future_sexual_assault:
      **Explain what happened that made you afraid of being sexually assaulted by ${ other_parties[0] }:**

      ${ potential_sexual_assault_exp }
      % endif

      % if not fears_future_sexual_assault:
      **Did ${ other_parties[0] } give you obscene material?** 

      ${ word(yesno(obscene_material_provided)) }

      **Explain what happened:**
      ${ obscene_material_exp }

      % endif
      % endif
      % endif
  - raw html: |
      ${ next_accordion('<h2 class="h5">Court Orders and Judgments</h2>') }
    show if: defined('orders_judgments.there_are_any')
  - note: |
      % if ppo_type == "nondomestic_sexual_assault":
      Convictions, court orders, or judgments regarding you and ${ other_parties[0] }:
      % else:
      Court orders or judgments regarding you and ${ other_parties[0] }:
      % endif
    show if: defined('orders_judgments.there_are_any')
  - Edit:
      - orders_judgments.revisit
      - recompute:
        - reset_minimum_convictions_check
        - check_minimum_convictions_number
        - orders_judgments_asked
    button: |
      % if len(orders_judgments.complete_elements()) > 0:
      % for item in orders_judgments:

      **Order/Judgment \#${ loop.index+1 }**

      * Docket: ${ item.docket_number }
      * Court: ${ item.court_name }
      * County: ${ item.court_county }
      * State: ${ item.court_state }
      * Judge: ${ item.judge }


      % endfor
      % else:
      % if ppo_type == "nondomestic_sexual_assault":
      No convictions, orders, or judgments. Tap **Edit** to add one.
      % else:
      No orders or judgments. Tap **Edit** to add one.
      % endif
      % endif
    show if: orders_judgments.there_are_any or not orders_judgments.there_are_any
  - raw html: |
      ${ next_accordion('<h2 class="h5">Past Incidents</h2>') }
    show if: len(incidents.complete_elements()) > 0
  - Edit:
      - incidents.revisit
      - recompute:
        - reset_minimum_incident_check
        - check_minimum_incident_number
    button: |
      % if len(incidents.complete_elements()) > 0:
      % for item in incidents:

      **Incident \#${ loop.index+1 }**

      * When: ${ item.date }
      * Location: ${ item.location }
      * Description: ${ item.other_party_actions }
      % if ppo_type == "nondomestic":
      * ${ item.reason_other_party_responsible }
      % endif
      * Because of this incident, I felt...: ${ item.emotional_effect }
      % if ppo_type == "domestic":
      * Were you physically injured?: ${ word("Yes") if item.petitioner_injured else word("No") } 
      % if item.petitioner_injured: 
      * Injuries: ${ item.physical_injury }
      % endif
      % endif
      * Were there witnesses?: ${ word("Yes") if item.had_witnesses else word("No") }
      * Were the police called?: ${ word("Yes") if item.had_police else word("No") }
      % if item.had_police:
      * What did the police do?: ${ item.police_actions }
      % endif


      % endfor
      % else:
      You have not added any incidents yet.
      % endif
  - Edit: other_details
    button: |
      **Other things ${ other_parties[0] } has done to make you feel threatened, abused, or afraid:**

      % if other_details:
      ${ other_details }
      % else:
      *You have not entered anything here yet*
      % endif
    show if: defined('other_details')
  - raw html: |
      ${ next_accordion('<h2 class="h5">Requests for the Court</h2>') }
    show if: defined('wants_no_entering_residential_property') or defined('no_stalking_choices')
  - Edit:
      - wants_no_entering_residential_property
      - recompute:
        - set_no_entering_residential_property
    button: |
      **Include a request to order ${ other_parties[0] } to not enter the property where you live?**  ${ word(yesno(no_entering_residential_property)) }

      % if ppo_type == "domestic" and not petitioner_respondent_married and no_entering_residential_property and defined('has_property_interest_in_home'):
      **Do you have a property interest in this property?** ${ word(yesno(has_property_interest_in_home)) }
      % endif

      % if ppo_type == "domestic" and not petitioner_respondent_married and no_entering_residential_property and not has_property_interest_in_home and defined('respondent_has_property_interest_in_home'):
      **Does ${ other_parties[0] } have a property interest in the property where you live?**  ${ word(yesno(respondent_has_property_interest_in_home)) }
      % endif
  - Edit:
      - other_properties.there_are_any
      - recompute:
        - check_wants_no_entering_other_property
    button: |
      **Do you want the judge to order ${ other_parties[0] } to not enter another property (not your residence)?**

      ${ word(yesno(other_properties.there_are_any)) }
  - Edit:
      - other_properties[0].address
    button: |
      **Other property (not your residence):**
      % for item in other_properties:

      ${ item }

      % endfor
    show if: other_properties.there_are_any
  - Edit:
      - wants_no_harming_petitioner
      - recompute:
        - check_ppo_harm_protectees_list
        - check_wants_no_harming_people
    button: |
      **Do you want the judge to order ${ other_parties[0] } to not assault, attack, beat, molest, or wound you?**

      ${ word(yesno(wants_no_harming_petitioner)) }
  - Edit:
      - ppo_harm_protectees.there_are_any
      - recompute:
        - check_ppo_harm_protectees_list
        - check_wants_no_harming_people
    button: |
      **Do you want the judge to order ${ other_parties[0] } to not assault, attack, beat, molest, or wound another person?**

      ${ word(yesno(ppo_harm_protectees.there_are_any)) }
    show if: ppo_type == "domestic" and defined('ppo_harm_protectees.there_are_any')
  - Edit: 
      - ppo_harm_protectees.revisit
      - recompute:
        - check_ppo_harm_protectees_list
        - check_wants_no_harming_people
    button: |
      % if len(ppo_harm_protectees.complete_elements()) > 0:
      **I want the following people to be protected from being assaulted, attacked, beaten, molested, or wounded:**
      % for item in ppo_harm_protectees:

      * ${ item }

      % endfor
      % else:

      *You have not listed anyone yet*

      % endif
    show if: ppo_harm_protectees.there_are_any
  - Edit:
      - wants_no_removing_minor
    button: |
      **Do you want the judge to order ${ other_parties[0] } to not remove any minor children from your custody?**

      ${ word(yesno(wants_no_removing_minor)) }
  - Edit:
      - wants_no_sexual_assault_threats
      - recompute:
        - check_ppo_sexual_assault_threat_protectees_list
        - check_wants_no_sexual_assault_threatening_others
    button: |
      **Do you want the judge to order ${ other_parties[0] } not to threaten to sexually assault, kill, or physically injure you?**

      ${ word(yesno(wants_no_sexual_assault_threats)) }
  - Edit:
      - ppo_sexual_assault_threat_protectees.there_are_any
      - recompute:
        - check_ppo_sexual_assault_threat_protectees_list
        - check_wants_no_sexual_assault_threatening_others
    button: |
      **Do you want the judge to order ${ other_parties[0] } to not threaten to sexually assault, kill, or physically injure another person?**

      ${ word(yesno(ppo_sexual_assault_threat_protectees.there_are_any)) }
    show if: ppo_type == "nondomestic_sexual_assault" and defined('ppo_sexual_assault_threat_protectees.there_are_any')
  - Edit: 
      - ppo_sexual_assault_threat_protectees.revisit
      - recompute:
        - check_ppo_sexual_assault_threat_protectees_list
        - check_wants_no_sexual_assault_threatening_others
    button: |
      % if len(ppo_sexual_assault_threat_protectees.complete_elements()) > 0:
      **I want the following people to be protected from threats of sexually assault, death, or physically injury:**
      % for item in ppo_sexual_assault_threat_protectees:

      * ${ item }

      % endfor
      % else:

      *You have not listed anyone yet*

      % endif
    show if: ppo_sexual_assault_threat_protectees.there_are_any
  - Edit: 
      - no_stalking_choices
      - recompute:
        - set_stalking_options
    button: |-
      **I want to be protected from the following stalking behaviors:**
      % if no_stalking_choices.all_false():

      *You have not added any protections yet*
      % else:
      % if no_stalking_choices['following']:

      * Following me or appearing within my sight
      % endif
      % if no_stalking_choices['communications']:

      * Sending mail or other communications to me
      % endif
      % if no_stalking_choices['approaching']:

      * Approaching or confronting me in a public place or on private property
      % endif
      % if no_stalking_choices['entering_property']:

      * Entering onto or staying on property I own, lease, or occupy
      % endif
      % if no_stalking_choices['placing_object']:

      * Placing an object on or delivering an object to property I own, lease, or occupy
      % endif
      % if no_stalking_choices['appear_work_residence']:

      * Appearing at my workplace or residence
      % endif
      % if no_stalking_choices['phone_contact']:

      * Contacting me by telephone
      % endif
      % endif
  - Edit:
      - wants_no_children_property_removal_interference
    button: |
      **Do you want the judge to order ${ other_parties[0] } to not interfere with your efforts to remove your children or personal property from a place that ${ other_parties[0] } owns or leases?**

      ${ word(yesno(wants_no_children_property_removal_interference)) }
  - Edit:
      - wants_no_threatening_petitioner
      - recompute:
        - check_ppo_threat_protectees_list
        - check_wants_no_threatening_others
    button: |
      **Do you want the judge to order ${ other_parties[0] } to not threaten to kill or physically injure you?**

      ${ word(yesno(wants_no_threatening_petitioner)) }
  - Edit:
      - ppo_threat_protectees.there_are_any
      - recompute:
        - check_ppo_threat_protectees_list
        - check_wants_no_threatening_others
    button: |
      **Do you want the judge to order ${ other_parties[0] } to not threaten to kill or physically injure another person?**

      ${ word(yesno(ppo_threat_protectees.there_are_any)) }
    show if: ppo_type == "domestic" and defined('ppo_threat_protectees.there_are_any')
  - Edit: 
      - ppo_threat_protectees.revisit
      - recompute:
        - check_ppo_threat_protectees_list
        - check_wants_no_threatening_others
    button: |
      % if len(ppo_threat_protectees.complete_elements()) > 0:
      **I want the following people to be protected from threats of death or physical injury:**
      % for item in ppo_threat_protectees:

      * ${ item }

      % endfor
      % else:

      *You have not listed anyone yet*

      % endif
    show if: ppo_threat_protectees.there_are_any
  - Edit:
      - wants_no_work_education_interference
    button: |
      **Do you want the judge to order ${ other_parties[0] } to not interfere with you at work or school, or to act in a way that impairs your work or school relationships or environment?**

      ${ word(yesno(wants_no_work_education_interference)) }
  - Edit:
      - wants_no_access_to_personal_info_records
    button: |
      **Do you want the judge to order ${ other_parties[0] } to not have access to information in your child’s records that shows your (or your child’s) home address, phone number, or work address?**

      ${ word(yesno(wants_no_access_to_personal_info_records)) }
  - Edit: 
      - no_mental_distress_or_control_choices
      - recompute:
        - set_mental_distress_control_options
    button: |-
      **I want the judge to order ${ other_parties[0] } to not intentionally cause me mental distress or try to control me through the following behaviors:**
      % if no_mental_distress_or_control_choices.all_false():

      *You have not added any protections yet*
      % else:
      % if no_mental_distress_or_control_choices['harming_animal']:

      * Injuring, killing, torturing, or neglecting any animal that I own, or threatening to do any of those things
      % endif
      % if no_mental_distress_or_control_choices['removing_animal']:

      * Removing any animal I own from my possession
      % endif
      % if no_mental_distress_or_control_choices['keeping_animal']:

      * Keeping any animal I own from me, or taking possession of it
      % endif
      % endif
  - Edit:
      - wants_no_firearm_purchase_or_possession
    button: |
      **Do you want the judge to order ${ other_parties[0] } to not buy or have a gun?**

      ${ word(yesno(wants_no_firearm_purchase_or_possession)) }
  - Edit:
      - wants_no_message_posting
    button: |
      **Do you want the judge to order ${ other_parties[0] } to not harrass you by posting messages?**

      ${ word(yesno(wants_no_message_posting)) }
    show if: ppo_type == "nondomestic" or ppo_type == "nondomestic_sexual_assault"
  - Edit:
      - wants_other_request
    button: |
      **Is there anything else you want the judge to order in the PPO?**

      ${ word(yesno(wants_other_request)) }
      % if wants_other_request:
      % if other_request_exp:
        - ${ other_request_exp }
      % endif
      % endif
  - Edit:
      - wants_ex_parte_order
    button: |
      **Do you want to request an ex parte order?**

      ${ word(yesno(wants_ex_parte_order)) }
    show if: county_choice not in ["Ingham", "Jackson", "Wayne", "Saginaw"]
  - raw html: |
      ${ next_accordion('<h2 class="h5">Uploaded Documents</h2>') }
    show if: defined('exhibit_attachment.exhibits.has_exhibits')
  - Edit:
      - exhibit_attachment.exhibits.has_exhibits
    button: |
      **Do you have documents you want the judge to see?**:

      % if exhibit_attachment.exhibits.has_exhibits:
      Yes
      % elif not exhibit_attachment.exhibits.has_exhibits:
      No
      % endif
  - Edit:
      - exhibit_attachment.exhibits.revisit
      - recompute:
        - exhibit_attachment.table_of_contents
    button: |
      **Uploaded Documents**

      % if exhibit_attachment.exhibits.number_gathered() > 0:
      ${ collapse_template(exhibit_attachment.exhibits.in_progress_exhibits) }
      % else:
      You have not uploaded any documents yet.
      % endif
    css class: bg-secondary-subtle
    show if: exhibit_attachment.exhibits.has_exhibits
  - raw html: |
      ${ next_accordion('<h2 class="h5">Electronic Signature</h2>') }
    show if: (defined('MLH_esign') or defined('next_friend_agrees_to_sign')) and ETC_county_status != "required"
  - Edit:
      - MLH_esign
      - recompute:
        - signature_date
    button: |
      **Do you want to add your electronic signature?**

      ${ word(yesno(MLH_esign)) }
    show if: ETC_county_status != "required" and (not is_incapacitated_adult and (not petitioner_is_minor or petitioner_is_emancipated_minor))
  - Edit:
      - next_friend_agrees_to_sign
      - recompute:
        - signature_date
    button: |
      **Does the next friend, ${ next_friends[0] }, agree to add their electronic signature?**

      ${ word(yesno(next_friend_agrees_to_sign)) }
    show if: ETC_county_status != "required" and (is_incapacitated_adult or (petitioner_is_minor and not petitioner_is_emancipated_minor and petitioner_under_fourteen ))
  - Edit:
      - fourteen_plus_agrees_to_sign
      - recompute:
        - signature_date
    button: |
      **Does ${ users[0] } agree to add their electronic signature to the *Request for Next Friend***?

      ${ word(yesno(fourteen_plus_agrees_to_sign)) }
      
      **Does the next friend, ${ next_friends[0] }, agree to add their electronic signature to the other forms?**

      ${ word(yesno(next_friend_agrees_to_sign)) }
    show if: ETC_county_status != "required" and (petitioner_is_minor and not petitioner_is_emancipated_minor and not petitioner_under_fourteen )
  - raw html: |
      ${ end_accordion() }
    show if: is_incapacitated_adult or not is_incapacitated_adult
---
if: len(exhibit_attachment.exhibits) > 1
generic object: ALExhibitList
table: exhibit_attachment.exhibits.add_delete_exhibits_table
rows: exhibit_attachment.exhibits
allow reordering: True
delete buttons: True
columns:
  - ${ al_exhibit_title_label }: |
      row_item.title
  - ${ al_exhibit_preview_label }: |
      row_item.pages.show(width="50%")
  - ${ al_exhibit_total_pages_label }: |
      row_item.pages.num_pages()
---
if: len(exhibit_attachment.exhibits) == 1
generic object: ALExhibitList
table: exhibit_attachment.exhibits.add_delete_exhibits_table
rows: exhibit_attachment.exhibits
allow reordering: True
delete buttons: False
columns:
  - ${ al_exhibit_title_label }: |
      row_item.title
  - ${ al_exhibit_preview_label }: |
      row_item.pages.show(width="50%")
  - ${ al_exhibit_total_pages_label }: |
      row_item.pages.num_pages()
---
generic object: ALExhibitList
table: exhibit_attachment.exhibits.rearrange_exhibits_table
rows: exhibit_attachment.exhibits
columns:
  - ${ al_exhibit_title_label }: |
      row_item.title
  - ${ al_exhibit_preview_label }: |
      row_item.pages.show(width="50%")
  - ${ al_exhibit_total_pages_label }: |
      row_item.pages.num_pages()
---
generic object: ALExhibitList
template: exhibit_attachment.exhibits.in_progress_exhibits
subject: |
  View your uploaded documents
content: |
  ${ exhibit_attachment.exhibits.rearrange_exhibits_table }
---
generic object: ALExhibitList
template: exhibit_attachment.exhibits.add_delete_exhibits
subject: |
  View your uploaded documents
content: |
  ${ exhibit_attachment.exhibits.add_delete_exhibits_table }
---
continue button field: |-
  children.revisit
id: |-
  revisit children
question: |-
  Edit answers about Children
subquestion: |-
  ${ children.table }
  ${ children.add_action() }
---
continue button field: |-
  exhibit_attachment.exhibits.revisit
id: |-
  revisit exhibits
question: |-
  Edit uploaded docs
subquestion: |-
  ${ exhibit_attachment.exhibits.add_delete_exhibits }

  ${ exhibit_attachment.exhibits.add_action() }
---
if: len(children.complete_elements()) > 1
table: |-
  children.table
columns:
  - 'Name': |-
      row_item.name if hasattr(row_item, 'name') else ''
  - 'DOB': |-
      row_item.birthdate if hasattr(row_item, 'birthdate') else ''
rows: |-
  children
edit:
  - name.first
  - lives_with
  - parties_married_when_born
  - birthing_parent
  - paternity
  - custody_parenting_time_provisions_same
confirm: True
---
if: len(children.complete_elements()) == 1
table: |-
  children.table
columns:
  - 'Name': |-
      row_item.name if hasattr(row_item, 'name') else ''
  - 'DOB': |-
      row_item.birthdate if hasattr(row_item, 'birthdate') else ''
rows: |-
  children
edit:
  - name.first
  - lives_with
  - parties_married_when_born
  - birthing_parent
  - paternity
  - custody_parenting_time_provisions_same
delete buttons: False
---
if: len(petitioner_other_children.complete_elements()) > 1
table: petitioner_other_children.table
rows: petitioner_other_children
columns:
  - Name: |
      row_item.name_full()
  - Age: |
      row_item.age_in_years() if row_item.knows_other_child_birthdate else row_item.estimated_age
edit:
  - name.first
  - knows_other_child_birthdate
confirm: True
---
if: len(petitioner_other_children.complete_elements()) == 1
table: petitioner_other_children.table
rows: petitioner_other_children
columns:
  - Name: |
      row_item.name_full()
  - Age: |
      row_item.age_in_years() if row_item.knows_other_child_birthdate else row_item.estimated_age
edit:
  - name.first
  - knows_other_child_birthdate
delete buttons: False
---
if: len(respondent_other_children.complete_elements()) > 1
table: respondent_other_children.table
rows: respondent_other_children
columns:
  - Name: |
      row_item.name_full()
  - Age: |
      row_item.age_in_years() if row_item.knows_other_child_birthdate else row_item.estimated_age
edit:
  - name.first
  - knows_other_child_birthdate
confirm: True
---
if: len(respondent_other_children.complete_elements()) == 1
table: respondent_other_children.table
rows: respondent_other_children
columns:
  - Name: |
      row_item.name_full()
  - Age: |
      row_item.age_in_years() if row_item.knows_other_child_birthdate else row_item.estimated_age
edit:
  - name.first
  - knows_other_child_birthdate
delete buttons: False
---
continue button field: pending_actions.revisit
question: |
  Pending Legal Cases
subquestion: |
  ${ pending_actions.table }

  ${ pending_actions.add_action() }
---
table: pending_actions.table
rows: pending_actions
columns:
  - Docket Number: |
      row_item.docket_number if defined("row_item.docket_number") else ""
  - Court: |
      row_item.court_name if defined("row_item.court_name") else ""
  - County: |
      row_item.court_county if defined("row_item.court_county") else ""
  - State: |
      row_item.court_state if defined("row_item.court_state") else ""
  - Judge: |
      row_item.judge if defined("row_item.judge") else ""
edit:
  - docket_number
  - court_name
  - judge
confirm: True
---
continue button field: orders_judgments.revisit
question: |
  Court Orders & Judgments
subquestion: |
  ${ orders_judgments.table }

  ${ orders_judgments.add_action() }
---
table: orders_judgments.table
rows: orders_judgments
columns:
  - Docket Number: |
      row_item.docket_number if defined("row_item.docket_number") else ""
  - Court: |
      row_item.court_name if defined("row_item.court_name") else ""
  - County: |
      row_item.court_county if defined("row_item.court_county") else ""
  - State: |
      row_item.court_state if defined("row_item.court_state") else ""
  - Judge: |
      row_item.judge if defined("row_item.judge") else ""
edit:
  - docket_number
  - court_name
  - judge
confirm: True
---
continue button field: incidents.revisit
question: |
  Past Incidents
subquestion: |
  ${ incidents.table }

  ${ incidents.add_action() }
---
table: incidents.table
rows: incidents
columns:
  - Date: |
      row_item.date if defined("row_item.date") else ""
  - Location: |
      row_item.location if defined("row_item.location") else ""
edit:
  - date
  - location
  - other_party_actions
  - reason_other_party_responsible
  - emotional_effect
  - petitioner_injured
  - had_witnesses
  - had_police
  - police_report_info
confirm: True
---
table: children.edit_custody
rows: children
columns:
  - Name: |
      row_item.familiar()
  - Custody order in place?: |
      word(yesno(row_item.has_order_in_effect)) 
edit:
  - has_order_in_effect
  - informal_PT
  - custody_case_number
  - physical_custody_by_order
  - parenting_time_order
  - who_has_supervised_time
  - parent_without_parenting_time
delete buttons: False
---
id: personal protection order review screen
question: |
  Edit Current Custody and Parenting Time Information
subquestion: |
  ${ children.edit_custody }
continue button field: special_custody_review_screen
---
continue button field: user_alias.revisit
question: |
  Edit your aliases.
subquestion: |
  ${ user_alias.table }

  ${ user_alias.add_action() }
---
table: user_alias.table
rows: user_alias
columns:
  - Name: |
      row_item.name if defined('row_item.name.first') else ''
edit:
  - name.first
confirm: True
---
continue button field: other_party_alias.revisit
question: |
  Edit ${ other_parties[0] }'s aliases.
subquestion: |
  ${ other_party_alias.table }

  ${ other_party_alias.add_action() }
---
table: other_party_alias.table
rows: other_party_alias
columns:
  - Name: |
      row_item.name if defined('row_item.name.first') else ''
edit:
  - name.first
confirm: True
---
continue button field: ppo_harm_protectees.revisit
question: |
  Other people you want to be protected from harm
subquestion: |
  ${ ppo_harm_protectees.table }

  ${ ppo_harm_protectees.add_action() }
---
table: ppo_harm_protectees.table
rows: ppo_harm_protectees
columns:
  - Name: |
      row_item.name if defined('row_item.name.first') else ''
edit:
  - name.first
confirm: True
---
continue button field: ppo_threat_protectees.revisit
question: |
  Other people you want to be protected from threats
subquestion: |
  ${ ppo_threat_protectees.table }

  ${ ppo_threat_protectees.add_action() }
---
table: ppo_threat_protectees.table
rows: ppo_threat_protectees
columns:
  - Name: |
      row_item.name if defined('row_item.name.first') else ''
edit:
  - name.first
confirm: True
---
continue button field: ppo_sexual_assault_threat_protectees.revisit
question: |
  Other people you want to be protected from threats
subquestion: |
  ${ ppo_sexual_assault_threat_protectees.table }

  ${ ppo_sexual_assault_threat_protectees.add_action() }
---
table: ppo_sexual_assault_threat_protectees.table
rows: ppo_sexual_assault_threat_protectees
columns:
  - Name: |
      row_item.name if defined('row_item.name.first') else ''
edit:
  - name.first
confirm: True
---
id: user age adult
if: users[0].age_in_years() >= 18
continue button field: edit_user_age
question: |
  Your age
fields:
  - Enter your age: users[0].age
    datatype: integer
    required: True
    min: 18
    validation messages:
      min: |
        ${ adult_user_age_validation }
---
template: adult_user_age_validation
content: |
  Earlier, you said you were 18 or older. If you are a minor, please use the Undo button or start over.  
---
id: user age minor
if: users[0].age_in_years() < 18 and not petitioner_is_emancipated_minor
continue button field: edit_user_age
question: |
  Your age
fields:
  - Enter your age: users[0].age
    datatype: integer
    required: True
    max: 17
    validation messages:
      max: |
        ${ minor_user_age_validation }
  - note: |
      ${ collapse_template(user_turned_18) }
---
template: minor_user_age_validation
content: |
  Earlier, you said you were UNDER 18. If you are an adult, please use the Undo button or start over.  
---
template: user_turned_18
subject: |
  What if I turned 18?
content: |
  If you turned 18, you need to start over. This is because there are different requirements for minor and adult petitioners. We're very sorry for the inconvenience. 
---
template: respondent_turned_18
subject: |
  What if they turned 18?
content: |
  If the respondent turned 18, you need to start over. This is because there are different forms and requirements for minor and adult respondents. We're very sorry for the inconvenience. 
---
id: user age emancipated minor
if: users[0].age_in_years() < 18 and petitioner_is_emancipated_minor
continue button field: edit_user_age
question: |
  Your age
fields:
  - Enter your age: users[0].age
    datatype: integer
    required: True
    min: 16
    max: 17
    validation messages:
      max: |
        ${ minor_user_age_validation }
      min: |
        ${ emancipated_minor_user_age_validation }
  - note: |
      ${ collapse_template(user_turned_18) }
---
template: emancipated_minor_user_age_validation
content: |
  Earlier, you said you were an emancipated minor. Emancipated minors must be at least 16. If you are under 16, please use the Undo button or start over.  
---
id: edit respondent birthdate adult
if: other_parties[0].age_in_years() >= 18
continue button field: edit_respondent_age
question: |
  Respondent's date of birth
terms:
  Respondent: |
    The Respondent is the person you want to be protected from.
fields:
  - Do you know the {Respondent}'s exact date of birth?: knows_respondents_birthdate
    datatype: yesnoradio
    label above field: True
  - Enter the Respondent's date of birth: other_parties[0].birthdate
    datatype: BirthDate
    show if:
      variable: knows_respondents_birthdate
      is: True
    label above field: True
    alMax: ${ format_date( today() - date_interval(years=18), format='MM/dd/yyyy') }
    alMaxMessage: |
      ${ adult_OP_age_validation }
  - Even if you do not know the Respondent's exact date of birth, you must provide your best guess of their age: other_parties[0].age
    datatype: integer
    show if:
      variable: knows_respondents_birthdate
      is: False
    label above field: True
    min: 18
    validation messages:
      min: |
        ${ adult_OP_age_validation }
---
template: adult_OP_age_validation
content: |
  Earlier, you said the respondent was at least 18. If the respondent is a minor, please start over.
---
id: edit respondent birthdate minor
if: other_parties[0].age_in_years() < 18 and not respondent_is_emancipated_minor
continue button field: edit_respondent_age
question: |
  Respondent's date of birth
terms:
  Respondent: |
    The Respondent is the person you want to be protected from.
fields:
  - Do you know the {Respondent}'s exact date of birth?: knows_respondents_birthdate
    datatype: yesnoradio
    label above field: True
  - Enter the Respondent's date of birth: other_parties[0].birthdate
    datatype: BirthDate
    show if:
      variable: knows_respondents_birthdate
      is: True
    label above field: True
    alMax: ${ format_date( today() - date_interval(years=10), format='MM/dd/yyyy') }
    alMaxMessage: |
      ${ minor_OP_min_age_validation }
    alMin: ${ format_date( today() - date_interval(years=18) + date_interval(days=1), format='MM/dd/yyyy') }
    alMinMessage: |
      ${ minor_OP_max_age_validation }
  - Even if you do not know the Respondent's exact date of birth, you must provide your best guess of their age: other_parties[0].age
    datatype: integer
    show if:
      variable: knows_respondents_birthdate
      is: False
    label above field: True
    min: 10
    max: 17
    validation messages:
      min: |
        ${ minor_OP_min_age_validation }
      max: |
        ${ minor_OP_max_age_validation }
  - note: |
      ${ collapse_template(respondent_turned_18) }
---
template: minor_OP_min_age_validation
content: |
  You cannot get a PPO against someone younger than 10 years old.
---
template: minor_OP_max_age_validation
content: |
  Earlier, you said the respondent was UNDER 18. If the respondent is an adult, please start over.
---
id: edit respondent birthdate emancipated minor
if: other_parties[0].age_in_years() < 18 and respondent_is_emancipated_minor
continue button field: edit_respondent_age
question: |
  Respondent's date of birth
terms:
  Respondent: |
    The Respondent is the person you want to be protected from.
fields:
  - Do you know the {Respondent}'s exact date of birth?: knows_respondents_birthdate
    datatype: yesnoradio
    label above field: True
  - Enter the Respondent's date of birth: other_parties[0].birthdate
    datatype: BirthDate
    show if:
      variable: knows_respondents_birthdate
      is: True
    label above field: True
    alMax: ${ format_date( today() - date_interval(years=16), format='MM/dd/yyyy') }
    alMaxMessage: |
      ${ emancipated_OP_min_age_validation }
    alMin: ${ format_date( today() - date_interval(years=18) + date_interval(days=1), format='MM/dd/yyyy') }
    alMinMessage: |
      ${ minor_OP_max_age_validation }
  - Even if you do not know the Respondent's exact date of birth, you must provide your best guess of their age: other_parties[0].age
    datatype: integer
    show if:
      variable: knows_respondents_birthdate
      is: False
    label above field: True
    min: 16
    max: 17
    validation messages:
      min: |
        ${ emancipated_OP_min_age_validation }
      max: |
        ${ minor_OP_max_age_validation }
  - note: |
      ${ collapse_template(respondent_turned_18) }
---
template: emancipated_OP_min_age_validation
content: |
  Earlier, you said the respondent was an emancipated minor. Emancipated minors must be at least 16. If the respondent is under 16, please use the Undo button or start over.  
---
code: |
  if knows_respondents_birthdate:
    undefine('other_parties[0].age')

  avoid_conflicting_respondent_age = True
---
# restrict editing of relationship to avoid triggering different petition type, since we have not yet built petition-type editing
reconsider: relationship_choices
continue button field: edit_petitioner_respondent_relationship
id: edit relationship to respondent
question: |
  Have you ever lived with the respondent, **or** had a relationship with them?
fields:
  - Select **all** that apply: petitioner_respondent_relationship
    datatype: checkboxes
    none of the above: False
    code: |
      relationship_choices
under: |
  ${ collapse_template(what_if_no_domestic_relationship_review) }

  ${ sign_in_message }
---
template: what_if_no_domestic_relationship_review
subject: What if none of these options apply?
content: |
  If none of these apply, please start over. This is to make sure you fill out the right type of personal protection order (PPO) forms for your situation.
---