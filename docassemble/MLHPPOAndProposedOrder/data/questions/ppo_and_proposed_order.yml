include:
  - docassemble.AssemblyLine:assembly_line.yml
  - docassemble.ALAnyState:any_state.yml
  - docassemble.mlhframework:mlh_interview_framework.yml
  - review.yml
---
metadata:
  title: Personal Protection Order
  short title: Personal Protection Order
  subtitle: Helps you prepare the forms you will need to ask the court for a Personal Protection Order.
  description: |
    A Personal Protection Order (PPO) is one tool to help you stay safe. 

    You may also want to talk to an advocate from a domestic violence and/or sexual assault agency, who can help you make a safety plan. A safety plan is a list of ideas to help increase your safety that is individualized for you.
  tags:
    - "Family"
  authors:
    - Rami Lorca
---
features:
  labels above fields: True
---
sections:
  - review_intro: "Introduction"
  - review_petitioner_info: "Petitioner Information"
  - review_respondent_info: "Respondent Information"
  - review_abuse_history_info: "History of Abuse"
  - review_what_you_want_in_ppo_info: "What You Want in the PPO"
  - review_get_forms_info: "Get Your Forms"
---
code: |
  al_form_type = "other_form"
---
id: interview config code block
code: |
  github_repo_name = "docassemble-MLHPPOAndProposedOrder"
  MLH_court_forms = True
  MLH_time_min = 40
  MLH_time_max = 60
  MLH_case_type_language = 'Look for the two-letter case type code at the end of your case number. This could be PP or PH. Also look at the column labeled "Type of Filing." If this column only says "Subsequent Filings" for your court, then you cannot e-File the Petition. However, if the judge grants your Petition, you would be able to e-File any motions in your PPO case later on. If you are allowed to e-File your initial papers, this column will say "Case Initiation.'
  MLH_esign_supported = True
---
objects:
  - users: ALPeopleList.using(auto_gather=True, complete_attribute="complete", target_number=1)
  - user_alias: ALPeopleList.using(complete_attribute="complete")
  - other_party_alias: ALPeopleList.using(complete_attribute="complete")
  - next_friends: ALPeopleList.using(complete_attribute="complete")
  - other_parties: ALPeopleList.using(auto_gather=True, complete_attribute="complete", target_number=1)
  - children: ALPeopleList.using(ask_number=True, complete_attribute="complete")
  - petitioner_other_children: ALPeopleList.using(ask_number=True, complete_attribute="complete")
  - respondent_other_children: ALPeopleList.using(ask_number=True, complete_attribute="complete")
  - other_parties_parents: ALPeopleList.using(complete_attribute="complete")
  - other_properties: ALAddressList.using(complete_attribute="complete")
  - ppo_harm_protectees: ALPeopleList.using(complete_attribute="complete")
  - ppo_harm_protectees_list: DAList.using(auto_gather=False)
  - ppo_threat_protectees: ALPeopleList.using(complete_attribute="complete")
  - ppo_threat_protectees_list: DAList.using(auto_gather=False)
  - ppo_sexual_assault_threat_protectees: ALPeopleList.using(complete_attribute="complete")
  - ppo_sexual_assault_threat_protectees_list: DAList.using(auto_gather=False)
  - pending_actions: DAList.using(object_type=DAObject, complete_attribute="complete")
  - orders_judgments: DAList.using(object_type=DAObject, complete_attribute="complete")
  - incidents: DAList.using(object_type=DAObject, complete_attribute="complete")
  - accounts: DAList.using(object_type=DAObject, complete_attribute="complete")
---
#################### Interview Order Start #####################
---
id: interview_order_ppo_and_proposed_order
mandatory: True
code: |
  nav.set_section("review_intro")
  MLH_intro_screen
  MLH_intro_roles
  MLH_intro_time
  MLH_agree_terms
  MLH_intro_navigate_save
  if not MLH_intro_agree_no_pii:
    MLH_intro_agree_no_pii_exit

  nav.set_section("review_petitioner_info")

  if is_incapacitated_adult:
    if next_friends.there_are_any:
      next_friends.gather()
      set_next_friend
      if not next_friend_agrees_to_sign:
        next_friend_signature_notice
      continue_as_next_friend_for_lii
    else:
      unauthorized_to_file_for_lii_kickout

  users.gather()

  petitioner_lives_in_michigan

  for user in users:
    user.birthdate

  check_if_petitioner_under_fourteen
  check_if_petitioner_minor
  if petitioner_is_minor:
    if is_incapacitated_adult:
      inconsistent_age_kickout
    else:
      if not petitioner_is_emancipated_minor:
        if next_friends.there_are_any:
          next_friends.gather()
          if next_friend_agrees_to_role:
            set_next_friend
            if not next_friend_agrees_to_sign:
              next_friend_signature_notice
          else:
            next_friend_role_kickout
        else:
          minor_kickout

  respondent_lives_in_michigan
  if (not petitioner_lives_in_michigan) and (not respondent_lives_in_michigan):
    parties_reside_outside_michigan_kickout
  knows_respondents_birthdate

  check_if_respondent_minor
  if respondent_is_minor:
    if (not respondent_is_emancipated_minor):
      if respondent_is_petitioners_child:
        respondent_petitioners_child_kickout

  set_relationship_choices

  if ppo_type == "nondomestic_sexual_assault":
    ppo_nondomestic_intro

  if ppo_type == "nondomestic":
    ppo_nondomestic_intro
    if not has_two_separate_noncontinuous_incidents:
      separate_noncontinuous_incidents_kickout

  if ppo_type == "domestic":
    petitioner_respondent_relationship
    set_petitioner_respondent_relationship

  set_ppo_type_full

  check_if_any_protectees

  county_choice
  court_index
  the_court
  for user in users:
    if county_choice == "Oakland":
      if not wants_confidential_contact_details:
        safe_contact_info_notice
    else:
      safe_contact_info_notice
    user.address.address
    if county_choice == "Oakland":
      if user_alias.there_are_any:
        user_alias.gather()
    if county_choice == "Oakland" and ppo_type == "domestic":
      user.gender

  nav.set_section("review_respondent_info")
  respondent_intro_screen
  other_parties.gather()
  if county_choice == "Oakland":
    if other_party_alias.there_are_any:
      other_party_alias.gather()

  if respondent_is_minor:
    if (not respondent_is_emancipated_minor):
      other_parties_parents_intro
      other_parties_parents.gather()

  set_parties_same_gender
  check_other_party_address_set_to_user_address
  respondent_carries_firearm_for_work_asked

  if county_choice == "Oakland":
    if ppo_type != "domestic":
      if has_minor_children_in_common:
        common_children_kickout
    else:
      domestic_ppo_children_intro
      if petitioner_respondent_relationship['have_child']:
        children.target_number
        children.gather()
      if len(children.complete_elements()) > 1:
        if custody_parenting_time_provisions_same:
          desired_parenting_time_changes
          if desired_parenting_time_changes == "no_change_except_exchange":
            exchange_location
      if petitioner_has_other_children:
        petitioner_other_children.target_number
        petitioner_other_children.gather()
      if respondent_has_other_children:
        if petitioner_knows_respondent_other_children_names:
          respondent_other_children.target_number
          respondent_other_children.gather()

  if pending_actions.there_are_any:
    pending_actions.gather()
  pending_actions_asked
  if orders_judgments.there_are_any:
    orders_judgments.gather()
  orders_judgments_asked

  nav.set_section("review_abuse_history_info")
  if ppo_type == "domestic":
    abuse_history_intro
    abuse_history_intro_2
    abuse_history_intro_3
    abuse_history_intro_4

  if ppo_type == "nondomestic":
    stalking_harassing_intro
    abuse_history_intro_2
    abuse_history_intro_3
    stalking_history_intro

  if ppo_type == "nondomestic_sexual_assault":
    sexual_assault_intro

    if respondent_sexual_assault_conviction:
      orders_judgments_include_sa_conviction
    else:
      if fears_future_sexual_assault:
        potential_sexual_assault_exp
      else:
        no_past_or_potential_sexual_assault_kickout

  if ppo_type != "nondomestic_sexual_assault":
    incidents.gather()
    if ppo_type == "nondomestic" and len(incidents.complete_elements()) < 2:
      separate_noncontinuous_incidents_kickout

    other_details

  nav.set_section("review_what_you_want_in_ppo_info")
  relief_requested_intro

  if ppo_type == "domestic":
    if wants_no_entering_residential_property:
      if not has_property_interest_in_home:
        if respondent_has_property_interest_in_home:
          cannot_prohibit_respondent_entering_property
    set_no_entering_residential_property
    if other_properties.there_are_any:
      other_properties.gather()
    check_wants_no_entering_other_property
    wants_no_harming_petitioner
    if ppo_harm_protectees.there_are_any:
      ppo_harm_protectees.gather()
    check_wants_no_harming_people
    check_ppo_harm_protectees_list
    wants_no_removing_minor

  if ppo_type == "nondomestic_sexual_assault":
    if wants_no_entering_residential_property:
      if not has_property_interest_in_home:
        if respondent_has_property_interest_in_home:
          cannot_prohibit_respondent_entering_property
    set_no_entering_residential_property
    
    if other_properties.there_are_any:
      other_properties.gather()
    check_wants_no_entering_other_property

    wants_no_sexual_assault_threats
    if ppo_sexual_assault_threat_protectees.there_are_any:
      ppo_sexual_assault_threat_protectees.gather()
    check_wants_no_sexual_assault_threatening_others
    check_ppo_sexual_assault_threat_protectees_list

  if ppo_type != "nondomestic_sexual_assault":
    no_stalking_choices
    set_stalking_options

  if ppo_type == "domestic":
    wants_no_children_property_removal_interference

  if ppo_type != "nondomestic_sexual_assault":
    wants_no_threatening_petitioner

  if ppo_type == "domestic":
    if ppo_threat_protectees.there_are_any:
      ppo_threat_protectees.gather()
    check_wants_no_threatening_others
    check_ppo_threat_protectees_list
    wants_no_work_education_interference
    wants_no_access_to_personal_info_records
    no_mental_distress_or_control_choices
    set_mental_distress_control_options

  wants_no_firearm_purchase_or_possession

  if ppo_type == "nondomestic_sexual_assault":
    wants_no_children_property_removal_interference
    wants_no_work_education_interference
    no_stalking_choices
    set_stalking_options

  if ppo_type != "domestic":
    wants_no_message_posting

  if county_choice == "Ingham" or county_choice == "Jackson" or county_choice == "Wayne":
    need_ex_parte
    set_ex_parte
  else:
    wants_other_request
    if wants_ex_parte_order:
      ex_parte_yes_screen

  nav.set_section("review_get_forms_info")
  efile_notice

  if is_incapacitated_adult or (petitioner_is_minor and (not petitioner_is_emancipated_minor)):
    if next_friend_agrees_to_sign:
      signature_date
  else:
    if MLH_esign:
      signature_date

  personal_protection_order_download

  interview_ppo_and_proposed_order = True
---
#################### Interview Order End #####################
---
#################### Other Code Blocks Start #####################
---
generic object: ALIndividual
code: |
  if x.no_phone_number:
    x.phone_number = "Does not have phone"
---
code: |
  if users[0].no_phone_number:
    users[0].phone_number = "Does not have phone"
---
code: |
  users.there_is_another = False
---
code: |
  next_friends.there_is_another = False
---
code: |
  other_parties.there_is_another = False
---
code: |
  if respondent_is_minor and (not respondent_is_emancipated_minor):
    other_parties_parents.there_are_any = True
---
code: |
  if users[0].age_in_years() < 18:
    petitioner_is_minor = True
  else:
    petitioner_is_minor = False
  check_if_petitioner_minor = True
---
code: |
  if users[0].age_in_years() < 14:
    petitioner_under_fourteen = True
  else:
    petitioner_under_fourteen = False
  check_if_petitioner_under_fourteen = True
---
code: |
  if knows_respondents_birthdate:
    if other_parties[0].age_in_years() < 18:
      respondent_is_minor = True
    else:
      respondent_is_minor = False
  elif (not knows_respondents_birthdate):
    if other_parties[0].estimated_age < 18:
      respondent_is_minor = True
    else:
      respondent_is_minor = False
  else:
    respondent_is_minor = False

  check_if_respondent_minor = True
---
#NOTE: last item (petitioner_respondent_parent_child) not yet connected to anything in PDF templates
code: |
  if married_choice:
    if petitioner_respondent_relationship['married']:
      petitioner_respondent_married = True

  if was_married_choice:
    if petitioner_respondent_relationship['was_married']:
      petitioner_respondent_prev_married = True

  if petitioner_respondent_relationship['have_child']:
    petitioner_respondent_have_child = True

  if petitioner_respondent_relationship['dating']:
    petitioner_respondent_dating = True

  if petitioner_respondent_relationship['live_together']:
    petitioner_respondent_share_household = True

  if parent_choice:
    if petitioner_respondent_relationship['parent']:
      petitioner_respondent_parent_child = True

  set_petitioner_respondent_relationship = True
---
code: |
  if (ppo_type == "domestic") and (petitioner_and_respondent_living_together):
    other_parties[0].address.address = users[0].address.address
    other_parties[0].address.unit = users[0].address.unit
    other_parties[0].address.city = users[0].address.city
    other_parties[0].address.state = users[0].address.state
    other_parties[0].address.zip = users[0].address.zip
    other_parties[0].address.country = users[0].address.country
    
  check_other_party_address_set_to_user_address = True
---
code: |
  other_parties[0].height = str(other_parties[0].height_feet) + " ft, " + str(other_parties[0].height_inches) + " in"
---
code: |
  if other_parties[0].carries_gun_for_work == 'yes':
    respondent_carries_firearm_for_work_known = True

  if other_parties[0].carries_gun_for_work == 'unknown':
    respondent_carries_firearm_for_work_unknown = True

  respondent_carries_firearm_for_work_asked = True
---
code: |
  if len(pending_actions.complete_elements()) > 0:
    pending_actions_between_parties_yes = True
  else:
    pending_actions_between_parties_yes = False
    pending_actions_between_parties_no = True

  pending_actions_asked = True
---
code: |
  if pending_actions[i].court_name and pending_actions[i].court_county:
    pending_actions[i].court_info_line = str(pending_actions[i].court_name) + ", " + str(pending_actions[i].court_county)
  elif pending_actions[i].court_name:
    pending_actions[i].court_info_line = str(pending_actions[i].court_name)
  elif pending_actions[i].court_county:
    pending_actions[i].court_info_line = str(pending_actions[i].court_county)
  else:
    pending_actions[i].court_info_line = ""
---
code: |
  if len(orders_judgments.complete_elements()) > 0:
    orders_judgments_re_parties_yes = True
  else:
    orders_judgments_re_parties_yes = False
    orders_judgments_re_parties_no = True

  orders_judgments_asked = True
---
code: |
  if orders_judgments[i].court_name and orders_judgments[i].court_county:
    orders_judgments[i].court_info_line = str(orders_judgments[i].court_name) + ", " + str(orders_judgments[i].court_county)
  elif orders_judgments[i].court_name:
    orders_judgments[i].court_info_line = str(orders_judgments[i].court_name)
  elif orders_judgments[i].court_county:
    orders_judgments[i].court_info_line = str(orders_judgments[i].court_county)
  else:
    orders_judgments[i].court_info_line = ""
---
code: |
  incidents.there_are_any = True
---
code: |
  other_properties.there_is_another = False
---
code: |
  if other_properties.there_are_any:
    wants_no_entering_other_property = True
  check_wants_no_entering_other_property = True
---
code: |
  if wants_no_harming_petitioner or ppo_harm_protectees.there_are_any:
    wants_no_harming_people = True
  check_wants_no_harming_people = True
---
code: |
  ppo_harm_protectees_list_temp = []

  if wants_no_harming_petitioner:
    ppo_harm_protectees_list_temp.append(users[0])

  if ppo_harm_protectees.there_are_any:
    for person in ppo_harm_protectees:
      ppo_harm_protectees_list_temp.append(person)

  ppo_harm_protectees_list = DAList(elements=ppo_harm_protectees_list_temp, auto_gather=False, gathered=True)

  check_ppo_harm_protectees_list = True
---
code: |
  if no_stalking_choices['following']:
    stalking_includes_following_appearing_in_sight = True
    wants_no_stalking = True

  if no_stalking_choices['communications']:
    stalking_includes_sending_communications = True
    wants_no_stalking = True

  if no_stalking_choices['approaching']:
    stalking_includes_approaching_confronting_in_public = True
    wants_no_stalking = True

  if no_stalking_choices['entering_property']:
    stalking_includes_being_on_petitioners_property = True
    wants_no_stalking = True

  if no_stalking_choices['placing_object']:  
    stalking_includes_leaving_object = True
    wants_no_stalking = True

  if no_stalking_choices['appear_work_residence']:  
    stalking_includes_appearing_at_petitioners_work = True
    wants_no_stalking = True

  if no_stalking_choices['phone_contact']:  
    stalking_includes_phone_contact = True
    wants_no_stalking = True

  set_stalking_options = True
---
code: |
  if wants_no_threatening_petitioner or ppo_threat_protectees.there_are_any:
    wants_no_threatening_others = True
  check_wants_no_threatening_others = True
---
code: |
  if wants_no_sexual_assault_threats or ppo_sexual_assault_threat_protectees.there_are_any:
    wants_no_sexual_assault_threatening_others = True
  check_wants_no_sexual_assault_threatening_others = True
---
code: |
  ppo_threat_protectees_list_temp = []

  if wants_no_threatening_petitioner:
    ppo_threat_protectees_list_temp.append(users[0])

  if ppo_threat_protectees.there_are_any:
    for person in ppo_threat_protectees:
      ppo_threat_protectees_list_temp.append(person)

  ppo_threat_protectees_list = DAList(elements=ppo_threat_protectees_list_temp, auto_gather=False, gathered=True)

  check_ppo_threat_protectees_list = True
---
code: |
  ppo_sexual_assault_protectees_list_temp = []

  if wants_no_sexual_assault_threats:
    ppo_sexual_assault_protectees_list_temp.append(users[0])

  if ppo_sexual_assault_threat_protectees.there_are_any:
    for person in ppo_sexual_assault_threat_protectees:
      ppo_sexual_assault_protectees_list_temp.append(person)

  ppo_sexual_assault_protectees_list = DAList(elements=ppo_sexual_assault_protectees_list_temp, auto_gather=False, gathered=True)

  check_ppo_sexual_assault_threat_protectees_list = True
---
code: |
  if no_mental_distress_or_control_choices['harming_animal']:
    intentional_mental_distress_includes_animal_harm = True
    wants_no_intentional_mental_distress_or_control = True

  if no_mental_distress_or_control_choices['removing_animal']:
    intentional_mental_distress_includes_removing_animal = True
    wants_no_intentional_mental_distress_or_control = True

  if no_mental_distress_or_control_choices['keeping_animal']:
    intentional_mental_distress_includes_retaining_animal = True
    wants_no_intentional_mental_distress_or_control = True

  set_mental_distress_control_options = True
---
code: |
  if ppo_type == "domestic":
    ppo_type_full = "Domestic"
  elif ppo_type == "nondomestic":
    ppo_type_full = "Non-Domestic"
  elif ppo_type == "nondomestic_sexual_assault":
    ppo_type_full = "Non-Domestic Sexual Assault"

  set_ppo_type_full = True
---
code: |
  if ppo_type == "nondomestic" or ppo_type == "nondomestic_sexual_assault":
    ppo_harm_protectees.there_are_any = False
    ppo_threat_protectees.there_are_any = False

  check_if_any_protectees = True
---
code: |
  if is_incapacitated_adult:
    has_next_friend_petitioning = True
  else:
    if next_friend_agrees_to_role:
      has_next_friend_petitioning = True

  set_next_friend = True
---
code: |
  if wants_no_entering_residential_property:
    if not has_property_interest_in_home:
      if respondent_has_property_interest_in_home:
        no_entering_residential_property = False
      else:
        no_entering_residential_property = True
    else:
      no_entering_residential_property = True

  set_no_entering_residential_property = True
---
code: |
  if respondent_is_minor and (not respondent_is_emancipated_minor):
    parent_choice = False
    was_married_choice = False
    married_choice = False
  elif (not petitioner_is_minor) and respondent_is_minor and respondent_is_emancipated_minor:
    parent_choice = False
    married_choice = True
    was_married_choice = True
  else:
    parent_choice = True
    married_choice = True
    was_married_choice = True

  set_relationship_choices = True
---
code: |
  relationship_choices = list() 
  if married_choice:
    relationship_choices.append({'married':'I am married to them'})
  if was_married_choice:
    relationship_choices.append({'was_married':'I was once married to them'})
  relationship_choices.append({'have_child':'We have a child together'})
  relationship_choices.append({'live_together':'We live together or used to live together'})
  relationship_choices.append({'dating':'We dated or are dating'}) 
  if parent_choice: 
    relationship_choices.append({'parent':'They are my parent and we live together'})
---
code: |
  if other_parties_parents[i].shares_respondent_address:
    other_parties_parents[i].address.address = other_parties[0].address.address
    other_parties_parents[i].address.unit = other_parties[0].address.unit
    other_parties_parents[i].address.city = other_parties[0].address.city
    other_parties_parents[i].address.state = other_parties[0].address.state
    other_parties_parents[i].address.zip = other_parties[0].address.zip

  set_shared_respondent_address = True
---
code: |
  if county_choice == "Ingham" or county_choice == "Jackson" or county_choice == "Wayne":
    wants_ex_parte_order = True

  set_ex_parte = True
---
# code: |
#   if county_choice == "Oakland":
#     if ((not other_parties[0].address.address) or (not other_parties[0].address.city) or (other_parties[0].address.state)) and (not other_parties[0].phone_number):
#       respondent_contact_info_kickout

#   check_oakland_respondent_contact_info = True
---
#################### Other Code Blocks End #####################
---
# NOTE: for users and other_parties
generic object: ALIndividual
code: |
  x.name.first
  x.complete = True
---
# Tells court_index which court to choose
code: |
  court_index = next(court_list.filter_courts_by_2([county_choice], ['circuit'], column_1='address_county', column_2='type'))[0]
---
code: |
  users[i].name.first
  users[i].complete = True
---
code: |
  user_alias[i].name.first
  user_alias[i].complete = True
---
code: |
  other_party_alias[i].name.first
  other_party_alias[i].complete = True
---
code: |
  next_friends[i].name.first
  next_friends[i].complete = True
---
code: |
  children[i].name.first
  if ppo_type == "domestic":
    if petitioner_respondent_relationship['have_child']:
      children[i].lives_with
      if not children[i].parties_married_when_born:
        if parties_same_gender:
          if children[i].was_adopted:
            children[i].adoption_case_number
            children[i].adoption_case_court
          else:
            children[i].legal_parent
        else:
          children[i].paternity
          if children[i].paternity == "by_court_order" or children[i].paternity == "paternity_case_pending":
            children[i].paternity_case_number
            children[i].paternity_case_court_name
      if children[i].has_order_in_effect:
        children[i].custody_case_number
        children[i].custody_case_court
        children[i].physical_custody_by_order
        if children[i].parenting_time_order == "one_parent_supervised":
          children[i].who_has_supervised_time
          children[i].who_supervises_parenting_time
        elif children[i].parenting_time_order == "one_parent_no_parenting_time":
          children[i].parent_whithout_parenting_time
  if i < 1:
    if children.target_number > 1:
      custody_parenting_time_provisions_same
    children[i].desired_parenting_time_changes
    if children[i].desired_parenting_time_changes == "no_change_except_exchange":
      children[i].exchange_location
  else:
    if not custody_parenting_time_provisions_same:
      children[i].desired_parenting_time_changes
      if children[i].desired_parenting_time_changes == "no_change_except_exchange":
        children[i].exchange_location

  children[i].complete = True
---
code: |
  petitioner_other_children[i].name.first
  if petitioner_other_children[i].knows_other_child_birthdate:
    petitioner_other_children[i].birthdate
  else:
    petitioner_other_children[i].estimated_age

  petitioner_other_children[i].complete = True
---
code: |
  respondent_other_children[i].name.first
  if respondent_other_children[i].knows_other_child_birthdate:
    respondent_other_children[i].birthdate
  else:
    respondent_other_children[i].estimated_age

  respondent_other_children[i].complete = True
---
code: |
  other_parties[i].name.first
  if ppo_type == "domestic":
    if not petitioner_and_respondent_living_together:
      other_parties[i].address.address
  else:
    other_parties[i].address.address
  if other_parties[i].no_phone_number:
    other_parties[i].phone_number = "Does not have phone"
  if county_choice == "Oakland":
    if ((other_parties[0].address.address == "") or (other_parties[0].address.city == "") or (other_parties[0].address.state == "")) and (other_parties[0].no_phone_number):
      respondent_contact_info_kickout
  other_parties[i].race
  other_parties[i].gender
  other_parties[i].height_feet
  other_parties[i].height
  other_parties[i].weight
  other_parties[i].hair_color
  other_parties[i].eye_color
  other_parties[i].license_number
  other_parties[i].other_identifying_info
  other_parties[i].carries_gun_for_work
  other_parties[i].complete = True
---
code: |
  other_parties_parents[i].name.first
  if ppo_type == "domestic":
    if not petitioner_and_respondent_living_together: 
      if other_parties_parents[i].shares_respondent_address:
        set_shared_respondent_address
      else:
        other_parties_parents[i].address.address
    else:
      other_parties_parents[i].address.address
  else:
    if other_parties_parents[i].shares_respondent_address:
      set_shared_respondent_address
    else:
      other_parties_parents[i].address.address
  if other_parties_parents[i].no_phone_number:
    other_parties_parents[i].phone_number = "Does not have phone"
  other_parties_parents[i].complete = True
---
code: |
  pending_actions[i].docket_number
  pending_actions[i].court_name
  pending_actions[i].court_county
  pending_actions[i].court_state
  pending_actions[i].judge
  pending_actions[i].complete = True
---
code: |
  orders_judgments[i].docket_number
  orders_judgments[i].court_name
  orders_judgments[i].court_county
  orders_judgments[i].court_state
  orders_judgments[i].judge
  orders_judgments[i].complete = True
---
code: |
  if (ppo_type == "nondomestic" or ppo_type == "nondomestic_sexual_assault") and len(incidents.complete_elements()) > 0:
    nondomestic_subsequent_incident_intro
  incidents[i].date
  incidents[i].location
  incidents[i].other_party_actions
  if (ppo_type == "nondomestic") or (ppo_type == "nondomestic_sexual_assault"):
    incidents[i].reason_other_party_responsible
  incidents[i].emotional_effect
  if ppo_type == "domestic":
    incidents[i].petitioner_injured
  incidents[i].had_witnesses
  if incidents[i].had_police:
    incidents_outro
  incidents[i].complete = True
---
code: |
  other_properties[i].address
  other_properties[i].complete = True
---
code: |
  ppo_harm_protectees[i].name.first
  ppo_harm_protectees[i].complete = True
---
code: |
  ppo_threat_protectees[i].name.first
  ppo_threat_protectees[i].complete = True
---
code: |
  ppo_sexual_assault_threat_protectees[i].name.first
  ppo_sexual_assault_threat_protectees[i].complete = True
---
code: |
  if (users[0].gender == "M" and other_parties[0].gender == "M") or (users[0].gender == "F" and other_parties[0].gender == "F"):
    parties_same_gender = True
  else:
    parties_same_gender = False

  set_parties_same_gender = True
---
#################### Overridden AL Questions Start #####################
---
id: your name
sets:
  - users[0].name.first
  - users[0].name.middle
  - users[0].name.last
  - users[0].name.suffix
question: |
  Enter your name
fields:
  - code: |
      users[0].name_fields()
---
id: petitioner alias
sets:
  - user_alias[i].name.first
  - user_alias[i].name.middle
  - user_alias[i].name.last
  - user_alias[i].name.suffix
question: |
  Enter the ${ ordinal(i) } other name you have been known by
fields:
  - code: |
      user_alias[i].name_fields()
---
id: respondent alias
sets:
  - other_party_alias[i].name.first
  - other_party_alias[i].name.middle
  - other_party_alias[i].name.last
  - other_party_alias[i].name.suffix
question: |
  Enter the ${ ordinal(i) } other name ${ other_parties[0] } has been known by
fields:
  - code: |
      other_party_alias[i].name_fields()
---
id: petitioner contact info
sets:
  - users[0].address.address
  - users[0].address.city
  - users[0].address.zip
  - users[0].address.unit
  - users[0].address.state
  - users[0].phone_number
question: |
  % if county_choice == "Oakland" and wants_confidential_contact_details:
  Enter your address and phone number
  % else:
  Enter your address and a phone number where the court can reach you
  % endif
subquestion: |
  % if county_choice == "Oakland" and wants_confidential_contact_details:
  *Remember - this information will only appear on a confidential form that is filed with the court. The Respondent will not have access to this information.*
  % endif
fields:
  - code: |
      users[0].address_fields(country_code=AL_DEFAULT_COUNTRY, default_state=AL_DEFAULT_STATE, show_country=True)
  - Phone: users[0].phone_number
    show if:
      variable: users[0].no_phone_number
      is: False
  - I do not have a phone number: users[0].no_phone_number
    required: False
    datatype: yesno
---
id: next friend name
sets:
  - next_friends[0].name.first
  - next_friends[0].name.middle
  - next_friends[0].name.last
  - next_friends[0].name.suffix
question: |
  % if is_incapacitated_adult:
  Enter your name
  % else:
  Enter the name of your next friend
  % endif
subquestion: |
  % if is_incapacitated_adult:
  As the person acting for the legally incapacitated person, you will be considered a **next friend**. 

  The next friend signs the petition for the petitioner, files the petition, goes to any hearings for the petitioner (if needed), and does everything else that is needed unless there is a lawyer.
  % else:
  Make sure that this person agrees to file your petition for you.

  ${ collapse_template(next_friend_explained) }
  % endif
fields:
  - code: |
      next_friends[0].name_fields()
---
id: respondent contact info
sets:
  - other_parties[0].address.address
  - other_parties[0].address.city
  - other_parties[0].address.zip
  - other_parties[0].address.unit
  - other_parties[0].address.state
question: |
  What is ${ other_parties[0].name }'s address?
fields:
  - Street Address or P.O. Box: other_parties[0].address.address
    required: False
  - Apartment, suite, etc.: other_parties[0].address.unit
    required: False
  - City: other_parties[0].address.city
    required: False
  - State: other_parties[0].address.state
    required: False
  - Zip or Postal Code: other_parties[0].address.zip
    required: False
  - Country: other_parties[0].country
    required: False
---
id: respondent name
sets:
  - other_parties[0].name.first
  - other_parties[0].name.middle
  - other_parties[0].name.last
  - other_parties[0].name.suffix
question: |
  Enter the Respondent's name
fields:
  - code: |
      other_parties[0].name_fields()
---
id: respondent phone number
sets:
  - other_parties[0].phone_number
question: |
  Enter ${ other_parties[0].name }'s telephone number
subquestion: |
  If none or unknown, leave blank.
fields:
  - Phone: other_parties[0].phone_number
    show if:
      variable: other_parties[0].no_phone_number
      is: False
  - I do not know of any phone number for ${ other_parties[0] }: other_parties[0].no_phone_number
    required: False
    datatype: yesno
---
id: respondent parent name
sets:
  - other_parties_parents[i].name.first
  - other_parties_parents[i].name.middle
  - other_parties_parents[i].name.last
  - other_parties_parents[i].name.suffix
question: |
  % if len(other_parties_parents.complete_elements()) < 1:
  Enter the name of one of ${ other_parties[0] }'s parent, guardian, or custodian
  % else:
  Enter the name of ${ other_parties[0] }'s other parent, guardian, or custodian
  % endif
fields:
  - code: |
      other_parties_parents[i].name_fields()
---
id: respondent parent contact info
sets:
  - other_parties_parents[i].address.address
  - other_parties_parents[i].address.city
  - other_parties_parents[i].address.zip
  - other_parties_parents[i].address.unit
  - other_parties_parents[i].address.state
question: |
  What is ${ other_parties_parents[i].name }'s address?
fields:
  - Street Address or P.O. Box: other_parties_parents[i].address.address
    required: False
  - Apartment, suite, etc.: other_parties_parents[i].address.unit
    required: False
  - City: other_parties_parents[i].address.city
    required: False
  - State: other_parties_parents[i].address.state
    required: False
  - Zip or Postal Code: other_parties_parents[i].address.zip
    required: False
  - Country: other_parties_parents[i].country
    required: False
validation code: |
  if len(other_parties_parents.complete_elements()) > 0:
    other_parties_parents.there_is_another = False
---
id: other_parties_parents there_is_another
question: |
  Does ${ other_parties[0].name } have another parent, guardian, or custodian?
fields:
  - no label: other_parties_parents.there_is_another
    datatype: yesnoradio
---
id: does respondent parent share address with respondent
question: |
  ${ other_parties_parents[i].name }'s address
fields:
  - Does ${ other_parties_parents[i].name } have the same address as ${ other_parties[0].name }?: other_parties_parents[i].shares_respondent_address
    datatype: yesnoradio
---
id: respondent parent phone number
sets:
  - other_parties_parents[i].phone_number
question: |
  Enter ${ other_parties_parents[i].name }'s telephone number
subquestion: |
  If none or unknown, leave blank.
fields:
  - Phone: other_parties_parents[i].phone_number
    show if:
      variable: other_parties_parents[i].no_phone_number
      is: False
  - I do not know of any phone number for ${ other_parties_parents[i] }: other_parties_parents[i].no_phone_number
    required: False
    datatype: yesno
---
id: children info
sets:
  - children[i].name.first
  - children[i].name.middle
  - children[i].name.last
  - children[i].name.suffix
question: |
  % if children.target_number > 1:
  Enter the ${ ordinal(i) } child's information
  % else:
  Enter the child's information
  % endif
fields:
  - code: |
      children[i].name_fields()
  - Birthdate: children[i].birthdate
    datatype: date
---
id: petitioner_other_children info
sets:
  - petitioner_other_children[i].name.first
  - petitioner_other_children[i].name.middle
  - petitioner_other_children[i].name.last
  - petitioner_other_children[i].name.suffix
question: |
  % if petitioner_other_children.target_number > 1:
  Enter the ${ ordinal(i) } other child's information
  % else:
  Enter the other child's information
  % endif
fields:
  - code: |
      petitioner_other_children[i].name_fields()
---
id: petitioner_other_children birthdate
question: |
  ${ petitioner_other_children[i] }'s date of birth
fields:
  - Do you know the ${ petitioner_other_children[i].familiar() }'s exact date of birth?: petitioner_other_children[i].birthdate_known
    datatype: yesnoradio
  - Enter the ${ petitioner_other_children[i].familiar() }'s date of birth: petitioner_other_children[i].birthdate
    datatype: date
    show if:
      variable: petitioner_other_children[i].birthdate_known
      is: True
  - Even if you do not know the Respondent's exact date of birth, you must provide your best guess of their age: petitioner_other_children[i].estimated_age
    datatype: integer
    show if:
      variable: petitioner_other_children[i].birthdate_known
      is: False
---
id: respondent_other_children info
sets:
  - respondent_other_children[i].name.first
  - respondent_other_children[i].name.middle
  - respondent_other_children[i].name.last
  - respondent_other_children[i].name.suffix
question: |
  % if respondent_other_children.target_number > 1:
  Enter ${ other_parties[0] }'s ${ ordinal(i) } other child's information
  % else:
  Enter ${ other_parties[0] }'s other child's information
  % endif
fields:
  - code: |
      respondent_other_children[i].name_fields()
---
id: who does child love with?
question: |
  ${ children[i] }'s residence
fields:
  - Who does ${ children[i].familiar() } currently live with?: children[i].lives_with
    datatype: radio
    choices:
      - With me: petitioner
      - With ${ other_parties[0] }: respondent
      - With someone else: someone_else
---
id: married when child born
question: |
  Were you married to ${ other_parties[0] } when ${ children[i].familiar() } was born?
fields:
  - no label: children[i].parties_married_when_born
    datatype: yesnoradio
---
id: custody or parenting time order
question: |
  Custody or parenting time orders
subquestion: |
  ${ collapse_template(custody_parenting_time_order_explained) }
fields:
  - Is there a custody or parenting time order in effect for ${ children[i].familiar() }?: children[i].has_order_in_effect
    datatype: yesnoradio
---
template: custody_parenting_time_order_explained
subject: |
  More Information
content: |
  If there is a custody order, there is usually a parenting time provision in that order. 
  If the parents are divorced, the *Judgment of Divorce* should include custody and parenting time provisions for all children born during the marriage; 
  this is one type of custody/parenting time order.
---
id: other property address
sets:
  - other_properties[0].address
  - other_properties[0].city
  - other_properties[0].zip
  - other_properties[0].unit
  - other_properties[0].state
  - other_properties[0].country
question: |
  Enter the address of the other property
fields:
  - code: |
      other_properties[0].address_fields(country_code=AL_DEFAULT_COUNTRY, default_state=AL_DEFAULT_STATE, show_country=False)
---
id: ppo_harm_protectees name
sets:
  - ppo_harm_protectees[i].name.first
  - ppo_harm_protectees[i].name.middle
  - ppo_harm_protectees[i].name.last
  - ppo_harm_protectees[i].name.suffix
question: |
  Provide the name of the ${ ordinal(i) } other person you want protected from assaults, attacks, beatings, molesting, or wounding
subquestion: |
  ${ collapse_template(harm_protectees_listed_so_far) }
fields:
  - code: |
      ppo_harm_protectees[i].name_fields()
---
id: ppo_threat_protectees name
sets:
  - ppo_threat_protectees[i].name.first
  - ppo_threat_protectees[i].name.middle
  - ppo_threat_protectees[i].name.last
  - ppo_threat_protectees[i].name.suffix
question: |
  Provide the name of the ${ ordinal(i) } other person you want protected from threats of physical injury or death
subquestion: |
  ${ collapse_template(threat_protectees_listed_so_far) }
fields:
  - code: |
      ppo_threat_protectees[i].name_fields()
---
id: ppo_sexual_assault_threat_protectees name
sets:
  - ppo_sexual_assault_threat_protectees[i].name.first
  - ppo_sexual_assault_threat_protectees[i].name.middle
  - ppo_sexual_assault_threat_protectees[i].name.last
  - ppo_sexual_assault_threat_protectees[i].name.suffix
question: |
  Provide the name of the ${ ordinal(i) } other person you want protected from threats of sexual assault, physical injury, or death
subquestion: |
  ${ collapse_template(ppo_sexual_assault_threat_protectees_listed_so_far) }
fields:
  - code: |
      ppo_sexual_assault_threat_protectees[i].name_fields()
---
#################### Overridden AL Questions End #####################
---
id: petitioner alias there_are_any
question: |
  Your aliases
fields:
  - Have you ever been known by another name?: user_alias.there_are_any
    datatype: yesnoradio
---
id: petitioner alias there_is_another
question: |
  Your aliases
subquestion: |
  ${ collapse_template(user_alias_list_template) }
fields:
  - Have you ever been known by any other name?: user_alias.there_is_another
    datatype: yesnoradio
---
template: user_alias_list_template
subject: Which aliases have I listed so far?
content: |
  % if len(user_alias.complete_elements()) > 0:
  So far you have listed:

  % for alias in user_alias:

    * ${ alias }

  % endfor
  % else:
  You have not listed any aliases yet.
  % endif
---
id: respondent alias there_are_any
question: |
  ${ other_parties[0] }'s aliases
fields:
  - Has ${ other_parties[0] } ever been known by another name?: other_party_alias.there_are_any
    datatype: yesnomaybe
---
id: respondent alias there_is_another
question: |
  ${ other_parties[0] }'s aliasess
subquestion: |
  subquestion: |
  ${ collapse_template(other_party_alias_list_template) }
fields:
  - Has ${ other_parties[0] } ever been known by any other name?: other_party_alias.there_is_another
    datatype: yesnoradio
---
template: other_party_alias_list_template
subject: Which aliases have I listed so far?
content: |
  % if len(other_party_alias.complete_elements()) > 0:
  So far you have listed:

  % for alias in other_party_alias:

    * ${ alias }

  % endfor
  % else:
  You have not listed any aliases yet.
  % endif
---
id: petitioner gender
question: |
  What is your gender?
fields:
  - no label: users[i].gender
    datatype: radio
    choices:
      - Male: M
      - Female: F
---
id: children parentage established through adoption
question: |
  Adoption
subquestion: |
  ${ collapse_template(adoption_explained) }
fields:
  - Was legal parentage for ${ children[i] } established through a second parent adoption or other type of adoption: children[i].was_adopted
    datatype: yesnoradio
---
template: adoption_explained
subject: |
  More Information
content: |
  In states that allow second-parent adoption, a partner who is not biologically related to a child can adopt their partner's biological or adoptive child without terminating the first legal parent's rights. 
  In general, second-parent adoption has not been allowed for unmarried parents in Michigan, but there are some exceptions. Or you may have done a second-parent adoption in another state before becoming a Michigan resident.
---
id: children legal parent
question: |
  ${ children[i] }'s legal parent
fields:
  - Which party is ${ children[i] }'s legal parent: children[i].legal_parent
    datatype: radio
    choices:
      - I am: petitioner
      - ${ other_parties[0] } is: respondent
---
id: children adoption case info
question: |
  ${ children[i] }'s adoption case information
subquestion: |
  Enter the case number and the name of the Court for that adoption case.
fields:
  - Case number: children[i].adoption_case_number
  - Name of Court: children[i].adoption_case_court
---
id: intro_screen FirstScreen
question: |
  Welcome to Michigan Legal Help's Do-It-Yourself Personal Protection Order (PPO) tool
subquestion: |
  This tool will help you prepare the forms you will need to ask the court for a PPO.

  A PPO is one tool to help you stay safe. You may also want to talk to an advocate from a domestic violence and/or sexual assault agency, who can help you make a safety plan. A safety plan is a list of ideas to help increase your safety that is individualized for you.

  ${ collapse_template(respondent_more_help_explained) }
continue button field: MLH_intro_screen
---
template: respondent_more_help_explained
subject: |
  Where can I find more help?
content: |
  A domestic violence and/or sexual assault agency provides free and confidential support services to victims of domestic violence and/or sexual assault. To find an agency in your area, you can return to our website and use the [Guide to Legal Help](https://michiganlegalhelp.org/guide-to-legal-help), or search under [Community Services](https://michiganlegalhelp.org/organizations-and-courts/community-services). You can also call the [National Domestic Violence Hotline](https://www.thehotline.org/) at 1-800-799-SAFE or 1-800-787-3224 TTY.
---
id: intro roles
question: |
  Using this tool
subquestion: |
  We are going to ask questions about you and the Respondent, who is the person you want to be protected from. On the court forms, you are known as the Petitioner, the person filing the petition.

  If you are under 18 years old and are not emancipated, you need a "next friend" to file your petition for you. You can still use this tool to prepare your forms.

continue button field: MLH_intro_roles
---
id: is petitioner legally incapacitated adult
question: |
  Legally incapacitated adult
fields:
  - Will you be filing this PPO petition on behalf of a legally incapacitated adult?: is_incapacitated_adult
    datatype: yesnoradio
  - Have you been named the guardian of this person by court order **OR** do you have a power of attorney that allows you to file for them?: next_friends.there_are_any
    datatype: yesnoradio
    show if:
      variable: is_incapacitated_adult
      is: True
---
id: unauthorized to file for legally incapacitated adult kickout
event: unauthorized_to_file_for_lii_kickout
question: |
  You cannot continue using this tool
subquestion: |
  We're sorry, but you cannot use this tool to prepare a *Petition for Personal Protection Order*.

  Unless you have a guardianship or a power of attorney, you can’t file on behalf of another adult. 

  If you made a mistake, click the **${ MLH_back_button_label }** button to go back and change your answer.
---
id: inconsistent age kickout
event: inconsistent_age_kickout
question: |
  You cannot continue using this tool
subquestion: |
  You previously indicated you were filling out this form on behalf of an incapacitated **adult**, but the date you entered for ${ users[0].possessive('birthday') } makes them a **minor**.

  If you made a mistake, click the **${ MLH_back_button_label }** button to go back and change your answers.
---
id: continue as next friend for incapacitated adult
question: |
  Continue answering for the petitioner
subquestion: |
  You will now continue answering questions **on behalf of the petitioner**. 

  This means that when a question says "you", it refers to the person asking for the PPO and **NOT you, the next friend**.

continue button field: continue_as_next_friend_for_lii
---
template: next_friend_explained
subject: |
  What does a next friend need to do?
content: |
  A next friend will need to:

    1. File your forms for you, which can sometimes be done online, but must sometimes be done in person;
    2. Arrange to have court papers delivered to the other party;
    3. Attend the hearing, if you have one, and speak on your behalf.

  Make sure that your next friend can do **all** of these things.
---
id: user birthdate
question: |
  Enter your date of birth
fields:
  - no label: users[0].birthdate
    datatype: date
    required: True
---
id: emancipated minor
question: |
  Are you an emancipated minor?
subquestion: |
  ${ collapse_template(emancipated_minor_explained) }
fields:
  - no label: petitioner_is_emancipated_minor
    datatype: yesnoradio
---
template: emancipated_minor_explained
subject: |
  What does "emancipated" mean?
content: |
  An emancipated minor is a person under 18 years old whose parents no longer have legal authority over them. 

  Emancipation gives the minor some of the rights and responsibilities of an adult. Emancipation does not make a minor into an adult and does not give the minor adult status for all things. Sometimes a minor is automatically emancipated (for example, when they legally marry), and other times a minor is emancipated by a judge.

  If you are under 18 years old, you cannot file this petition unless you are emancipated. You need help from someone called a next friend. A next friend is usually a parent or other adult whom you trust. Your next friend must file the *Petition for Personal Protection Order* for you.
---
template: emancipated_respondent_minor_explained
subject: |
  What does "emancipated" mean?
content: |
  An emancipated minor is a person under 18 years old whose parents no longer have legal authority over them. 

  Emancipation gives the minor some of the rights and responsibilities of an adult. Emancipation does not make a minor into an adult and does not give the minor adult status for all things. Sometimes a minor is automatically emancipated (for example, when they legally marry), and other times a minor is emancipated by a judge.
---
id: next friend
question: |
  You need a next friend
subquestion: |
  If you are under 18 years old, you cannot get a PPO on your own. You need help from someone called a next friend. 

  A next friend is usually a **parent** or **other adult** whom you trust. Your next friend will file the PPO petition for you.

  ${ collapse_template(next_friend_explained) }

fields:
  - Will you have a next friend file this petition for you?: next_friends.there_are_any
    datatype: yesnoradio
---
id: minor_kickout
event: minor_kickout
question: |
  You cannot continue using this tool
subquestion: |
  We're sorry, but you cannot use this tool to prepare a *Petition for Personal Protection Order*.

  Because you are under 18 and not emancipated, you must have a next friend file your petition for you. 

  If you made a mistake, click the **${ MLH_back_button_label }** button to go back and change your answer. To learn more, read [Minors and Personal Protection Orders](https://michiganlegalhelp.org/self-help-tools/personal-safety/minors-and-personal-protection-orders).
---
id: next friend agrees to role
question: |
  ${ next_friends[0] } must agree to be ${ users[0].possessive('next friend') }
subquestion: |
  Before your *Petition for Personal Protection Order* can be filed, ${ next_friends[0] } must sign it. This tool can place ${ next_friends[0].possessive('e-signature') } on the petition if they agree to it.

  If ${ next_friends[0] } is with you (or if you have a way of contacting them right now), have them read (or read to them) the information on the next pages and answer that they consent to act as your next friend and have their e-signature placed on your forms.

  **If ${ next_friends[0] } is not available** to give their consent right now, exit the interview and start over when they are available.
fields:
  - Do YOU, ${ next_friends[0] }, agree to act as ${ users[0].possessive(' next friend') }?: next_friend_agrees_to_role
    datatype: yesnoradio
---
id: next friend role kickout
event: next_friend_role_kickout
question: |
  You cannot continue using this tool
subquestion: |
  Since you do not agree to act as ${ users[0].possessive(' next friend') }, this tool can’t be used to prepare a PPO.

  If ${ users[0] } wants to continue preparing a PPO, they will need to find another adult who is willing to act as their next friend.

  If you made a mistake, click the **${ MLH_back_button_label }** button to go back and change your answer.
---
id: next friend agrees to sign
question: |
  Your signature
subquestion: |
  This tool can put "**/s/ ${ next_friends[0] }**" where you would sign your name so you do not have to sign the forms by hand. The court will accept this as your signature.
fields:
  - Do YOU, ${ next_friends[0] }, agree to have this tool place your e-signature on the forms?: next_friend_agrees_to_sign
    datatype: yesnoradio
---
id: next friend signature notice
event: next_friend_signature_notice
question: |
  You will still need to sign the forms later
subquestion: |
  If you do not want to have your e-signature added to the forms automatically, you will need to download them, print them, sign them, and scan them before they can be filed.
continue button field: next_friend_signature_notice
---
id: respondent living in michigan
question: |
  ${ users[0] }, does the Respondent (the person you want to be protected from) live in Michigan?
fields:
  - no label: respondent_lives_in_michigan
    datatype: yesnoradio
---
id: petitioner living in michigan
question: |
  Do you live in Michigan?
fields:
  - no label: petitioner_lives_in_michigan
    datatype: yesnoradio
---
id: respondent birthdate
question: |
  Respondent's date of birth
terms:
  Respondent: |
    The Respondent is the person you want to be protected from.
fields:
  - Do you know the {Respondent}'s exact date of birth?: knows_respondents_birthdate
    datatype: yesnoradio
  - Enter the Respondent's date of birth: other_parties[0].birthdate
    datatype: date
    show if:
      variable: knows_respondents_birthdate
      is: True
  - Even if you do not know the Respondent's exact date of birth, you must provide your best guess of their age: other_parties[0].estimated_age
    datatype: integer
    show if:
      variable: knows_respondents_birthdate
      is: False
---
id: petitioner other child birthdate
question: |
  ${ petitioner_other_children[i] }'s date of birth
fields:
  - Do you know ${ petitioner_other_children[i].familiar() }'s exact date of birth?: petitioner_other_children[i].knows_other_child_birthdate
    datatype: yesnoradio
  - Enter ${ petitioner_other_children[i].familiar() }'s date of birth: petitioner_other_children[i].birthdate
    datatype: date
    show if:
      variable: petitioner_other_children[i].knows_other_child_birthdate
      is: True
  - Even if you do not know ${ petitioner_other_children[i].familiar() }'s exact date of birth, you must provide your best guess of their age: petitioner_other_children[i].estimated_age
    datatype: integer
    show if:
      variable: petitioner_other_children[i].knows_other_child_birthdate
      is: False
---
id: respondent other child birthdate
question: |
  ${ respondent_other_children[i] }'s date of birth
fields:
  - Do you know ${ respondent_other_children[i].familiar() }'s exact date of birth?: respondent_other_children[i].knows_other_child_birthdate
    datatype: yesnoradio
  - Enter ${ respondent_other_children[i].familiar() }'s date of birth: respondent_other_children[i].birthdate
    datatype: date
    show if:
      variable: respondent_other_children[i].knows_other_child_birthdate
      is: True
  - Even if you do not know ${ respondent_other_children[i].familiar() }'s exact date of birth, you must provide your best guess of their age: respondent_other_children[i].estimated_age
    datatype: integer
    show if:
      variable: respondent_other_children[i].knows_other_child_birthdate
      is: False
---
id: respondent emancipated minor
question: |
  Respondent's status as minor
subquestion: |
  ${ collapse_template(emancipated_respondent_minor_explained) }
fields:
  - Is the Respondent an emancipated minor?: respondent_is_emancipated_minor
    datatype: yesnoradio
  - Is the Respondent your child?: respondent_is_petitioners_child
    datatype: yesnoradio
    show if:
      variable: respondent_is_emancipated_minor
      is: False
---
id: need respondent parents
question: |
  We need more information about ${ other_parties[0] }
subquestion: |
  Because ${ other_parties[0] } is an unemancipated minor, both ${ other_parties[0] } and their parents, guardians, or custodians must be served with your petition for a personal protection order.
continue button field: need_respondent_parents
---
id: choose ppo type
question: |
  What type of Personal Protection Order do you want to ask the court for?
subquestion: |
  ${ collapse_template(ppo_types_explained) }
fields:
  - no label: ppo_type
    datatype: radio
    choices:
      - 1. Personal Protection Order - Domestic Relationship: domestic
      - 2. Personal Protection Order - Nondomestic Relationship: nondomestic
      - 3. Personal Protection Order - Nondomestic Sexual Assault: nondomestic_sexual_assault
---
template: ppo_types_explained
subject: |
  What's the difference?
content: |
  1. A **Personal Protection Order - Domestic Relationship** is for someone who has or had a domestic relationship with the Respondent. A domestic relationship means:

    * You are/were married to the Respondent
    * You are dating/dated the Respondent
    * You live/lived with the Respondent
    * You have one or more children with the Respondent

  2. A **Personal Protection Order - Nondomestic** is for someone who does not have a domestic relationship with the Respondent.

      A nondomestic personal protection order is used to protect someone from stalking or harassing behavior.

  3. A **Personal Protection Order - Nondomestic Sexual Assault** is for someone who does **not** have a domestic relationship with the Respondent.

      A nondomestic sexual assault personal protection order is used to protect someone from sexual assault and/or threats of sexual assault.
---
id: ppo nondomestic intro
question: |
  You have chosen a type of PPO that is for someone who does not have a domestic relationship with the Respondent.
subquestion: |
  A domestic relationship means:

    * You are/were married to the Respondent;
    * You are dating/dated the Respondent;
    * You live/lived with the Respondent; or
    * You have one or more children with the Respondent.

  If you **do** have a domestic relationship with the Respondent, you cannot use this type of PPO. You should select **Undo** to return to the prior screen and choose **Personal Protection Order - Domestic Relationship**.

  If you **do not** have a domestic relationship with the Respondent, you can continue.

continue button field: ppo_nondomestic_intro
---
id: two or more noncontinuous incidents
question: |
  Were there two or more **separate**, **noncontinuous** incidents where the respondent stalked or harassed you?
subquestion: |
  ${ collapse_template(separate_noncontinuous_incidents_explained) }
fields:
  - no label: has_two_separate_noncontinuous_incidents
    datatype: yesnoradio
---
template: separate_noncontinuous_incidents_explained
subject: |
  What are separate, noncontinuous incidents?
content: |
  There must be at least two separate, noncontinuous incidents of stalking or harassing behavior in order to get a nondomestic PPO. This means that the respondent’s actions against you had to be separate from one another in time and space. Actions that are part of a single event are not separate and noncontinuous. 

  For example, if the respondent approached you, physically harmed you, and then made a verbal threat — and these actions followed immediately one after the other — this would count as only one incident of stalking or harassment, and would not be enough to get a nondomestic PPO.
---
id: separate noncontinuous incidents kickout
event: separate_noncontinuous_incidents_kickout
question: |
  We're sorry, but your answers indicate you don't qualify for a nondomestic (stalking) PPO.
subquestion: |
  To qualify, you must show two or more separate and noncontinuous incidents of stalking or harassing behavior. 

  If you made a mistake, click the **${ MLH_back_button_label }** button to go back and change your answer.

  Otherwise, **Exit** the interview. To find out if you could qualify for a different type of PPO, read [Overview of Personal Protection Orders](https://michiganlegalhelp.org/resources/personal-safety/overview-of-personal-protection-orders).
---
id: parties reside outside michigan kickout
event: parties_reside_outside_michigan_kickout
question: |
  We're sorry, but you cannot use this tool to prepare your forms. At least one of the parties (you or the Respondent) must live in Michigan to use this tool.
subquestion: |
  To qualify, you must show two or more separate and noncontinuous incidents of stalking or harassing behavior. 

  If you made a mistake, click the **${ MLH_back_button_label }** button to go back and change your answer.

  Otherwise, **Exit** the interview.
---
reconsider: relationship_choices
id: relationship to respondent
question: |
  What kind of relationship do/did you have with the Respondent?
fields:
  - Select **all** that apply: petitioner_respondent_relationship
    datatype: checkboxes
    code: |
      relationship_choices
---
id: relationship to respondent kickout
question: |
  You cannot continue using this tool
subquestion: |
  We're sorry, but if you don't have a domestic relationship with the Respondent, you cannot use this tool to prepare a Petition for a domestic relationship *Personal Protection Order*.

  There are different forms available if you need protection from someone who is stalking or harassing you, or from someone who has sexually assaulted you. Read the article [Overview of Personal Protection Orders](https://michiganlegalhelp.org/self-help-tools/personal-safety/overview-personal-protection-orders) to learn if there is a different kind of protection order for you.

  If you made a mistake, click the **${ MLH_back_button_label }** button to go back and change your answer.
---
id: ppo court county_choice
question: |
  In what county will you file your PPO case?
subquestion: |
  % if respondent_is_minor and (not respondent_is_emancipated_minor) and (not respondent_is_petitioners_child) and petitioner_lives_in_michigan and respondent_lives_in_michigan:
  You may file your PPO case either in **your county of residence** or **the Respondent's county of residence**.
  % elif respondent_is_minor and (not respondent_is_emancipated_minor) and (not respondent_is_petitioners_child) and (not petitioner_lives_in_michigan) and respondent_lives_in_michigan:
  Because the Respondent is a minor and you do not live in Michigan, you need to file your PPO case in the county **where the Respondent lives**.

  ${ collapse_template(unknown_minor_respondent_county) }
  % elif respondent_is_minor and (not respondent_is_emancipated_minor) and (not respondent_is_petitioners_child) and petitioner_lives_in_michigan and (not respondent_lives_in_michigan):
  Because the Respondent is a minor and does not live in Michigan, you must file your PPO case in the county **where you live**.
  % else:
  You may file your PPO case in any county in Michigan. However, it will probably be most convenient for you to file either where you live or where the Respondent lives, because there may be future hearings to attend.

  If the Respondent doesn’t know what county you live in and you want to keep your location a secret, it’s probably best to file in a different county.
  % endif
fields:
  - Select the county you will file your PPO case in: county_choice
    code: court_list._load_courts()["address_county"].unique()
---
id: oakland confidential address option
question: |
  Do you want to keep your contact information confidential?
subquestion: |
  In Oakland County, you can choose to keep your address and/or phone number confidential instead of having them on your petition and order. 
  **If the Respondent does not know this information and you would like to keep it confidential, answer Yes below.**

  If you answer **Yes**, your address and phone number will only appear on a confidential form that you will need to file with the court. 
  Your petition and PPO will both say “confidential” in the section where your address and phone number would normally go.

  This is important because if the judge grants your PPO, the Respondent will need to be served with a copy of the petition and order and 
  will see your address and phone number on these forms if you do not keep them confidential.
fields:
  - Would you like to keep your address and phone number confidential?: wants_confidential_contact_details
    datatype: yesnoradio
---
id: unknown respondent residence county kickout
event: unknown_respondent_residence_county_kickout
question: |
  You cannot continue using this tool
subquestion: |
  Based on your answers, you can't use this tool to prepare a *Petition for Personal Protection Order*. If you do not know the county of residence for a respondent who is a minor, there are complicated legal issues that you will need a lawyer to help you with. Use the [Guide to Legal Help](https://michiganlegalhelp.org/guide-to-legal-help) to find a lawyer or legal services in your area.

  If you made a mistake, click the **${ MLH_back_button_label }** button to go back and change your answer.
---
template: unknown_minor_respondent_county
subject: |
  What if I don't know what county the Respondent lives in?
content: |
  If you cannot provide the Respondent's county of residence, you cannot use this tool to prepare a *Petition for Personal Protection Order*.

  If you do not know the county of residence for a respondent who is a minor, there are complicated legal issues that you will need a lawyer to help you with.  

  Use the [Guide to Legal Help](https://michiganlegalhelp.org/guide-to-legal-help) to find a lawyer or legal services in your area.
---
id: respondent is petitioners child kickout
event: respondent_petitioners_child_kickout
question: |
  You cannot continue using this tool
subquestion: |
  We're sorry, but you cannot use this tool to prepare a *Petition for a Personal Protection Order*. Under Michigan law, you cannot get a personal protection order against your unemancipated minor child.

  To learn more, read [Minors and Personal Protection Orders](https://michiganlegalhelp.org/resources/personal-safety/minors-and-personal-protection-orders).

  If you made a mistake, click the **${ MLH_back_button_label }** button to go back and change your answer.
---
id: safe_contact_info_notice
question: |
  For the following, please enter a **SAFE** address and phone number where the court can contact you
subquestion: |
  **DO NOT** enter an address or phone number that you want to keep confidential, because the address and phone number will be part of the court file and will be on the forms given to the Respondent.

  If you don't want the Respondent to know your current address and phone number, you can use a post office box or the address and telephone number of a relative or friend who has agreed to let you do this.

continue button field: safe_contact_info_notice
---
id: respondent intro screen
question: |
  Now we're going to ask you questions about the Respondent, the person you want to be protected from
subquestion: |
  Answer the questions as best you can. If you don't know the exact answers, in most places it is OK to estimate or to give the best information you have.
continue button field: respondent_intro_screen
---
id: petitioner and respondent living together
question: |
  Do you and ${ other_parties[0].name.first } live together?
fields:
  - no label: petitioner_and_respondent_living_together
    datatype: yesnoradio
---
id: respondent race
question: |
  Enter ${ other_parties[0].name }'s race
fields:
  - no label: other_parties[0].race
    choices:
      - White, not Hispanic or Latino: White
      - Hispanic or Latino: Hispanic/Latino
      - American Indian or Alaskan Native: American Indian/AK Native
      - Asian: Asian
      - African American: African American
      - Native Hawaiian or Other Pacific Islander: HI Native/Pacific Islander
      - Other race: Other
---
id: respondent gender
question: |
  Enter ${ other_parties[0].name }'s gender
fields:
  - no label: other_parties[0].gender
    datatype: radio
    choices:
      - Male: M
      - Female: F
---
id: respondent height
question: |
  Enter ${ other_parties[0].name }'s approximate height
subquestion: |
  ${ collapse_template(respondent_height_explained) }
fields:
  - Feet: other_parties[0].height_feet
    datatype: integer
    required: True
  - Inches: other_parties[0].height_inches
    datatype: integer
    required: True
    max: 11
---
template: respondent_height_explained
subject: |
  What if I don't know an exact height?
content: |
  An exact height is not required. Provide your best guess.
---
id: respondent weight
question: |
  Enter ${ other_parties[0].name }'s approximate weight in pounds (lbs)
subquestion: |
  ${ collapse_template(respondent_weight_explained) }
fields:
  - Weight: other_parties[0].weight
    datatype: integer
---
template: respondent_weight_explained
subject: |
  What if I don't know an exact weight?
content: |
  An exact weight is not required. Provide your best guess.
---
id: respondent hair color
question: |
  Enter ${ other_parties[0].name }'s hair color
subquestion: |
  If unknown, select "Unknown."
fields:
  - no label: other_parties[0].hair_color
    choices:
      - Bald: Bald
      - Black: Black
      - Blonde or Strawberry: Blonde
      - Brown: Brown
      - Gray or Partially Gray: Gray
      - Red or Auburn: Red
      - Sandy: Sandy
      - White: White
      - Unknown: Unknown
---
id: respondent eye color
question: |
  Enter ${ other_parties[0].name }'s eye color
subquestion: |
  If unknown, select "Unknown."
fields:
  - no label: other_parties[0].eye_color
    choices:
      - Black: Black
      - Blue: Blue
      - Brown: Brown
      - Gray: Gray
      - Green: Green
      - Hazel: Hazel
      - Unknown: Unknown
---
id: respondent license number
question: |
  Enter ${ other_parties[0].name }'s driver's license number
subquestion: |
  If none or unknown, leave blank.
fields:
  - no label: other_parties[0].license_number
    required: False
---
mandatory: True
id: respondent other identifying info
question: |
  Other identifying information
subquestion: |
  In 50 characters or less, describe any other identifying information about ${ other_parties[0].name }, such as scars or tattoos, if any.

  If none, leave blank.
fields:
  - note: |
      <div id="show_maxlength"> </div>
  - no label: other_parties[0].other_identifying_info
    required: False
    maxlength: 50
script: |
  <script>
  $(document).ready(function() {
      var inputField = $('#b3RoZXJfcGFydGllc1swXS5vdGhlcl9pZGVudGlmeWluZ19pbmZv');
      var maxLength = 50;
      var inputLength = inputField.val().length;
      var remainingChars = maxLength - inputLength;
      $('#show_maxlength').text(remainingChars + " " + pluralizeWord("character", "characters", remainingChars) + " remaining").css('font-weight', '500');

      inputField.on('input', function() {
        inputLength = $(this).val().length;
        remainingChars = maxLength - inputLength;
        if (remainingChars < 0) {
          $('#show_maxlength').text("You are over the limit by " + Math.abs(remainingChars) + " " + pluralizeWord("character", "characters", Math.abs(remainingChars))).css('font-weight', '500').css('color', 'red');
        } else {
          $('#show_maxlength').text(remainingChars + " " + pluralizeWord("character", "characters", remainingChars) + " remaining").css('font-weight', '500').css('color', 'black');
        }
      });
  });

  function pluralizeWord(singularWord, pluralWord, count) {
    return count == 1 ? singularWord : pluralWord;
  }
  </script>
---
id: respondent required to carry gun for work
question: |
  Is ${ other_parties[0].name } required to carry a gun for work?
fields:
  - no label: other_parties[0].carries_gun_for_work
    datatype: radio
    choices:
      - Yes: yes
      - No: no
      - I don't know: unknown
---
id: respondent contact info kickout
event: respondent_contact_info_kickout
question: |
  We're sorry, but you cannot use this tool to prepare your forms.
subquestion: |
  In Oakland County, either the Respondent's **address** or **phone number** must be provided in order to inform them of your petition for a protection order.

  If you made a mistake, click the **${ MLH_back_button_label }** button to go back and change your answer.
---
id: other party parents intro
question: |
  We need information about ${ other_parties[0].name }'s parents, guardians, or custodians
subquestion: |
  Beause ${ other_parties[0].name } is an unemancipated minor, both ${ other_parties[0].name } and their parent(s), guardian(s), or custodian(s) must be served with your petition for a personal protection order.
continue button field: other_parties_parents_intro
---
id: minor children in common with respondent
question: |
  Minor children
subquestion: |
  *Minor children are children who are under 18 years old.*
fields:
  - Do you and ${ other_parties[0] } have any minor children in common?: has_minor_children_in_common
    datatype: yesnoradio
---
id: petitioner's other children
question: |
  Your other children
fields:
  - Do you have any other children living in your home who are **not** the children of the respondent?: petitioner_has_other_children
    help: |
      For example: stepchildren or adopted children.
    datatype: yesnoradio
---
id: respondent's other children
question: |
  ${ other_parties[0] }'s other children
fields:
  - Does ${ other_parties[0] } have any other children living in their home who are **not** your children?: respondent_has_other_children
    help: |
      For example: stepchildren or adopted children.
    datatype: yesnomaybe
---
id: children in common with respondent kickout
event: common_children_kickout
question: |
  We're sorry, but you'll need to go back and select a different type of PPO
subquestion: |
  If you have children in common with ${ other_parties[0] }, you should choose to file for a **Personal Protection Order - Domestic Relationship**.

  Click the **${ MLH_back_button_label }** button to go back and change your answer.
---
id: domestic ppo children intro
question: |
  Next, you will need to enter information about any children that you have with ${ other_parties[0] }, along with any children in your homes
subquestion: |
  You will also need to enter information about any legal cases between you and ${ other_parties[0] } and describe the things that they have done that made you want a protection order.
continue button field: domestic_ppo_children_intro
---
id: minor children in common target_number
question: |
  Number of children
subquestion: |
  *Minor children are children who are under 18 years old.*
fields:
  - How many **minor** children do you and ${ other_parties[0] } have in common?: children.target_number
    datatype: integer
    min: 1
---
id: petitioner's other children target_number
question: |
  Number of other children
fields:
  - How many other children are living in your home who are not the children of the respondent?: petitioner_other_children.target_number
    datatype: integer
    min: 1
---
id: petitioner knows names of respondent's other children
question: |
  Names of ${ other_parties[0] }'s other children
fields:
  - Do you know the names of ${ other_parties[0] }'s other children?: petitioner_knows_respondent_other_children_names
    datatype: yesnoradio
---
id: respondent's other children target_number
question: |
  Number of other children
fields:
  - How many other children are living in your home who are not the children of the respondent?: respondent_other_children.target_number
    datatype: integer
    min: 1
---
id: custody and parenting time order
question: |
  Custody and parenting time order for ${ children[i] }
subquestion: |
  A personal protection order will affect any custody and parenting time order that is currently in effect. 
  Please answer the following questions to help the court decide what arrangements should be made.
fields:
  - Enter the case number on your custody and parenting time order (if you were divorced, this will be your divorce case number.): children[i].custody_case_number
  - Enter the name of the court where the case was filed: children[i].custody_case_court
---
id: who has physical custody
question: |
  Who has physical custody over ${ children[i] }?
fields:
  - According to the court order: children[i].physical_custody_by_order
    datatype: radio
    choices:
      - I have sole physical custody: sole_petitioner
      - ${ other_parties[0] } has sole physical custody: sole_respondent
      - I and ${ other_parties[0] } have joint physical custody: joint_custody
---
id: what does the court order say about parenting time
question: |
  What does the court order for ${ children[i] } say about parenting time?
fields:
  - Select the response that best describes your court order: children[i].parenting_time_order
    datatype: radio
    choices:
      - The order does not include a specific schedule with days and times. It says there will be “reasonable parenting time.”: reasonable_parenting_time
      - The order lists specific days and times for parenting time.: specific_times
      - The order gives one of the parents supervised parenting time.: one_parent_supervised
      - One of us does not have any parenting time with the child.: one_parent_no_parenting_time
---
id: are custody and parenting time same for all children
question: |
  Provisions for other children
fields:
  - Are custody and parenting time provisions the same for all your children?: custody_parenting_time_provisions_same
    datatype: yesnoradio
---
id: parenting time exchange location for individual child
question: |
  Location of parenting time exchanges for ${ children[i] }
fields:
  - Where do you want parenting time exchanges (pick-ups and drop-offs) to take place?: children[i].exchange_location
    datatype: radio
    choices:
      - Police Department: police
      - Other: other
  - Enter the name of the police department where you would like to have parenting time exchanges: children[i].exchange_police_department_location
    show if:
      variable: children[i].exchange_location
      is: "police"
  - Enter the location where you would like parenting time exchanges to take place: children[i].exchange_other_location
    show if:
      variable: children[i].exchange_location
      is: "other"
---
id: parenting time exchange location for all children
question: |
  Location of parenting time exchanges for all children in common with ${ other_parties[0] }
fields:
  - Where do you want parenting time exchanges (pick-ups and drop-offs) to take place?: exchange_location
    datatype: radio
    choices:
      - Police Department: police
      - Other: other
  - Enter the name of the police department where you would like to have parenting time exchanges: exchange_police_department_location
    show if:
      variable: exchange_location
      is: "police"
  - Enter the location where you would like parenting time exchanges to take place: exchange_other_location
    show if:
      variable: exchange_location
      is: "other"
---
id: who has supervised parenting time
question: |
  Supervised parenting time for ${ children[i] }
fields:
  - Who has supervised parenting time?: children[i].who_has_supervised_time
    datatype: radio
    choices:
      - I do: petitioner
      - ${ other_parties[0] } does: respondent
  - Who is parenting time supervised by: children[i].who_supervises_parenting_time
---
id: who does not have parenting time
question: |
  Supervised parenting time for ${ children[i] }
fields:
  Who does **not** have parenting time?: children[i].parent_whithout_parenting_time
  datatype: radio
  choices:
    - Me: petitioner
    - ${ other_parties[0] }: respondent
---
id: child paternity
question: |
  ${ children[i] }'s paternity
fields:
  - Select the answer that applies to ${ children[i].familiar() }. If the father's paternity has not been established, select **None of the above**: children[i].paternity
    datatype: radio
    choices:
      - Paternity was established by court order (also called an *Order of Filiation*): by_court_order
      - Paternity has been established by an *Acknowledgment of Parentage*: by_acknowledgment_of_parentage
      - A paternity case has been filed and is pending (there is no court order yet): paternity_case_pending
---
id: paternity case info
question: |
  ${ children[i] }'s paternity case details
subquestion: |
  Enter the case number and the name of the Court for ${ children[i].familiar() }'s case.
fields:
  - Case number: children[i].paternity_case_number
  - Name of Court: children[i].paternity_case_court_name
---
id: desired parenting time change for individual child
question: |
  Parenting time changes for ${ children[i] }
fields:
  - Select the option below that best describes what you want to happen with parenting time: children[i].desired_parenting_time_changes
    datatype: radio
    choices:
      - I do not want to change the current custody and parenting time arrangements. They should continue as ordered in the divorce judgment and/or custody order.: no_change
      - I do not want to change the current custody and parenting time arrangements. They should continue as ordered in the divorce judgment and/or custody order, **BUT** I think the exchange of ${ children[i] } should take place at a neutral place.: no_change_except_exchange
      - I think that the safety of ${ children[i] } is at risk. I would like all parenting time between ${ other_parties[0] } and ${ children[i] } suspended.: suspend_respondent_time
---
id: desired parenting time change for all common children
question: |
  Parenting time changes for all common children with ${ other_parties[0] }
fields:
  - Select the option below that best describes what you want to happen with parenting time: desired_parenting_time_changes
    datatype: radio
    choices:
      - I do not want to change the current custody and parenting time arrangements. They should continue as ordered in the divorce judgment and/or custody order.: no_change
      - I do not want to change the current custody and parenting time arrangements. They should continue as ordered in the divorce judgment and/or custody order, **BUT** I think the exchange of the children should take place at a neutral place.: no_change_except_exchange
      - I think that the safety of the children is at risk. I would like all parenting time between ${ other_parties[0] } and our minor children suspended.: suspend_respondent_time
---
id: pending_actions there_are_any
question: |
  Are there any pending legal cases between you and ${ other_parties[0].name }?
subquestion: |
  % if ppo_type == "domestic":
  This includes any court cases, such as divorce, custody, PPO, a criminal case, or others.
  % endif
fields:
  - no label: pending_actions.there_are_any
    datatype: yesnoradio
---
id: pending_actions docket number
sets:
  - pending_actions[i].docket_number
question: |
  Enter the case number
subquestion: |
  Leave blank if unknown.
fields:
  - no label: pending_actions[i].docket_number
    required: False
---
id: pending_actions court and county
question: |
  Enter the name of the court and county where the case was filed, if known
fields:
  - Court name: pending_actions[i].court_name
    required: False
  - Court county: pending_actions[i].court_county
    required: False
  - Court state: pending_actions[i].court_state
    required: False
    code: |
      states_list()
---
id: pending_actions judge
question: |
  Enter the name of the judge in the case, if known
fields:
  - Judge name: pending_actions[i].judge
    required: False
---
id: pending_actions there_is_another
question: |
  Are there any more pending legal cases between you and ${ other_parties[0].name }?
subquestion: |
  % if len(pending_actions.complete_elements()) > 0:
  ${ collapse_template(pending_actions_list_template) }
  % endif
fields:
  - no label: pending_actions.there_is_another
    datatype: yesnoradio
---
template: pending_actions_list_template
subject: What have I listed so far?
content: |
  % if len(pending_actions.complete_elements()) > 0:
  So far you have listed:

  % for item in pending_actions:

  **Pending Case \#${ loop.index+1 }**

  * Docket: ${ item.docket_number }
  * Court: ${ item.court_name }
  * County: ${ item.court_county }
  * State: ${ item.court_state }
  * Judge: ${ item.judge }


  % endfor
  % else:
  You have not listed any cases yet.
  % endif
---
id: orders_judgments there_are_any
question: |
  Are there any court orders or judgments entered in any court regarding you and ${ other_parties[0].name }?
subquestion: |
  % if ppo_type == "domestic":
  Includes divorce, custody, previous protection orders, criminal convictions, or others.
  % endif
fields:
  - no label: orders_judgments.there_are_any
    datatype: yesnoradio
---
id: orders_judgments docket number
sets:
  - orders_judgments[i].docket_number
question: |
  Enter the case number
subquestion: |
  Leave blank if unknown.
fields:
  - no label: orders_judgments[i].docket_number
    required: False
---
id: orders_judgments court and county
question: |
  Enter the name of the court and county where the case was filed, if known
fields:
  - Court name: orders_judgments[i].court_name
    required: False
  - Court county: orders_judgments[i].court_county
    required: False
  - Court state: orders_judgments[i].court_state
    required: False
    code: |
      states_list()
---
id: orders_judgments judge
question: |
  Enter the name of the judge in the case, if known
fields:
  - Judge name: orders_judgments[i].judge
    required: False
---
id: orders_judgments there_is_another
question: |
  Are there any more court orders or judgments entered between you and ${ other_parties[0].name }?
subquestion: |
  % if len(orders_judgments.complete_elements()) > 0:
  ${ collapse_template(orders_judgments_list_template) }
  % endif
fields:
  - no label: orders_judgments.there_is_another
    datatype: yesnoradio
---
template: orders_judgments_list_template
subject: What have I listed so far?
content: |
  % if len(orders_judgments.complete_elements()) > 0:
  So far you have listed:

  % for item in orders_judgments:

  **Pending Order or Judgment \#${ loop.index+1 }**

  * Docket: ${ item.docket_number }
  * Court: ${ item.court_name }
  * County: ${ item.court_county }
  * State: ${ item.court_state }
  * Judge: ${ item.judge }


  % endfor
  % else:
  You have not listed any orders or judgments yet.
  % endif
---
id: abuse history intro
question: |
  The following questions are about what has happened between you and ${ other_parties[0].name }
subquestion: |
  Your answers will help the judge understand why you need protection.

  Explain the most recent abusive event first, then the next most recent event, and continue in that way. You do not need to list every incident of abuse, especially if there are many. Focus on the most recent events and the most severe events.

  Your answers to these questions will create the statement of facts to go with your *Petition for Personal Protection Order*. This is important because it helps the judge to understand what ${ other_parties[0].name } has done to you and why you need protection.

continue button field: abuse_history_intro
---
id: stalking harassing behavior intro
question: |
  The following questions are about ${ other_parties[0].name }'s stalking and/or harassing behavior.
subquestion: |
  Your answers will help the judge understand why you need protection.

  To qualify for a PPO when you do not have a domestic relationship with ${ other_parties[0].name }, you must show that ${ other_parties[0].name } has engaged in a "willful course of conduct" that involves repeated or continuing harassment of you. The harassment must be behavior that:

    * Involves two or more separate, noncontinuous acts,
    * Would cause a reasonable person to feel terrorized, frightened, intimidated, threatened, harassed, or molested, and
    * Actually caused you to feel terrorized, frightened, intimidated, threatened, harassed, or molested.

  ${ collapse_template(stalking_harassing_explained) }

continue button field: stalking_harassing_intro
---
id: sexual assault intro
question: |
  The following questions are about what ${ other_parties[0].name } has done to you
subquestion: |
  Your answers will help the judge understand why you need protection.

continue button field: sexual_assault_intro
---
id: respondent sexual assault conviction
question: |
  Was ${ other_parties[0].name } convicted of sexual assault against you?
fields:
  - no label: respondent_sexual_assault_conviction
    datatype: yesnoradio
---
#NOTE: need to link this question to new entry in orders_judgments
id: sexual assault conviction listed in orders and judgments
question: |
  Did you list this case when asked about orders or judgments between you and ${ other_parties[0].name }?
fields:
  - no label: orders_judgments_include_sa_conviction
    datatype: yesnoradio
---
id: fear of future sexual assault
question: |
  Do you fear that you could be sexually assaulted because ${ other_parties[0].name } has sexually assaulted you or threatened you with sexual assault?
fields:
  - no label: fears_future_sexual_assault
    datatype: yesnoradio
---
id: potential sexual assault explained
question: |
  Please explain what happened that made you afraid of being sexually assaulted by ${ other_parties[0].name }
subquestion: |
  ${ collapse_template(fears_future_sexual_assault_explained) }
fields:
  - no label: potential_sexual_assault_exp
    input type: area
---
template: fears_future_sexual_assault_explained
subject: |
  More information about how to answer this question.
content: |
  Be as specific as you can about facts like dates and locations. However, if you are not sure of a date or other fact, do not guess. It is okay to give an approximate date or time, or to put a time of year, like "last summer."

  If you have any documents you want to show the judge, such as police reports, medical records, photos, copies of letters, texts, or email messages, you can attach copies to your petition. However, this is not necessary. The judge shouldn't deny a petition just because you don't have any documents to attach.
---
id: no past or potential sexual assault kickout
event: no_past_or_potential_sexual_assault_kickout
question: |
  You cannot continue using this tool
subquestion: |
  We're sorry, but you may not use this tool to prepare a nondomestic sexual assault *Personal Protection Order*.

  There are different forms available if you need protection from someone who is stalking or harassing you, or from someone with whom you have or had a domestic relationship. Return to the Michigan Legal Help website and read [Overview of Personal Protection Orders](https://michiganlegalhelp.org/self-help-tools/personal-safety/overview-personal-protection-orders) to learn if there is a different kind of protection order for you.

  If you made a mistake, click the **${ MLH_back_button_label }** button to go back and change your answer. Otherwise, you can return to [Michigan Legal Help](https://michiganlegalhelp.org) for other legal information or resources.
---
id: petitioner property interest
question: |
  Do you have a property interest in this home?
subquestion: |
  ${ collapse_template(property_interest_explained) }
fields:
  - no label: has_property_interest_in_home
    datatype: yesnoradio
---
id: respondent property interest
question: |
  Does ${ other_parties[0].name } have a property interest in this home?
fields:
  - no label: respondent_has_property_interest_in_home
    datatype: yesnoradio
---
template: property_interest_explained
subject: |
  What is a property interest?
content: |
  Michigan law uses the term "property interest," but does not give a definition for it. It doesn't necessarily mean your name must be on the title or lease. We can't know how the judge in your case will interpret the law, but you could argue that the following things make up a property interest:

    * You own or rent the home (your name is the deed/lease)
    * Your name is not on the deed or lease, but you live there with ${ other_parties[0].name }
    * You lived in the home with ${ other_parties[0].name } until recently, but moved out to stay safe
    * A friend or family member owns a house, and you stay there but do not have a written lease
    * Any other property where you live, or lived recently but had to move to stay safe

  If your situation is out of the ordinary, use your judgment to decide if you have a property interest in the home. Be prepared to explain your reasoning to the judge, if needed.
---
id: respondent property interest kickout
question: |
  We're sorry, but you are not allowed to ask for this protection
subquestion: |
  Michigan law does not allow the court to prohibit ${ other_parties[0].name } from entering on the property where you live if:

    1. you are not married to ${ other_parties[0].name };
    2. you do not have a property interest in the home, **and**
    3. ${ other_parties[0].name } has a property interest in the home.

  If you made a mistake, click the **${ MLH_back_button_label }** button to go back and change your answer. Otherwise, click Continue to continue selecting things you want your PPO to prohibit ${ other_parties[0].name } from doing.
continue button field: cannot_prohibit_respondent_entering_property
---
template: stalking_harassing_explained
subject: |
  Learn more about stalking behavior.
content: |
  Stalking and/or harassing behavior takes many forms. Generally, stalking is contact you don't consent to that scares you or harasses you. Examples of stalking behavior include:

    * Following you or appearing within your sight
    * Showing up at your home or work
    * Approaching you or confronting you in public or on private property
    * Coming onto property you own, lease, and/or where you live
    * Sending you mail, email, or other communications
    * Calling or texting you
    * Placing or delivering an object on property you own, lease, and/or where you live
    * Threatening to kill you or hurt you
    * Posting a message to you or about you on the Internet, a computer, or any other electronic means

  Your answers to these questions will create the statement of facts to go with your *Petition for Personal Protection Order*. This is important because it helps the judge understand what ${ other_parties[0].name } has done to you and why you need protection.
---
id: abuse history intro 2
question: |
  ${ other_parties[0].name } will receive a copy of the petition and statement of facts, and they will also be put in the court file
subquestion: |
  If there is a hearing on your petition, you will be required to testify about the events in your statement of facts, so it is important to tell the truth and be as accurate as possible.

  Be as specific as you can about facts like dates and locations. However, if you are not sure of a date or other fact, do not guess. It is okay to give an approximate date or time, or to put a time of year, like "last summer."

continue button field: abuse_history_intro_2
---
id: abuse history intro 3
question: |
  Attaching Evidence
subquestion: |
  If you have any documents you want to show the judge, you should attach copies to your petition. However, even if you don't have any documents to attach, you can still file your petition. The judge shouldn't deny a petition just because you don't have any documents to attach.

  If you have audio or video evidence, include descriptions about what is in the evidence when you are typing your descriptions of the incidents in the following screens. Save any audio/video evidence you have. If there will be a hearing for your case, you can submit the audio/video evidence to the court directly.

continue button field: abuse_history_intro_3
---
id: abuse history intro 4
question: |
  Most Recent Incident
subquestion: |
  The following questions will apply to the most recent incident of violence, threat of violence, or other abuse

continue button field: abuse_history_intro_4
---
id: stalking history intro
question: |
  The following questions will apply to the most recent incident of stalking, harassing, or threatening behavior

continue button field: stalking_history_intro
---
id: incidents date
sets:
  - incidents[i].date
question: |
  % if len(incidents.complete_elements()) > 0:
  Complete this sentence: "Another incident occurred on or about..."
  % else:
  Complete this sentence: "One incident occurred on or about..."
  % endif
subquestion: |
  For example: "March 15, ${ today().year - 1 }" or "last summer"

  ${ collapse_template(incident_date_explained) }
fields:
  - no label: incidents[i].date
---
template: incident_date_explained
subject: |
  Do I need an exact date?
content: |
  Fill in the exact date if you know it. Otherwise, be as specific as you can, but don't guess. It is okay to give an approximate date or time or to put a time of year, like "last summer" or "Christmas time ${ today().year - 2 }."
---
id: incidents location
question: |
  % if county_choice == "Oakland" and wants_confidential_contact_details:
  Incident location
  % else:
  Complete this sentence
  % endif
subquestion: |
  % if county_choice == "Oakland" and wants_confidential_contact_details:
  *If you answered that you want to keep your home address confidential and this incident happened at your home, DO NOT type your address. Instead, type 'my home.'*
  % endif
  ${ collapse_template(incident_location_explained) }
fields:
  - The incident occurred at the following location: incidents[i].location
---
template: incident_location_explained
subject: |
  Do I need the address?
content: |
  Describe the location and fill in an address, if you know it. Examples: "At my mother's house, at 123 N. Main Street, Toledo, Ohio" or "At the Chili's restaurant near my house."

  % if county_choice == "Oakland" and wants_confidential_contact_details:
  *If you answered that you want to keep your home address confidential and this incident happened at your home, DO NOT type your address. Instead, type 'my home.'*
  % endif
---
id: incidents other party actions
question: |
  Please describe what happened during the incident
subquestion: |
  Be sure to use complete sentences and be as descriptive as you can. List as many details as you can remember.

  % if ppo_type == "nondomestic":
  ${ collapse_template(incident_other_party_actions_explained_nondomestic) }
  % else:
  ${ collapse_template(incident_other_party_actions_explained) }
  % endif
fields:
  - no label: incidents[i].other_party_actions
    input type: area
---
template: incident_other_party_actions_explained
subject: |
  Can I see some examples?
content: |
  Here are two examples to help you understand how to write a good description of the incident:

  A poor example:

  "We were fighting and he pushed me."

  A good example:

  "We were eating dinner, and he was complaining that his food was cold. I got angry, so I grabbed his plate and went to the kitchen to put it in the microwave. He followed me and grabbed my arm and told me I was not supposed to leave the dinner table without his permission, and that I was a bad example for our daughter. I told him to leave me alone and he pushed me down on the ground and dumped the plate of food on my legs. He told me that one day he would leave me alone for good and I would be sorry because no one would ever want me again."
---
template: incident_other_party_actions_explained_nondomestic
subject: |
  Can I see some examples?
content: |
  Here are two examples to help you understand how to write a good description of the incident:

  A poor example:

  "I kept seeing ${ other_parties[0].name } everywhere I would go."

  A good example:

  "When I left work in the afternoon, I saw a car parked in the street with someone sitting in the driver's seat. When I got closer I could see that it was ${ other_parties[0].name }, who was watching me. As I walked down the street, ${ other_parties[0].name } started the car and followed me slowly. ${ other_parties[0].name } followed me three blocks to my parking spot. When I drove out of the parking structure in my car, I didn't see ${ other_parties[0].name } again."
---
id: incidents emotional effect
question: |
  Describe how you felt during and after the incident
subquestion: |
  Finish this sentence:
fields:
  - Because of this incident I felt...: incidents[i].emotional_effect
    input type: area
---
id: incidents reason other party responsible
question: |
  How do you know ${ other_parties[0].name } was responsible?
subquestion: |
  You may not need to complete this field if it is obvious from your description of the incident that ${ other_parties[0].name } was responsible for the behavior. Click the link below for more information.

  ${ collapse_template(other_party_responsible_explained) }
fields:
  - I know ${ other_parties[0].name } is responsible because...: incidents[i].reason_other_party_responsible
    input type: area
---
template: other_party_responsible_explained
subject: |
  Can I get some examples?
content: |
  If ${ other_parties[0].name }'s behavior was not in person, it may be helpful to the judge to understand why you believe ${ other_parties[0].name } was involved. This might be the case if ${ other_parties[0].name }'s behavior was over the phone, by text, or through the Internet.

  Here are two examples to help you understand how to tell the judge you know ${ other_parties[0].name } was responsible for the behavior.

  A poor example:

  "I know it was him calling because no one else would call me and hang up."

  A good example:

  "I know it was him calling because the number was blocked, and each time he called before he blocked the number. Also, he has a pattern of calling me in the evening between 6:00 and 9:00 and repeatedly hanging up when I answer the phone."
---
id: incidents physical injury
question: |
  Were you physically injured?
subquestion: |
  Being physically injured includes being sore or bruised, having other injuries you took care of yourself, or having injuries that were seen by a doctor.

  ${ collapse_template(incident_injury_explained) }
fields:
  - no label: incidents[i].petitioner_injured
    datatype: yesnoradio
  - Describe your injuries: incidents[i].physical_injury
    input type: area
    show if:
      variable: incidents[i].petitioner_injured
      is: True
---
template: incident_injury_explained
subject: |
  What if I wasn't injured?
content: |
  There is no requirement that you be physically injured to get a personal protection order. This is just information that can help the judge understand what happened to you and why you need to be protected from ${ other_parties[0].name }.
---
id: incidents witnesses
question: |
  Were there any witnesses to the incident?
subquestion: |
  You don't have to list the names of witnesses here, but if there are witnesses, it is possible the judge will want to hear from them if there is a court hearing.

  ${ collapse_template(incident_witnesses_explained) }
fields:
  - no label: incidents[i].had_witnesses
    datatype: yesnoradio
---
template: incident_witnesses_explained
subject: |
  What if there were no witnesses?
content: |
  There is no requirement that you have witnesses to get a personal protection order. This is just information that can help the judge understand what happened to you and why you need protection from ${ other_parties[0].name }.
---
id: incidents police
question: |
  Were the police called?
subquestion: |
  ${ collapse_template(incident_police_explained) }
fields:
  - no label: incidents[i].had_police
    datatype: yesnoradio
  - What did the police do?: incidents[i].police_actions
    input type: area
    show if:
      variable: incidents[i].had_police
      is: True
---
template: incident_police_explained
subject: |
  Why is this important?
content: |
  There is no requirement that the police were called to get a personal protection order. This is just information that can help the judge understand what happened to you and why you need protection from ${ other_parties[0].name }.
---
id: incidents outro
question: |
  Important! If there is a police report for this incident, get a copy to include with your petition.
subquestion: |
  A police report can help show the judge what happened and why you need a PPO.

  Note that only including a police report number or incident number in your petition does **not** automatically allow the court to access the police report. It must be filed with your petition if you want the court to be able to see it.

continue button field: incidents_outro
---
id: incidents there_is_another
question: |
  % if (ppo_type == "nondomestic") or (ppo_type == "nondomestic_sexual_assault"):
  Is there another incident of stalking, harassing, or threatening behavior?
  % elif ppo_type == "domestic":
  Is there another incident of violence, threat of violence, or other abuse?
  % endif
fields:
  - no label: incidents.there_is_another
    datatype: yesnoradio
---
id: nondomestic_subsequent_incident_intro
question: |
  The following questions will apply to the **${ ordinal(i) }** most recent incident of stalking, harassing, or threatening behavior.

continue button field: nondomestic_subsequent_incident_intro
---
id: other details
question: |
  Include anything else you would like the judge to know about why you need a personal protection order against ${ other_parties[0].name }
subquestion: |
  You can use this space to tell the judge other things about ${ other_parties[0].name } that make you feel threatened, abused, or afraid.

  % if ppo_type == "nondomestic":
  ${ collapse_template(incident_other_details_explained_nondomestic) }
  % else:
  ${ collapse_template(incident_other_details_explained) }
  % endif
fields:
  - no label: other_details
    input type: area
    required: False
---
template: incident_other_details_explained
subject: |
  Click here to see examples.
content: |
  Examples:

  - ${ other_parties[0].name } tries to control you with her behavior. This can include many different types of things, such as: threatening to hurt you or your children; threatening to commit suicide; limiting your access to money; not letting you have or keep a job; controlling where you go or who you see and talk to; or putting you down, calling you names, or trying to make you feel like you are "crazy."

  - ${ other_parties[0].name } was violent in a previous relationship. Include information about other personal protection orders and past domestic violence convictions, if any.

  - ${ other_parties[0].name } has mental health problems and/or issues with drugs or alcohol.

  - ${ other_parties[0].name } owns a weapon, such as a gun, especially if ${ other_parties[0].name } has used or threatened to use the weapon against you or another person.

  - ${ other_parties[0].name } is involved in criminal activity, such as being a gang member or dealing drugs.
---
template: incident_other_details_explained_nondomestic
subject: |
  Click here to see examples.
content: |
  Examples:

  - ${ other_parties[0].name } has mental health problems and/or issues with drugs or alcohol.

  - ${ other_parties[0].name } owns a weapon, such as a gun, especially if ${ other_parties[0].name } has used or threatened to use the weapon against you or another person.

  - ${ other_parties[0].name } is involved in criminal activity, such as being a gang member or dealing drugs.
---
id: relief requested intro
question: |
  Next, you will be asking the judge to forbid ${ other_parties[0].name } from doing certain things that make you unsafe or afraid
subquestion: |
  On the following pages, you will decide which types of behavior you do not want ${ other_parties[0].name } to be allowed to do. The judge will make the final decision about what things to include in the protection order.

continue button field: relief_requested_intro
---
id: wants_no_entering_residential_property
question: |
  Do you want the judge to order ${ other_parties[0].name } not to enter the property where you live?
fields:
  - no label: wants_no_entering_residential_property
    datatype: yesnoradio
---
id: wants no entering other property
question: |
  Do you want the judge to order ${ other_parties[0].name } not to enter other property (not your residence)?
subquestion: |
  ${ collapse_template(wants_no_entering_other_property_explained) }
fields:
  - no label: other_properties.there_are_any
    datatype: yesnoradio
---
template: wants_no_entering_other_property_explained
subject: |
  When should I answer yes?
content: |
  You might answer yes to this if there are other places where you often spend time (such as your work, school, parents' home, or friends' homes) and you want ${ other_parties[0].name } to be prohibited from going to those places.
---
id: wants no sexual assault threats
question: |
  Do you want the judge to order ${ other_parties[0].name } not to **threaten to sexually assault, kill, or physically injure** you?
fields:
  - no label: wants_no_sexual_assault_threats
    datatype: yesnoradio
---
id: wants no harming petitioner
question: |
  Do you want the judge to order ${ other_parties[0].name } not to **assault**, **attack**, **beat**, **molest**, or **wound** you?
fields:
  - no label: wants_no_harming_petitioner
    datatype: yesnoradio
---
id: wants no harming others
question: |
  Do you want the judge to order ${ other_parties[0].name } not to **assault**, **attack**, **beat**, **molest**, or **wound** another person?
fields:
  - no label: ppo_harm_protectees.there_are_any
    datatype: yesnoradio
---
id: ppo_harm_protectees there_is_another
question: |
  Do you want the judge to order ${ other_parties[0].name } not to **assault**, **attack**, **beat**, **molest**, or **wound** another person not yet listed?
subquestion: |
  ${ collapse_template(harm_protectees_listed_so_far) }
fields:
  - Do you want to add another person?: ppo_harm_protectees.there_is_another
    datatype: yesnoradio
---
template: harm_protectees_listed_so_far
subject: Who have I listed so far?
content: |
  % if (len(ppo_harm_protectees.complete_elements()) > 0) or wants_no_harming_petitioner:
  So far, you have listed:

  % if wants_no_harming_petitioner:
    - Yourself
  % endif
  % for person in ppo_harm_protectees.complete_elements():
    - ${ person }
  % endfor
  % else:
  You have not listed anyone yet.
  % endif
---
id: wants_no_removing_minor
question: |
  Do you want the judge to order ${ other_parties[0].name } not to remove your minor child(ren) from your custody?
subquestion: |
  This protection **will not** prohibit ${ other_parties[0].name } from removing your minor children if ${ other_parties[0].name } is allowed to have the children based on a custody or parenting time order and if the visitation or transfer of the children does not violate other conditions of the personal protection order.
fields:
  - no label: wants_no_removing_minor
    datatype: yesnoradio
---
id: no_stalking_choices
question: |
  You can ask the judge to order ${ other_parties[0].name } not to stalk you
subquestion: |
  Stalking includes any of the behaviors listed below.

  You may ask to be protected from some or all of these behaviors by ${ other_parties[0].name } if they **interfere with your personal freedom** or **make you afraid**.
fields:
  - Which behaviors do you want the judge to order ${ other_parties[0].name } **not** to do? Check all that apply.: no_stalking_choices
    datatype: checkboxes
    choices:
      - Following you or appearing within your sight: following
      - Sending mail or other communications to you: communications
        help: |
          This includes sending you email or text messages, sending you messages through social media such as Facebook or Instagram, or sending messages to you through a third party such as your children or friends.
      - Approaching or confronting you in a public place or on private property: approaching
        help: |
          This prohibits ${ other_parties[0].name } from coming up to you or trying to talk to you at a public place. For example, if you ran into ${ other_parties[0].name } at a store or restaurant, ${ other_parties[0].name } would be prohibited from coming up to you.
      - Entering onto or staying on property you own, lease, or occupy: entering_property
      - Placing an object on or delivering an object to property you own, lease, or occupy: placing_object
      - Appearing at your workplace or residence: appear_work_residence
      - Contacting you by telephone: phone_contact
---
id: wants_no_children_property_removal_interference
question: |
  Do you want the judge to order ${ other_parties[0].name } not to interfere with your efforts to remove your children or personal property from a place that ${ other_parties[0].name } owns or leases?
subquestion: |
  ${ collapse_template(wants_no_children_property_removal_interference_explained) }
fields:
  - no label: wants_no_children_property_removal_interference
    datatype: yesnoradio
---
template: wants_no_children_property_removal_interference_explained
subject: |
  When should I answer yes?
content: |
  You might ask for this protection if you left a home where you lived with ${ other_parties[0].name } and you need to return to get your children or personal belongings.
---
id: wants no threatening petitioner
question: |
  Do you want the judge to order ${ other_parties[0].name } not to **threaten** to kill or physically injure you?
fields:
  - no label: wants_no_threatening_petitioner
    datatype: yesnoradio
---
id: wants no threatening others
question: |
  Do you want the judge to order ${ other_parties[0].name } not to **threaten** to kill or physically injure another person?
subquestion: |
  ${ collapse_template(wants_no_threatening_others_explained) }
fields:
  - no label: ppo_threat_protectees.there_are_any
    datatype: yesnoradio
---
template: wants_no_threatening_others_explained
subject: |
  When should I answer yes?
content: |
  You might answer Yes to this if there are other people ${ other_parties[0].name } has threatened to kill or physically injure, such as your children, specific relatives, or specific friends.
---
id: ppo_threat_protectees there_is_another
question: |
  Do you want the judge to order ${ other_parties[0].name } not to **threaten** to kill or physically injure another person not yet listed?
subquestion: |
  ${ collapse_template(threat_protectees_listed_so_far) }
fields:
  - no label: ppo_threat_protectees.there_is_another
    datatype: yesnoradio
---
template: threat_protectees_listed_so_far
subject: Who have I listed so far?
content: |
  % if (len(ppo_threat_protectees.complete_elements()) > 0) or wants_no_threatening_petitioner:
  So far, you have listed:

  % if wants_no_threatening_petitioner:
    - Yourself
  % endif
  % for person in ppo_threat_protectees.complete_elements():
    - ${ person }
  % endfor
  % else:
  You have not listed anyone yet.
  % endif
---
id: wants_no_work_education_interference
question: |
  Do you want the judge to order ${ other_parties[0].name } not to interfere with you at work or school, or to act in a way that impairs your work or school relationships or environment?
fields:
  - no label: wants_no_work_education_interference
    datatype: yesnoradio
---
id: wants no sexual assault threats to others
question: |
  Do you want the judge to order ${ other_parties[0].name } not to **threaten to sexually assault, kill, or physically injure** another person?
subquestion: |
  ${ collapse_template(wants_no_sexual_assault_threats_to_others_explained) }
fields:
  - no label: ppo_sexual_assault_threat_protectees.there_are_any
    datatype: yesnoradio
---
template: wants_no_sexual_assault_threats_to_others_explained
subject: |
  When should I answer yes?
content: |
  You might answer Yes to this if there are other people ${ other_parties[0].name } has threatened to sexually assault, kill, or physically injure, such as your children, specific relatives, or specific friends.
---
id: ppo_sexual_assault_threat_protectees there_is_another
question: |
  Do you want the judge to order ${ other_parties[0].name } not to **threaten to sexually assault, kill or physically injure** another person not yet listed?
subquestion: |
  ${ collapse_template(ppo_sexual_assault_threat_protectees_listed_so_far) }
fields:
  - no label: ppo_sexual_assault_threat_protectees.there_is_another
    datatype: yesnoradio
---
template: ppo_sexual_assault_threat_protectees_listed_so_far
subject: Who have I listed so far?
content: |
  % if (len(ppo_sexual_assault_threat_protectees.complete_elements()) > 0) or wants_no_sexual_assault_threats:
  So far, you have listed:

  % if wants_no_sexual_assault_threats:
    - Yourself
  % endif
  % for person in ppo_sexual_assault_threat_protectees.complete_elements():
    - ${ person }
  % endfor
  % else:
  You have not listed anyone yet.
  % endif
---
id: wants_no_access_to_personal_info_records
question: |
  Do you want the judge to order ${ other_parties[0].name } not to have access to information in your child's records that shows your (or your child's) home address, phone number, or work address?
subquestion: |
  ${ collapse_template(wants_no_access_to_personal_info_records_explained) }
fields:
  - no label: wants_no_access_to_personal_info_records
    datatype: yesnoradio
---
template: wants_no_access_to_personal_info_records_explained
subject: |
  When would I answer yes?
content: |
  You might ask for this protection if you and ${ other_parties[0].name } have a child or children in common and you don't want ${ other_parties[0].name } to know your address or other contact information. This protection applies to records such as school records, Friend of the Court records, records kept by your child's doctor, and other records that contain this information.
---
id: no_mental_distress_or_control_choices
question: |
  Do you want the judge to order ${ other_parties[0].name } not to intentionally cause you mental distress or control you, including the following behaviors?
fields:
  - Which behaviors do you want the judge to order ${ other_parties[0].name } **not** to do? Check all that apply.: no_mental_distress_or_control_choices
    datatype: checkboxes
    choices:
      - Injuring, killing, torturing, or neglecting any animal that you own, or threatening to do any of those things: harming_animal
      - Removing any animal you own from your possession: removing_animal
      - Keeping any animal you own from you, or taking possession of it: keeping_animal
---
id: wants_no_firearm_purchase_or_possession
question: |
  Do you want the judge to order ${ other_parties[0].name } not to buy or have a gun?
fields:
  - no label: wants_no_firearm_purchase_or_possession
    datatype: yesnoradio
---
id: wants_no_message_posting
question: |
  % if ppo_type == "nondomestic_sexual_assault":
  Do you want the judge to order ${ other_parties[0].name } not to post electronic messages that could make other people to harrass you?
  % elif ppo_type == "nondomestic":
  Do you want the judge to order ${ other_parties[0].name } not to harrass you by posting messages?
  % endif
subquestion: |
  % if ppo_type == "nondomestic_sexual_assault":
  This includes posting any electronic messages with the intent to cause others to contact you in a way that would make you feel terrorized, frightened, intimidated, threatened, harassed, or molested.
  % elif ppo_type == "nondomestic":
  This includes sending you messages through **any method**, including the Internet or any electronic medium. 

  ${ other_parties[0].name } would be prohibited from using social media, such as Facebook or Twitter, or falsely using your name to send messages to other people in order to harass you.
  % endif
fields:
  - no label: wants_no_message_posting
    datatype: yesnoradio
---
id: wants_other_request
question: |
  Is there anything else you want the judge to order in the PPO?
subquestion: |
  ${ collapse_template(wants_other_request_explained) }
fields:
  - no label: wants_other_request
    datatype: yesnoradio
  - List the other things you want the judge to order ${ other_parties[0].name } not to do.: other_request_exp
    input type: area
    show if:
      variable: wants_other_request
      is: True
---
template: wants_other_request_explained
subject: |
  What are some examples?
content: |
  This is the place where you can ask the judge to prohibit other behavior you did not already ask for and/or where you can ask the judge to make exceptions for some situations.

  For example, prohibit ${ other_parties[0].name } from:

    * Interfering with access to your driver's license or other important papers

    * Interfering with your use of a vehicle or removing your vehicle from you
---
id: will need ex parte order
question: |
  You will be requesting an **ex parte** order
subquestion: |
  An ex parte order is an order that the judge signs without having a court hearing first. In 
  % if county_choice == "Ingham":
  Ingham
  % elif county_choice == "Jackson":
  Jackson
  % elif county_choice == "Wayne":
  Wayne
  % endif
  County, all PPO petitions are viewed as ex parte petitions. 

  After you file your petition, the judge will consider it without a hearing and decide 
  whether to grant you a personal protection order within 
  % if county_choice == "Ingham":
  24 hours.
  % elif county_choice == "Jackson":
  72 hours.
  % elif county_choice == "Wayne":
  24 hours. If the judge does not grant you an ex parte PPO, the court will either schedule the matter
  for a hearing and send you a Notice of Hearing, or it will issue an order denying the petition.
  % endif
continue button field: need_ex_parte
---
id: wants_ex_parte_order
question: |
  Requesting an **ex parte** order
subquestion: |
  An **ex parte** order is an order that the judge signs without having a court hearing first.

  If you ask for an ex parte order, the judge will consider your petition and decide whether to grant your personal protection order within 24 to 72 hours. If you do not ask for an ex parte order or if the judge does not sign your ex parte order, you must have a court hearing before you can get a personal protection order.

  You should request an **ex parte** order if you are afraid you may be harmed before a court hearing can occur or if you are afraid that ${ other_parties[0].name } will harm you when they get notice that you are asking for a PPO.
fields:
  - Would you like to request an **ex parte** order?: wants_ex_parte_order
    datatype: yesnoradio
---
id: ex_parte_yes_screen
question: |
  After you file your petition, the judge will consider it without a hearing and decide whether to grant you a personal protection order.
subquestion: |
  In many courts this will not take longer than 24 hours, but in some courts it can take up to 72 hours. For information about how long it could take in your court, read the instructions that you will get with your forms.
continue button field: ex_parte_yes_screen
---
id: efile note question
question: |
  Completing this process does not file your forms with the court
subquestion: |
  You need to file them at court in person, by mail, e-mail, or by e-filing.
  If you are e-filing, you must use [MiFILE](https://mifile.courts.michigan.gov/).
  Read the instructions that you will get with your forms for more information.

  ${ collapse_template(am_i_going_to_efile) }

  This tool will create separate forms so you can more easily e-file using MiFILE, if you plan to e-file.

  This means that **you may need to download multiple files to get all of the forms you will need**. At the end of this interview you will see a list of documents to download. Make sure you download each of them. 

  You will also be able to get all forms you need by clicking the **Download Your Form(s)** button on the page at the end of this tool.

continue button field: efile_notice
---
template: am_i_going_to_efile
subject: |
  How do I know if I am going to e-file?
content: |
  Not all courts offer e-filing at this time. To find out if your court has e-filing, read the
  [What is E-Filing?](https://michiganlegalhelp.org/resources/mifile/what-e-filing) article.
  The article tells you how to find out which courts have e-filing and what kinds of cases those courts are accepting by e-filing.

  Look for the two-letter case type code at the end of your case number.
  (This could be DM, DC, DS, DP, or a different code.)
---
id: download screen
event: personal_protection_order_download
question: |
  All done!
subquestion: |
  Thank you ${users}. Your form is ready to download and deliver.

  View, download and send your form below. Click the "Edit answers" button to fix any mistakes.

  ${ action_button_html(url_action('review_form'), label='Edit answers', color='info') }

  ${ al_user_bundle.download_list_html() }

  ${ al_user_bundle.send_button_html(show_editable_checkbox=False) }
---
#################### Documents Start #####################
---
objects:
  - proof_of_service_domestic: ALDocument.using(title="Proof of Service", filename="Proof of Service", default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
---
objects:
  - proof_of_service_nondomestic: ALDocument.using(title="Proof of Service", filename="Proof of Service", default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
---
objects:
  - proof_of_service_nondomestic_sa: ALDocument.using(title="Proof of Service", filename="Proof of Service", default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
---
objects:
  - proof_of_service_domestic_minor: ALDocument.using(title="Proof of Service (Minor)", filename="Proof of Service (Minor)", default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
---
objects:
  - proof_of_service_nondomestic_minor: ALDocument.using(title="Proof of Service (Minor)", filename="Proof of Service (Minor)", default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
---
objects:
  - proof_of_service_nondomestic_sa_minor: ALDocument.using(title="Proof of Service (Minor)", filename="Proof of Service (Minor)", default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
---
objects:
  - identifying_information: ALDocument.using(title="Identifying Information", filename="Identifying Information", default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
---
objects:
  - ppo_cc_375: ALDocument.using(title="Petition for Personal Protection Order (Domestic Relationship) - CC 375", filename="Petition for Personal Protection Order (Domestic Relationship) - CC 375", default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
---
objects:
  - ppo_cc_377: ALDocument.using(title="Petition for Personal Protection Order (Non-Domestic Relationship) - CC 377", filename="Petition for Personal Protection Order (Non-Domestic Relationship) - CC 377", default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
---
objects:
  - cc_375_addendum: ALDocument.using(title="Petition for Personal Protection Order (Domestic Relationship) Statement of Facts", filename="Petition for Personal Protection Order (Domestic Relationship) Statement of Facts", default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
---
objects:
  - cc_377_addendum: ALDocument.using(title="Petition for Personal Protection Order (Non-Domestic Relationship) Statement of Facts", filename="Petition for Personal Protection Order (Non-Domestic Relationship) Statement of Facts", default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
---
objects:
  - cc_375_attachment: ALDocument.using(title="Petition for Personal Protection Order (Domestic Relationship) Attachment", filename="Petition for Personal Protection Order (Domestic Relationship) Attachment", default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
---
objects:
  - cc_377_attachment: ALDocument.using(title="Petition for Personal Protection Order (Non-Domestic Relationship) Attachment", filename="Petition for Personal Protection Order (Non-Domestic Relationship) Attachment", default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
---
objects:
  - cc_395_attachment: ALDocument.using(title="Petition for Personal Protection Order (Non-Domestic Sexual Assault) Attachment", filename="Petition for Personal Protection Order (Non-Domestic Sexual Assault) Attachment", default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
---
objects:
  - ppo_cc_376: ALDocument.using(title="Personal Protection Order (Domestic Relationship) - CC 376", filename="Personal Protection Order (Domestic Relationship) - CC 376", default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
---
objects:
  - ppo_cc_376m: ALDocument.using(title="Personal Protection Order Against Minor (Domestic Relationship) - CC 376M", filename="Personal Protection Order Against Minor (Domestic Relationship) - CC 376M", default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
---
objects:
  - ppo_cc_380: ALDocument.using(title="Personal Protection Order (Non-Domestic Relationship) - CC 380", filename="Personal Protection Order (Non-Domestic Relationship) - CC 380", default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
---
objects:
  - ppo_cc_380m: ALDocument.using(title="Personal Protection Order Against Minor (Non-Domestic Relationship) - CC 380M", filename="Personal Protection Order Against Minor (Non-Domestic Relationship) - CC 380M", default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
---
objects:
  - ppo_cc_396: ALDocument.using(title="Personal Protection Order (Non-Domestic Sexual Assault) - CC 396", filename="Personal Protection Order (Non-Domestic Sexual Assault) - CC 396", default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
---
objects:
  - ppo_cc_396m: ALDocument.using(title="Personal Protection Order Against Minor (Non-Domestic Sexual Assault) - CC 396M", filename="Personal Protection Order Against Minor (Non-Domestic Sexual Assault) - CC 396M", default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
---
objects:
  - ppo_cc_395: ALDocument.using(title="Petition for Personal Protection Order (Non-Domestic Sexual Assault) - CC 395", filename="Petition for Personal Protection Order (Non-Domestic Sexual Assault) - CC 395", default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
---
objects:
  - ppo_cc_381: ALDocument.using(title="Notice of Hearing - CC 381", filename="Notice of Hearing - CC 381", default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
---
objects:
  - cc_395_addendum: ALDocument.using(title="Petition for Personal Protection Order (Non-Domestic Sexual Assault) Statement of Facts", filename="Petition for Personal Protection Order (Non-Domestic Sexual Assault) Statement of Facts", default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
---
objects:
  - ppo_contact_information_sheet: ALDocument.using(title="Contact Information Sheet", filename="Contact Information Sheet", default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
---
objects:
  - al_user_bundle: ALDocumentBundle.using(elements=[ppo_cover_page, instructions_after_hearing, oakland_county_instructions_after_hearing, instructions_ex_parte, oakland_county_instructions_ex_parte, ppo_domestic_attachment, ppo_nondomestic_attachment, ppo_nondomestic_sexual_assault_attachment, ppo_order_bundle, ppo_cc_381, ppo_mc_319, identifying_information, ppo_contact_information_sheet], filename="Personal Protection Order and Proposed Order.pdf", title="All forms to download for your records", enabled=True)
---
objects:
  - ppo_order_bundle: ALDocumentBundle.using(elements=[ppo_cc_376, ppo_cc_376m, ppo_cc_380, ppo_cc_380m, ppo_cc_396, ppo_cc_396m, proof_of_service_domestic, proof_of_service_domestic_minor, proof_of_service_nondomestic, proof_of_service_nondomestic_minor, proof_of_service_nondomestic_sa, proof_of_service_nondomestic_sa_minor], filename="Proposed Order.pdf", title="Proposed Order", enabled=True)
---
objects:
  - ppo_domestic_attachment: ALDocumentBundle.using(elements=[ppo_cc_375, cc_375_addendum, cc_375_attachment], filename="Petition for Personal Protection Order (Domestic Relationship) - CC 375.pdf", title="Petition for Personal Protection Order (Domestic Relationship) - CC 375", enabled=True)
---
objects:
  - ppo_nondomestic_attachment: ALDocumentBundle.using(elements=[ppo_cc_377, cc_377_addendum, cc_377_attachment], filename="Petition for Personal Protection Order (Non-Domestic Relationship) - CC 377.pdf", title="Petition for Personal Protection Order (Non-Domestic Relationship) - CC 377", enabled=True)
---
objects:
  - ppo_nondomestic_sexual_assault_attachment: ALDocumentBundle.using(elements=[ppo_cc_395, cc_395_addendum, cc_395_attachment], filename="Petition for Personal Protection Order (Non-Domestic Sexual Assault) - CC 395.pdf", title="Petition for Personal Protection Order (Non-Domestic Sexual Assault) - CC 395", enabled=True)
---
objects:
  - instructions_after_hearing: ALDocument.using(title="Instructions After Hearing", filename="Instructions After Hearing", default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
---
objects:
  - oakland_county_instructions_after_hearing: ALDocument.using(title="Instructions After Hearing", filename="Instructions After Hearing", default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
---
objects:
  - instructions_ex_parte: ALDocument.using(title="Ex Parte Instructions", filename="Ex Parte Instructions", default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
---
objects:
  - oakland_county_instructions_ex_parte: ALDocument.using(title="Ex Parte Instructions", filename="Ex Parte Instructions", default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
---
objects:
  - ppo_mc_319: ALDocument.using(title="Request for Next Friend - MC 319", filename="Request for Next Friend - MC 319", default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
---
objects:
  - ppo_cover_page: ALDocument.using(title="Cover Page", filename="Cover Page", enabled=True, default_overflow_message=AL_DEFAULT_OVERFLOW_MESSAGE)
---
code: |
  if county_choice == "Wayne":
    identifying_information.enabled = True
  else:
    identifying_information.enabled = False
---
code: |
  if ppo_type == "domestic":
    ppo_cc_375.enabled = True
    cc_375_addendum.enabled = True
  else:
    ppo_cc_375.enabled = False
    cc_375_addendum.enabled = False
---
code: |
  if ppo_type == "domestic" and county_choice != "Wayne":
    if respondent_is_minor:
      if not respondent_is_emancipated_minor:
        ppo_cc_376m.enabled = True
        ppo_cc_376.enabled = False
      else:
        ppo_cc_376.enabled = True
        ppo_cc_376m.enabled = False
    else:
      ppo_cc_376.enabled = True
      ppo_cc_376m.enabled = False
  else:
    ppo_cc_376.enabled = False
    ppo_cc_376m.enabled = False
---
code: |
  if ppo_type == "nondomestic":
    ppo_cc_381.enabled = True
    ppo_cc_377.enabled = True
    cc_377_addendum.enabled = True
  else:
    ppo_cc_377.enabled = False
    ppo_cc_381.enabled = False
    cc_377_addendum.enabled = False
---
code: |
  if ppo_type == "nondomestic" and county_choice != "Wayne":
    if respondent_is_minor:
      if not respondent_is_emancipated_minor:
        ppo_cc_380m.enabled = True
        ppo_cc_380.enabled = False
      else:
        ppo_cc_380.enabled = True
        ppo_cc_380m.enabled = False
    else:
      ppo_cc_380.enabled = True
      ppo_cc_380m.enabled = False
  else:
    ppo_cc_380.enabled = False
    ppo_cc_380m.enabled = False
---
code: |
  if ppo_type == "nondomestic_sexual_assault":
    ppo_cc_395.enabled = True
    cc_395_addendum.enabled = True
  else:
    ppo_cc_395.enabled = False
    cc_395_addendum.enabled = False
---
code: |
  if ppo_type == "nondomestic_sexual_assault" and county_choice != "Wayne":
    if respondent_is_minor:
      if not respondent_is_emancipated_minor:
        ppo_cc_396m.enabled = True
        ppo_cc_396.enabled = False
      else:
        ppo_cc_396m.enabled = False
        ppo_cc_396.enabled = True
    else:
      ppo_cc_396m.enabled = False
      ppo_cc_396.enabled = True    
  else:
    ppo_cc_396.enabled = False
    ppo_cc_396m.enabled = False
---
code: |
  if (not wants_ex_parte_order) and (county_choice != "Oakland"):
    instructions_after_hearing.enabled = True
  else:
    instructions_after_hearing.enabled = False
---
code: |
  if (not wants_ex_parte_order) and (county_choice == "Oakland"):
    oakland_county_instructions_after_hearing.enabled = True
  else:
    oakland_county_instructions_after_hearing.enabled = False
---
code: |
  if (wants_ex_parte_order) and (county_choice != "Oakland"):
    instructions_ex_parte.enabled = True
  else:
    instructions_ex_parte.enabled = False
---
code: |
  if (wants_ex_parte_order) and (county_choice == "Oakland"):
    oakland_county_instructions_ex_parte.enabled = True
  else:
    oakland_county_instructions_ex_parte.enabled = False
---
code: |
  if ppo_type == "domestic" and (pending_actions_between_parties_yes or orders_judgments_re_parties_yes or (len(ppo_harm_protectees_list.complete_elements()) > 1) or (len(ppo_threat_protectees_list.complete_elements()) > 1)):
    cc_375_attachment.enabled = True
  else:
    cc_375_attachment.enabled = False
---
code: |
  if ppo_type == "nondomestic" and (pending_actions_between_parties_yes or orders_judgments_re_parties_yes):
    cc_377_attachment.enabled = True
  else:
    cc_377_attachment.enabled = False
---
code: |
  if ppo_type == "nondomestic_sexual_assault" and (pending_actions_between_parties_yes or orders_judgments_re_parties_yes or (len(ppo_sexual_assault_protectees_list.complete_elements()) > 1)):
    cc_395_attachment.enabled = True
  else:
    cc_395_attachment.enabled = False
---
code: |
  if str(county_choice) == "Oakland":
    ppo_contact_information_sheet.enabled = True
  else:
    ppo_contact_information_sheet.enabled = False
---
code: |
  if is_incapacitated_adult or petitioner_is_minor:
    if has_next_friend_petitioning:
      ppo_mc_319.enabled = True
    else:
      ppo_mc_319.enabled = False
  else:
    ppo_mc_319.enabled = False
---
code: |
  if county_choice == "Wayne":
    proof_of_service_domestic.enabled = False
    proof_of_service_domestic_minor.enabled = False
    proof_of_service_nondomestic.enabled = False
    proof_of_service_nondomestic_minor.enabled = False
    proof_of_service_nondomestic_sa.enabled = False
    proof_of_service_nondomestic_sa_minor.enabled = False
  else:
    if ppo_type == "domestic":
      if respondent_is_minor:
        if not respondent_is_emancipated_minor:
          proof_of_service_domestic_minor.enabled = True
          proof_of_service_domestic.enabled = False
          proof_of_service_nondomestic.enabled = False
          proof_of_service_nondomestic_minor.enabled = False
          proof_of_service_nondomestic_sa.enabled = False
          proof_of_service_nondomestic_sa_minor.enabled = False
        else:
          proof_of_service_domestic_minor.enabled = False
          proof_of_service_domestic.enabled = True
          proof_of_service_nondomestic.enabled = False
          proof_of_service_nondomestic_minor.enabled = False
          proof_of_service_nondomestic_sa.enabled = False
          proof_of_service_nondomestic_sa_minor.enabled = False
      else:
        proof_of_service_domestic.enabled = True
        proof_of_service_domestic_minor.enabled = False
        proof_of_service_nondomestic.enabled = False
        proof_of_service_nondomestic_minor.enabled = False
        proof_of_service_nondomestic_sa.enabled = False
        proof_of_service_nondomestic_sa_minor.enabled = False
    elif ppo_type == "nondomestic":
      if respondent_is_minor:
        if not respondent_is_emancipated_minor:
          proof_of_service_nondomestic_minor.enabled = True
          proof_of_service_nondomestic.enabled = False
          proof_of_service_domestic_minor.enabled = False
          proof_of_service_domestic.enabled = False
          proof_of_service_nondomestic_sa.enabled = False
          proof_of_service_nondomestic_sa_minor.enabled = False
        else:
          proof_of_service_nondomestic_minor.enabled = False
          proof_of_service_nondomestic.enabled = True
          proof_of_service_domestic_minor.enabled = False
          proof_of_service_domestic.enabled = False
          proof_of_service_nondomestic_sa.enabled = False
          proof_of_service_nondomestic_sa_minor.enabled = False
      else:
        proof_of_service_nondomestic.enabled = True
        proof_of_service_nondomestic_minor.enabled = False
        proof_of_service_domestic_minor.enabled = False
        proof_of_service_domestic.enabled = False
        proof_of_service_nondomestic_sa.enabled = False
        proof_of_service_nondomestic_sa_minor.enabled = False
    elif ppo_type == "nondomestic_sexual_assault":
      if respondent_is_minor:
        if not respondent_is_emancipated_minor:
          proof_of_service_nondomestic_sa_minor.enabled = True
          proof_of_service_nondomestic_sa.enabled = False
          proof_of_service_nondomestic.enabled = False
          proof_of_service_nondomestic_minor.enabled = False
          proof_of_service_domestic_minor.enabled = False
          proof_of_service_domestic.enabled = False
        else:
          proof_of_service_nondomestic_sa_minor.enabled = False
          proof_of_service_nondomestic_sa.enabled = True
          proof_of_service_nondomestic.enabled = False
          proof_of_service_nondomestic_minor.enabled = False
          proof_of_service_domestic_minor.enabled = False
          proof_of_service_domestic.enabled = False
      else:
        proof_of_service_nondomestic_sa.enabled = True
        proof_of_service_nondomestic_sa_minor.enabled = False
        proof_of_service_nondomestic.enabled = False
        proof_of_service_nondomestic_minor.enabled = False
        proof_of_service_domestic_minor.enabled = False
        proof_of_service_domestic.enabled = False
---
attachments:
  name: Request for Next Friend
  filename: Request for Next Friend
  variable name: ppo_mc_319[i]
  skip undefined: True
  editable: False
  pdf template file: mc_319_request_for_next_friend.pdf
  fields:
    - trial_court: ${ the_court.number }
    - trial_court_county: ${ county_choice.upper() }
    - trial_court_address_on_one_line: ${ the_court.address.on_one_line() }
    - trial_court_phone_number: ${ the_court.phone }
    - users1_address_block: |
        % if (is_incapacitated_adult or petitioner_is_minor) and len(next_friends) > 0:
        ${ next_friends[0] } NFF ${ users[0] }
        % else:
        ${ users[0] }
        % endif
        % if county_choice == "Oakland" and wants_confidential_contact_details:
        Confidential
        % else:
        ${ users[0].address }
        ${ users[0].phone_number }
        % endif
    - other_parties1_address_block: |
        ${ other_parties[0].address_block() }
        ${ other_parties[0].phone_number }
    - pursuant_to: |
        % if (is_incapacitated_adult or petitioner_is_minor) and len(next_friends) > 0 and next_friend_agrees_to_sign:
        ${ MLH_esign_tag }
        % else:
        ${ '' }
        % endif
    - next_friend1_signature: |
        % if next_friend_agrees_to_sign:
        /s/ ${ next_friends[0] }
        % else:
        ${ '' }
        % endif
    - signature_date: ${ signature_date if next_friend_agrees_to_sign else "" }
    - users1_name: ${ users[0] }
    - is_minor: ${ petitioner_is_minor }
    - is_incapacitated_adult: ${ is_incapacitated_adult }
---
attachments:
  name: Proof of Service
  filename: Proof of Service
  variable name: proof_of_service_domestic[i]
  skip undefined: True
  editable: False
  pdf template file: proof_of_service_domestic.pdf
  fields:
    - other_parties1_name: ${ other_parties[0].name }
    - other_parties1_parent_names: ${ comma_and_list(other_parties_parents) }
---
attachments:
  name: Proof of Service
  filename: Proof of Service
  variable name: proof_of_service_nondomestic[i]
  skip undefined: True
  editable: False
  pdf template file: proof_of_service_nondomestic.pdf
  fields:
    - other_parties1_name: ${ other_parties[0].name }
    - other_parties1_parent_names: ${ comma_and_list(other_parties_parents) }
---
attachments:
  name: Proof of Service
  filename: Proof of Service
  variable name: proof_of_service_nondomestic_sa[i]
  skip undefined: True
  editable: False
  pdf template file: proof_of_service_nondomestic_sa.pdf
  fields:
    - other_parties1_name: ${ other_parties[0].name }
    - other_parties1_parent_names: ${ comma_and_list(other_parties_parents) }
---
attachments:
  name: Proof of Service (Minor)
  filename: Proof of Service (Minor)
  variable name: proof_of_service_domestic_minor[i]
  skip undefined: True
  editable: False
  pdf template file: proof_of_service_domestic_minor.pdf
  fields:
    - other_parties1_name: ${ other_parties[0].name }
    - other_parties1_parent_names: ${ comma_and_list(other_parties_parents) }
---
attachments:
  name: Proof of Service (Minor)
  filename: Proof of Service (Minor)
  variable name: proof_of_service_nondomestic_minor[i]
  skip undefined: True
  editable: False
  pdf template file: proof_of_service_nondomestic_minor.pdf
  fields:
    - other_parties1_name: ${ other_parties[0].name }
    - other_parties1_parent_names: ${ comma_and_list(other_parties_parents) }
---
attachments:
  name: Proof of Service (Minor)
  filename: Proof of Service (Minor)
  variable name: proof_of_service_nondomestic_sa_minor[i]
  skip undefined: True
  editable: False
  pdf template file: proof_of_service_nondomestic_sa_minor.pdf
  fields:
    - other_parties1_name: ${ other_parties[0].name }
    - other_parties1_parent_names: ${ comma_and_list(other_parties_parents) }
---
attachments:
  name: Identifying Information
  filename: Identifying Information
  variable name: identifying_information[i]
  skip undefined: True
  editable: False
  pdf template file: identifying_information.pdf
  fields:
    - users1_name__1: |
        % if (is_incapacitated_adult or petitioner_is_minor) and len(next_friends) > 0:
        ${ next_friends[0] } NFF ${ users[0] }
        % else:
        ${ users[0] }
        % endif
    - users1_address_block: |
        % if county_choice == "Oakland" and wants_confidential_contact_details:
        Confidential
        % else:
        ${ users[0].address }
        ${ users[0].phone_number }
        % endif
    - other_parties1_address_block: |
        ${ other_parties[0].address_block() }
        ${ other_parties[0].phone_number }
    - other_parties1_height: ${ other_parties[0].height }
    - other_parties1_weight: ${ other_parties[0].weight }
    - other_parties1_race: ${ other_parties[0].race }
    - other_parties1_gender: ${ other_parties[0].gender }
    - other_parties1_age: |
        % if not knows_respondents_birthdate:
        ${ other_parties[0].estimated_age } est.
        % else:
        ${ other_parties[0].age_in_years() }
        % endif
    - other_parties1_hair_color: ${ other_parties[0].hair_color }
    - other_parties1_eye_color: ${ other_parties[0].eye_color }
    - other_parties1_other_identifying_info: ${ other_parties[0].other_identifying_info }
    - trial_court: ${ the_court.number }
    - trial_court_county: ${ county_choice.upper() }
    - trial_court_address_on_one_line: ${ the_court.address.on_one_line() }
    - trial_court_phone_number: ${ the_court.phone }
---
attachments:
  name: Petition for Personal Protection Order (Domestic Relationship) - CC 375
  filename: Petition for Personal Protection Order (Domestic Relationship) - CC 375
  variable name: ppo_cc_375[i]
  skip undefined: True
  editable: False
  pdf template file: cc_375_petition_for_personal_protection_order_domestic.pdf
  fields:
    - users1_name__1: |
        % if (is_incapacitated_adult or petitioner_is_minor) and len(next_friends) > 0:
        ${ next_friends[0] } NFF ${ users[0] }
        % else:
        ${ users[0] }
        % endif
    - users1_name__2: |
        % if (is_incapacitated_adult or petitioner_is_minor) and len(next_friends) > 0:
        ${ next_friends[0] }
        % else:
        ${ users[0] }
        % endif
    - users1_address_block: |
        % if county_choice == "Oakland" and wants_confidential_contact_details:
        Confidential
        % else:
        ${ users[0].address }
        ${ users[0].phone_number }
        % endif
    - users1_age: ${ users[0].age_in_years() }
    - users1_signature: |
        % if (is_incapacitated_adult or petitioner_is_minor) and len(next_friends) > 0 and next_friend_agrees_to_sign:
        /s/ ${ next_friends[0] }
        % elif MLH_esign:
        /s/ ${ users[0] }
        % else:
        ${ '' }
        % endif
    - pursuant_to: |
        % if ((is_incapacitated_adult or petitioner_is_minor) and len(next_friends) > 0 and next_friend_agrees_to_sign) or MLH_esign:
        ${ MLH_esign_tag }
        % else:
        ${ '' }
        % endif
    - signature_date: |
        % if ((is_incapacitated_adult or petitioner_is_minor) and len(next_friends) > 0 and next_friend_agrees_to_sign) or MLH_esign:
        ${ signature_date }
        % else:
        ${ '' }
        % endif
    - other_parties1_address: ${ other_parties[0].address }
    - other_parties1_address_block: |
        ${ other_parties[0].address_block() }
        ${ other_parties[0].phone_number }
    - other_parties1_phone_number: ${ other_parties[0].phone_number }
    - other_parties1_age: |
        % if not knows_respondents_birthdate:
        ${ other_parties[0].estimated_age } est.
        % else:
        ${ other_parties[0].age_in_years() }
        % endif
    - trial_court: ${ the_court.number }
    - trial_court_county: ${ county_choice.upper() }
    - trial_court_address_on_one_line: ${ the_court.address.on_one_line() }
    - trial_court_phone_number: ${ the_court.phone }
    - other_properties1_address: ${ other_properties[0].on_one_line() }
    - pending_actions1_docket_number: ${ pending_actions[0].docket_number }
    - pending_actions1_court_info_line: ${ pending_actions[0].court_info_line }
    - pending_actions1_court_name: ${ pending_actions[0].court_name }
    - pending_actions1_court_county: ${ pending_actions[0].court_county }
    - pending_actions1_court_state: ${ pending_actions[0].court_state }
    - pending_actions1_court_judge: ${ pending_actions[0].court_judge }
    - pending_actions_see_attached: |
        % if pending_actions_between_parties_yes:
        See attachment.
        % endif
    - orders_judgments1_docket_number: ${ orders_judgments[0].docket_number }
    - orders_judgments1_court_info_line: ${ orders_judgments[0].court_info_line }
    - orders_judgments1_court_name: ${ orders_judgments[0].court_name }
    - orders_judgments1_court_county: ${ orders_judgments[0].court_county }
    - orders_judgments1_court_state: ${ orders_judgments[0].court_state }
    - orders_judgments1_court_judge: ${ orders_judgments[0].court_judge }
    - orders_judgments_see_attached: |
        % if orders_judgments_re_parties_yes:
        See attachment.
        % endif
    - ppo_explanation_see_attached: |
        Please see attached "Statement of Facts".
    - ppo_harm_protectees_list: |
        % if len(ppo_harm_protectees_list.complete_elements()) > 1:
        See attached.
        % elif len(ppo_harm_protectees_list.complete_elements()) == 1:
        ${ comma_and_list(ppo_harm_protectees_list) }
        % else:
        ${ '' }
        % endif
    - ppo_threat_protectees_list: |
        % if len(ppo_threat_protectees_list.complete_elements()) > 1:
        See attached.
        % elif len(ppo_threat_protectees_list.complete_elements()) == 1:
        ${ comma_and_list(ppo_threat_protectees_list) }
        % else:
        ${ '' }
        % endif
    - petitioner_respondent_married: ${ petitioner_respondent_married }
    - petitioner_respondent_prev_married: ${ petitioner_respondent_prev_married }
    - petitioner_respondent_have_child: ${ petitioner_respondent_have_child }
    - petitioner_respondent_dating: ${ petitioner_respondent_dating }
    - petitioner_respondent_share_household: ${ petitioner_respondent_share_household }
    - respondent_carries_firearm_for_work_known: ${ respondent_carries_firearm_for_work_known }
    - respondent_carries_firearm_for_work_unknown: ${ respondent_carries_firearm_for_work_unknown }
    - pending_actions_between_parties_yes: ${ pending_actions_between_parties_yes }
    - pending_actions_between_parties_no: ${ pending_actions_between_parties_no }
    - orders_judgments_re_parties_yes: ${ orders_judgments_re_parties_yes }
    - orders_judgments_re_parties_no: ${ orders_judgments_re_parties_no }
    - wants_no_entering_residential_property: ${ no_entering_residential_property }
    - wants_no_entering_other_property: ${ wants_no_entering_other_property }
    - wants_no_harming_people: ${ wants_no_harming_people }
    - wants_no_removing_minor: ${ wants_no_removing_minor }
    - wants_no_stalking: ${ wants_no_stalking }
    - stalking_includes_following_appearing_in_sight: ${ stalking_includes_following_appearing_in_sight }
    - stalking_includes_sending_communications: ${ stalking_includes_sending_communications }
    - stalking_includes_approaching_confronting_in_public: ${ stalking_includes_approaching_confronting_in_public }
    - stalking_includes_being_on_petitioners_property: ${ stalking_includes_being_on_petitioners_property }
    - stalking_includes_leaving_object: ${ stalking_includes_leaving_object }
    - stalking_includes_appearing_at_petitioners_work: ${ stalking_includes_appearing_at_petitioners_work }
    - stalking_includes_phone_contact: ${ stalking_includes_phone_contact }
    - wants_no_children_property_removal_interference: ${ wants_no_children_property_removal_interference }
    - wants_no_threatening_others: ${ wants_no_threatening_others }
    - wants_no_work_education_interference: ${ wants_no_work_education_interference }
    - wants_no_access_to_personal_info_records: ${ wants_no_access_to_personal_info_records }
    - wants_no_intentional_mental_distress_or_control: ${ wants_no_intentional_mental_distress_or_control }
    - intentional_mental_distress_includes_animal_harm: ${ intentional_mental_distress_includes_animal_harm }
    - intentional_mental_distress_includes_removing_animal: ${ intentional_mental_distress_includes_removing_animal }
    - intentional_mental_distress_includes_retaining_animal: ${ intentional_mental_distress_includes_retaining_animal }
    - wants_no_firearm_purchase_or_possession: ${ wants_no_firearm_purchase_or_possession }
    - wants_other_request: ${ wants_other_request }
    - other_request_exp: ${ other_request_exp }
    - other_request_see_attached: |
        % if wants_other_request:
        Please see "Relief Requested" in Attachment.
        % endif
    - wants_ex_parte_order: ${ wants_ex_parte_order }
    - has_next_friend_petitioning: ${ has_next_friend_petitioning }
---
attachments:
  name: Petition for Personal Protection Order (Domestic Relationship) Statement of Facts
  filename: Petition for Personal Protection Order (Domestic Relationship) Statement of Facts
  docx template file: cc_375_statement_of_facts.docx
  variable name: cc_375_addendum[i]
  skip undefined: True
  valid formats:
    - pdf
---
attachments:
  name: Petition for Personal Protection Order (Domestic Relationship) Attachment
  filename: Petition for Personal Protection Order (Domestic Relationship) Attachment
  docx template file: cc_375_attachment.docx
  variable name: cc_375_attachment[i]
  skip undefined: True
  valid formats:
    - pdf
---
attachments:
  name: Petition for Personal Protection Order (Non-Domestic Relationship) Attachment
  filename: Petition for Personal Protection Order (Non-Domestic Relationship) Attachment
  docx template file: cc_377_attachment.docx
  variable name: cc_377_attachment[i]
  skip undefined: True
  valid formats:
    - pdf
---
attachments:
  name: Petition for Personal Protection Order (Non-Domestic Relationship) Statement of Facts
  filename: Petition for Personal Protection Order (Non-Domestic Relationship) Statement of Facts
  docx template file: cc_377_statement_of_facts.docx
  variable name: cc_377_addendum[i]
  skip undefined: True
  valid formats:
    - pdf
---
attachments:
  name: Petition for Personal Protection Order (Non-Domestic Sexual Assault) Attachment
  filename: Petition for Personal Protection Order (Non-Domestic Sexual Assault) Attachment
  docx template file: cc_395_attachment.docx
  variable name: cc_395_attachment[i]
  skip undefined: True
  valid formats:
    - pdf
---
attachments:
  name: Petition for Personal Protection Order (Non-Domestic Sexual Assault) Statement of Facts
  filename: Petition for Personal Protection Order (Non-Domestic Sexual Assault) Statement of Facts
  docx template file: cc_395_statement_of_facts.docx
  variable name: cc_395_addendum[i]
  skip undefined: True
  valid formats:
    - pdf
---
attachments:
  name: Instructions After Hearing
  filename: Instructions After Hearing
  docx template file: instructions_after_hearing.docx
  variable name: instructions_after_hearing[i]
  skip undefined: True
  valid formats:
    - pdf
---
attachments:
  name: Instructions After Hearing
  filename: Instructions After Hearing
  docx template file: oakland_county_instructions_after_hearing.docx
  variable name: oakland_county_instructions_after_hearing[i]
  skip undefined: True
  valid formats:
    - pdf
---
attachments:
  name: Ex Parte Instructions
  filename: Ex Parte Instructions
  docx template file: instructions_ex_parte.docx
  variable name: instructions_ex_parte[i]
  skip undefined: True
  valid formats:
    - pdf
---
attachments:
  name: Ex Parte Instructions
  filename: Ex Parte Instructions
  docx template file: oakland_county_instructions_ex_parte.docx
  variable name: oakland_county_instructions_ex_parte[i]
  skip undefined: True
  valid formats:
    - pdf
---
attachments:
  name: Cover Page
  filename: Cover Page
  docx template file: ppo_cover_page.docx
  variable name: ppo_cover_page[i]
  skip undefined: True
  valid formats:
    - pdf
---
attachments:
  name: Personal Protection Order (Domestic Relationship) - CC 376
  filename: Personal Protection Order (Domestic Relationship) - CC 376
  variable name: ppo_cc_376[i]
  skip undefined: True
  editable: False
  pdf template file: cc_376_personal_protection_order_domestic.pdf
  fields:
    - wants_ex_parte_order: ${ wants_ex_parte_order }
    - users1_name__1: |
        % if (is_incapacitated_adult or petitioner_is_minor) and len(next_friends) > 0:
        ${ next_friends[0] } NFF ${ users[0] }
        % else:
        ${ users[0] }
        % endif
    - users1_address_block: |
        % if county_choice == "Oakland" and wants_confidential_contact_details:
        Confidential
        % else:
        ${ users[0].address }
        ${ users[0].phone_number }
        % endif
    - users1_age: ${ users[0].age }
    - other_parties1_name__1: ${ other_parties[0].name }
    - other_parties1_name__2: ${ other_parties[0].name }
    - other_parties1_name__3: ${ other_parties[0].name }
    - other_parties1_name__4: ${ other_parties[0].name }
    - other_parties1_name__5: ${ other_parties[0].name }
    - other_parties1_address_block: |
        ${ other_parties[0].address_block() }
        ${ other_parties[0].phone_number }
    - other_parties1_phone_number: ${ other_parties[0].phone_number }
    - other_parties1_birthdate: |
        % if knows_respondents_birthdate: 
        ${ other_parties[0].birthdate }
        % else:
        ${ other_parties[0].estimated_age }
        % endif
    - other_parties1_license_number: ${ other_parties[0].license_number }
    - other_parties1_height: ${ other_parties[0].height }
    - other_parties1_weight: ${ other_parties[0].weight }
    - other_parties1_race: ${ other_parties[0].race }
    - other_parties1_gender: ${ other_parties[0].gender }
    - other_parties1_hair_color: ${ other_parties[0].hair_color }
    - other_parties1_eye_color: ${ other_parties[0].eye_color }
    - other_parties1_other_identifying_info: ${ other_parties[0].other_identifying_info }
    - trial_court: ${ the_court.number }
    - trial_court_county: ${ county_choice.upper() }
    - trial_court_address_on_one_line: ${ the_court.address.on_one_line() }
    - trial_court_phone_number: ${ the_court.phone }
---
attachments:
  name: Personal Protection Order Against Minor (Domestic Relationship) - CC 376M
  filename: Personal Protection Order Against Minor (Domestic Relationship) - CC 376M
  variable name: ppo_cc_376m[i]
  skip undefined: True
  editable: False
  pdf template file: cc_376m_personal_protection_order_against_minor_domestic.pdf
  fields:
    - wants_ex_parte_order: ${ wants_ex_parte_order }
    - users1_name__1: |
        % if (is_incapacitated_adult or petitioner_is_minor) and len(next_friends) > 0:
        ${ next_friends[0] } NFF ${ users[0] }
        % else:
        ${ users[0] }
        % endif
    - users1_address_block: |
        % if county_choice == "Oakland" and wants_confidential_contact_details:
        Confidential
        % else:
        ${ users[0].address }
        ${ users[0].phone_number }
        % endif
    - users1_age: ${ users[0].age }
    - other_parties1_name__1: ${ other_parties[0].name }
    - other_parties1_name__2: ${ other_parties[0].name }
    - other_parties1_name__3: ${ other_parties[0].name }
    - other_parties1_name__4: ${ other_parties[0].name }
    - other_parties1_name__5: ${ other_parties[0].name }
    - other_parties1_address_block: |
        ${ other_parties[0].address_block() }
        ${ other_parties[0].phone_number }
    - other_parties1_phone_number: ${ other_parties[0].phone_number }
    - other_parties1_birthdate: |
        % if knows_respondents_birthdate: 
        ${ other_parties[0].birthdate }
        % else:
        ${ other_parties[0].estimated_age }
        % endif
    - other_parties1_license_number: ${ other_parties[0].license_number }
    - other_parties1_height: ${ other_parties[0].height }
    - other_parties1_weight: ${ other_parties[0].weight }
    - other_parties1_race: ${ other_parties[0].race }
    - other_parties1_gender: ${ other_parties[0].gender }
    - other_parties1_hair_color: ${ other_parties[0].hair_color }
    - other_parties1_eye_color: ${ other_parties[0].eye_color }
    - other_parties1_other_identifying_info: ${ other_parties[0].other_identifying_info }
    - trial_court: ${ the_court.number }
    - trial_court_county: ${ county_choice.upper() }
    - trial_court_address_on_one_line: ${ the_court.address.on_one_line() }
    - trial_court_phone_number: ${ the_court.phone }
    - other_parties_parents1_name: ${ other_parties_parents[0].name }
    - other_parties_parents1_address_block: |
        ${ other_parties_parents[0].address }
        ${ other_parties_parents[0].phone_number }
    - other_parties_parents2_name: ${ other_parties_parents[1].name }
    - other_parties_parents2_address_block: |
        ${ other_parties_parents[1].address }
        ${ other_parties_parents[1].phone_number }
    - other_parties1_parent_names: ${ comma_and_list(other_parties_parents) }
---
attachments:
  name: Personal Protection Order (Non-Domestic Relationship) - CC 380
  filename: Personal Protection Order (Non-Domestic Relationship) - CC 380
  variable name: ppo_cc_380[i]
  skip undefined: True
  editable: False
  pdf template file: cc_380_personal_protection_order_nondomestic.pdf
  fields:
    - wants_ex_parte_order: ${ wants_ex_parte_order }
    - users1_name: |
        % if (is_incapacitated_adult or petitioner_is_minor) and len(next_friends) > 0:
        ${ next_friends[0] } NFF ${ users[0] }
        % else:
        ${ users[0] }
        % endif
    - users1_address_block: |
        % if county_choice == "Oakland" and wants_confidential_contact_details:
        Confidential
        % else:
        ${ users[0].address }
        ${ users[0].phone_number }
        % endif
    - other_parties1_name__1: ${ other_parties[0].name }
    - other_parties1_name__2: ${ other_parties[0].name }
    - other_parties1_name__3: ${ other_parties[0].name }
    - other_parties1_name__4: ${ other_parties[0].name }
    - other_parties1_address_block: |
        ${ other_parties[0].address }
        ${ other_parties[0].phone_number }
    - other_parties1_birthdate: |
        % if knows_respondents_birthdate: 
        ${ other_parties[0].birthdate }
        % else:
        ${ other_parties[0].estimated_age }
        % endif
    - other_parties1_license_number: ${ other_parties[0].license_number }
    - other_parties1_height: ${ other_parties[0].height }
    - other_parties1_weight: ${ other_parties[0].weight }
    - other_parties1_race: ${ other_parties[0].race }
    - other_parties1_gender: ${ other_parties[0].gender }
    - other_parties1_hair_color: ${ other_parties[0].hair_color }
    - other_parties1_eye_color: ${ other_parties[0].eye_color }
    - other_parties1_other_identifying_info: ${ other_parties[0].other_identifying_info }
    - trial_court: ${ the_court.number }
    - trial_court_county: ${ county_choice.upper() }
    - trial_court_address_on_one_line: ${ the_court.address.on_one_line() }
    - trial_court_phone_number: ${ the_court.phone }
---
attachments:
  name: Personal Protection Order Against Minor (Non-Domestic Relationship) - CC 380M
  filename: Personal Protection Order Against Minor (Non-Domestic Relationship) - CC 380M
  variable name: ppo_cc_380m[i]
  skip undefined: True
  editable: False
  pdf template file: cc_380m_personal_protection_order_against_minor_nondomestic.pdf
  fields:
    - wants_ex_parte_order: ${ wants_ex_parte_order }
    - users1_name__1: |
        % if (is_incapacitated_adult or petitioner_is_minor) and len(next_friends) > 0:
        ${ next_friends[0] } NFF ${ users[0] }
        % else:
        ${ users[0] }
        % endif
    - users1_address_block: |
        % if county_choice == "Oakland" and wants_confidential_contact_details:
        Confidential
        % else:
        ${ users[0].address }
        ${ users[0].phone_number }
        % endif
    - other_parties1_name__1: ${ other_parties[0].name }
    - other_parties1_name__2: ${ other_parties[0].name }
    - other_parties1_name__3: ${ other_parties[0].name }
    - other_parties1_name__4: ${ other_parties[0].name }
    - other_parties1_address_block: |
        ${ other_parties[0].address }
        ${ other_parties[0].phone_number }
    - other_parties1_birthdate: |
        % if knows_respondents_birthdate: 
        ${ other_parties[0].birthdate }
        % else:
        ${ other_parties[0].estimated_age }
        % endif
    - other_parties1_license_number: ${ other_parties[0].license_number }
    - other_parties1_height: ${ other_parties[0].height }
    - other_parties1_weight: ${ other_parties[0].weight }
    - other_parties1_race: ${ other_parties[0].race }
    - other_parties1_gender: ${ other_parties[0].gender }
    - other_parties1_hair_color: ${ other_parties[0].hair_color }
    - other_parties1_eye_color: ${ other_parties[0].eye_color }
    - other_parties1_other_identifying_info: ${ other_parties[0].other_identifying_info }
    - trial_court: ${ the_court.number }
    - trial_court_county: ${ county_choice.upper() }
    - trial_court_address_on_one_line: ${ the_court.address.on_one_line() }
    - trial_court_phone_number: ${ the_court.phone }
    - other_parties_parents1_name: ${ other_parties_parents[0].name }
    - other_parties_parents1_address_block: |
        ${ other_parties_parents[0].address }
        ${ other_parties_parents[0].phone_number }
    - other_parties_parents2_name: ${ other_parties_parents[1].name }
    - other_parties_parents2_address_block: |
        ${ other_parties_parents[1].address }
        ${ other_parties_parents[1].phone_number }
    - other_parties1_parent_names: ${ comma_and_list(other_parties_parents) }
---
attachments:
  name: Petition for Personal Protection Order (Non-Domestic Sexual Assault) - CC 395
  filename: Petition for Personal Protection Order (Non-Domestic Sexual Assault) - CC 395
  variable name: ppo_cc_395[i]
  skip undefined: True
  editable: False
  pdf template file: cc_395_petition_for_personal_protection_order_nondomestic_sexual_assault.pdf
  fields:
    - users1_name__1: |
        % if (is_incapacitated_adult or petitioner_is_minor) and len(next_friends) > 0:
        ${ next_friends[0] } NFF ${ users[0] }
        % else:
        ${ users[0] }
        % endif
    - users1_name__2: |
        % if ((is_incapacitated_adult or petitioner_is_minor) and len(next_friends) > 0 and next_friend_agrees_to_sign) or MLH_esign:
        ${ next_friends[0] }
        % else:
        ${ users[0] }
        % endif
    - users1_address_block: |
        % if county_choice == "Oakland" and wants_confidential_contact_details:
        Confidential
        % else:
        ${ users[0].address }
        ${ users[0].phone_number }
        % endif
    - users1_age: ${ users[0].age_in_years() }
    - users1_signature: |
        % if (is_incapacitated_adult or petitioner_is_minor) and len(next_friends) > 0 and next_friend_agrees_to_sign:
        /s/ ${ next_friends[0] }
        % elif MLH_esign:
        /s/ ${ users[0] }
        % else:
        ${ '' }
        % endif
    - pursuant_to: |
        % if ((is_incapacitated_adult or petitioner_is_minor) and len(next_friends) > 0 and next_friend_agrees_to_sign) or MLH_esign:
        ${ MLH_esign_tag }
        % else:
        ${ '' }
        % endif
    - signature_date: |
        % if ((is_incapacitated_adult or petitioner_is_minor) and len(next_friends) > 0 and next_friend_agrees_to_sign) or MLH_esign:
        ${ signature_date }
        % else:
        ${ '' }
        % endif
    - other_parties1_address_block: |
        ${ other_parties[0].address_block() }
        ${ other_parties[0].phone_number }
    - other_parties1_age: |
        % if not knows_respondents_birthdate:
        ${ other_parties[0].estimated_age } est.
        % else:
        ${ other_parties[0].age_in_years() }
        % endif
    - trial_court: ${ the_court.number }
    - trial_court_county: ${ county_choice.upper() }
    - trial_court_address_on_one_line: ${ the_court.address.on_one_line() }
    - trial_court_phone_number: ${ the_court.phone }
    - other_properties1_address: ${ other_properties[0].on_one_line() }
    - pending_actions_see_attached: |
        % if pending_actions_between_parties_yes:
        See attachment.
        % endif
    - orders_judgments_see_attached: |
        % if orders_judgments_re_parties_yes:
        See attachment.
        % endif
    - ppo_sexual_assault_threat_protectees_list: |
        % if len(ppo_sexual_assault_threat_protectees_list.complete_elements()) > 1:
        See "Relief Requested" in Attachment.
        % elif len(ppo_sexual_assault_threat_protectees_list.complete_elements()) == 1:
        ${ comma_and_list(ppo_sexual_assault_threat_protectees_list) }
        % else:
        ${ '' }
        % endif
    - respondent_carries_firearm_for_work_known: ${ respondent_carries_firearm_for_work_known }
    - respondent_carries_firearm_for_work_unknown: ${ respondent_carries_firearm_for_work_unknown }
    - pending_actions_between_parties_yes: ${ pending_actions_between_parties_yes }
    - pending_actions_between_parties_no: ${ pending_actions_between_parties_no }
    - orders_judgments_re_parties_yes: ${ orders_judgments_re_parties_yes }
    - orders_judgments_re_parties_no: ${ orders_judgments_re_parties_no }
    - wants_no_entering_residential_property: ${ no_entering_residential_property }
    - wants_no_entering_other_property: ${ wants_no_entering_other_property }
    - stalking_includes_following_appearing_in_sight: ${ stalking_includes_following_appearing_in_sight }
    - stalking_includes_sending_communications: ${ stalking_includes_sending_communications }
    - stalking_includes_approaching_confronting_in_public: ${ stalking_includes_approaching_confronting_in_public }
    - stalking_includes_leaving_object: ${ stalking_includes_leaving_object }
    - stalking_includes_appearing_at_petitioners_work: ${ stalking_includes_appearing_at_petitioners_work }
    - stalking_includes_phone_contact: ${ stalking_includes_phone_contact }
    - stalking_includes_being_on_petitioners_property: ${ stalking_includes_being_on_petitioners_property }
    - wants_no_children_property_removal_interference: ${ wants_no_children_property_removal_interference }
    - wants_no_work_education_interference: ${ wants_no_work_education_interference }
    - wants_no_firearm_purchase_or_possession: ${ wants_no_firearm_purchase_or_possession }
    - wants_other_request: ${ wants_other_request }
    - other_request_exp: ${ other_request_exp }
    - other_request_see_attached: |
        % if wants_other_request:
        Please see "Relief Requested" in Attachment.
        % endif
    - wants_ex_parte_order: ${ wants_ex_parte_order }
    - has_next_friend_petitioning: ${ has_next_friend_petitioning }
    - respondent_sexual_assault_conviction: ${ respondent_sexual_assault_conviction }
    - fears_future_sexual_assault: ${ fears_future_sexual_assault }
    - potential_sexual_assault_see_attached: |
        % if potential_sexual_assault_exp:
        Please see attached "Statement of Facts".
        % endif
    - wants_no_sexual_assault_threatening_others: ${ wants_no_sexual_assault_threatening_others }
---
attachments:
  name: Personal Protection Order (Non-Domestic Sexual Assault) - CC 396
  filename: Personal Protection Order (Non-Domestic Sexual Assault) - CC 396
  variable name: ppo_cc_396[i]
  skip undefined: True
  editable: False
  pdf template file: cc_396_personal_protection_order_nondomestic_sexual_assault.pdf
  fields:
    - wants_ex_parte_order: ${ wants_ex_parte_order }
    - users1_name: |
        % if (is_incapacitated_adult or petitioner_is_minor) and len(next_friends) > 0:
        ${ next_friends[0] } NFF ${ users[0] }
        % else:
        ${ users[0] }
        % endif
    - users1_address_block: |
        % if county_choice == "Oakland" and wants_confidential_contact_details:
        Confidential
        % else:
        ${ users[0].address }
        ${ users[0].phone_number }
        % endif
    - other_parties1_name__1: ${ other_parties[0].name }
    - other_parties1_name__2: ${ other_parties[0].name }
    - other_parties1_address_block: |
        ${ other_parties[0].address_block() }
        ${ other_parties[0].phone_number }
    - other_parties1_birthdate: |
        % if knows_respondents_birthdate: 
        ${ other_parties[0].birthdate }
        % else:
        ${ other_parties[0].estimated_age }
        % endif
    - other_parties1_license_number: ${ other_parties[0].license_number }
    - other_parties1_height: ${ other_parties[0].height }
    - other_parties1_weight: ${ other_parties[0].weight }
    - other_parties1_race: ${ other_parties[0].race }
    - other_parties1_gender: ${ other_parties[0].gender }
    - other_parties1_hair_color: ${ other_parties[0].hair_color }
    - other_parties1_eye_color: ${ other_parties[0].eye_color }
    - other_parties1_other_identifying_info: ${ other_parties[0].other_identifying_info }
    - trial_court: ${ the_court.number }
    - trial_court_county: ${ county_choice.upper() }
    - trial_court_address_on_one_line: ${ the_court.address.on_one_line() }
    - trial_court_phone_number: ${ the_court.phone }
---
attachments:
  name: Personal Protection Order Against Minor (Non-Domestic Sexual Assault) - CC 396M
  filename: Personal Protection Order Against Minor (Non-Domestic Sexual Assault) - CC 396M
  variable name: ppo_cc_396m[i]
  skip undefined: True
  editable: False
  pdf template file: cc_396m_personal_protection_order_against_minor_nondomestic_sexual_assault.pdf
  fields:
    - wants_ex_parte_order: ${ wants_ex_parte_order }
    - users1_name__1: |
        % if (is_incapacitated_adult or petitioner_is_minor) and len(next_friends) > 0:
        ${ next_friends[0] } NFF ${ users[0] }
        % else:
        ${ users[0] }
        % endif
    - users1_address_block: |
        % if county_choice == "Oakland" and wants_confidential_contact_details:
        Confidential
        % else:
        ${ users[0].address }
        ${ users[0].phone_number }
        % endif
    - other_parties1_name__1: ${ other_parties[0].name }
    - other_parties1_name__2: ${ other_parties[0].name }
    - other_parties1_address_block: |
        ${ other_parties[0].address_block() }
        ${ other_parties[0].phone_number }
    - other_parties1_birthdate: |
        % if knows_respondents_birthdate: 
        ${ other_parties[0].birthdate }
        % else:
        ${ other_parties[0].estimated_age }
        % endif
    - other_parties1_license_number: ${ other_parties[0].license_number }
    - other_parties1_height: ${ other_parties[0].height }
    - other_parties1_weight: ${ other_parties[0].weight }
    - other_parties1_race: ${ other_parties[0].race }
    - other_parties1_gender: ${ other_parties[0].gender }
    - other_parties1_hair_color: ${ other_parties[0].hair_color }
    - other_parties1_eye_color: ${ other_parties[0].eye_color }
    - other_parties1_other_identifying_info: ${ other_parties[0].other_identifying_info }
    - trial_court: ${ the_court.number }
    - trial_court_county: ${ county_choice.upper() }
    - trial_court_address_on_one_line: ${ the_court.address.on_one_line() }
    - trial_court_phone_number: ${ the_court.phone }
    - other_parties_parents1_name: ${ other_parties_parents[0].name }
    - other_parties_parents1_address_block: |
        ${ other_parties_parents[0].address }
        ${ other_parties_parents[0].phone_number }
    - other_parties_parents2_name: ${ other_parties_parents[1].name }
    - other_parties_parents2_address_block: |
        ${ other_parties_parents[1].address }
        ${ other_parties_parents[1].phone_number }
    - other_parties1_parent_names: ${ comma_and_list(other_parties_parents) }
---
attachments:
  name: Notice of Hearing
  filename: Notice of Hearing
  variable name: ppo_cc_381[i]
  skip undefined: True
  editable: False
  pdf template file: cc_381_notice_of_hearing.pdf
  fields:
    - users1_name: |
        % if (is_incapacitated_adult or petitioner_is_minor) and len(next_friends) > 0:
        ${ next_friends[0] } NFF ${ users[0] }
        % else:
        ${ users[0] }
        % endif
    - other_parties1_name__1: ${ other_parties[0].name }
    - other_parties1_name__2: ${ other_parties[0].name }
    - other_parties1_name__3: ${ other_parties[0].name }
    - other_parties1_address: ${ other_parties[0].address }
    - trial_court: ${ the_court.number }
    - trial_court_county: ${ county_choice.upper() }
    - trial_court_phone_number: ${ the_court.phone }
    - trial_court_address_on_one_line: ${ trial_court.address.on_one_line() }
    - trial_court_phone_number: ${ trial_court.phone_number }
---
attachments:
  name: Contact Information Sheet
  filename: Contact Information Sheet
  variable name: ppo_contact_information_sheet[i]
  skip undefined: True
  editable: False
  pdf template file: ppo_contact_information_sheet.pdf
  fields:
    - users1_name: ${ users[0].name }
    - users1_address: ${ users[0].address.address }
    - users1_city_state_zip: |
        ${ users[0].address.city }, ${ users[0].address.state }, ${ users[0].address.zip }
    - users1_phone_number: ${ users[0].phone_number }
    - users1_email: ${ users[0].email }
    - users1_signature: ${ f"/s/ {users[0]}" if MLH_esign else "" }
    - pursuant_to: |
        % if MLH_esign:
        ${ MLH_esign_tag }
        % else:
        ${ '' }
        % endif
    - signature_date: ${ signature_date if MLH_esign else "" }
    - wants_confidential_contact_details: ${ wants_confidential_contact_details }
---
attachments:
  name: Petition for Personal Protection Order (Non-Domestic Relationship) - CC 377
  filename: Petition for Personal Protection Order (Non-Domestic Relationship) - CC 377
  variable name: ppo_cc_377[i]
  skip undefined: True
  editable: False
  pdf template file: cc_377_petition_for_personal_protection_order_nondomestic.pdf
  fields:
    - users1_name__1: |
        % if (is_incapacitated_adult or petitioner_is_minor) and len(next_friends) > 0:
        ${ next_friends[0] } NFF ${ users[0] }
        % else:
        ${ users[0] }
        % endif
    - users1_name__2: |
        % if (is_incapacitated_adult or petitioner_is_minor) and len(next_friends) > 0:
        ${ next_friends[0] }
        % else:
        ${ users[0] }
        % endif
    - users1_address_block: |
        % if county_choice == "Oakland" and wants_confidential_contact_details:
        Confidential
        % else:
        ${ users[0].address }
        ${ users[0].phone_number }
        % endif
    - users1_age: ${ users[0].age_in_years() }
    - users1_signature: |
        % if (is_incapacitated_adult or petitioner_is_minor) and len(next_friends) > 0 and next_friend_agrees_to_sign:
        /s/ ${ next_friends[0] }
        % elif MLH_esign:
        /s/ ${ users[0] }
        % else:
        ${ '' }
        % endif
    - pursuant_to: |
        % if ((is_incapacitated_adult or petitioner_is_minor) and len(next_friends) > 0 and next_friend_agrees_to_sign) or MLH_esign:
        ${ MLH_esign_tag }
        % else:
        ${ '' }
        % endif
    - signature_date: |
        % if ((is_incapacitated_adult or petitioner_is_minor) and len(next_friends) > 0 and next_friend_agrees_to_sign) or MLH_esign:
        ${ signature_date }
        % else:
        ${ '' }
        % endif
    - other_parties1_address_block: |
        ${ other_parties[0].address_block() }
        ${ other_parties[0].phone_number }
    - other_parties1_age: |
        % if not knows_respondents_birthdate:
        ${ other_parties[0].estimated_age } est.
        % else:
        ${ other_parties[0].age_in_years() }
        % endif
    - trial_court: ${ the_court.number }
    - trial_court_county: ${ county_choice.upper() }
    - docket_number__1: ${ docket_number }
    - docket_number__2: ${ docket_number }
    - trial_court_address_on_one_line: ${ the_court.address.on_one_line() }
    - trial_court_phone_number: ${ the_court.phone }
    - pending_actions_see_attached: |
        % if pending_actions_between_parties_yes:
        See attachment.
        % endif
    - orders_judgments_see_attached: |
        % if orders_judgments_re_parties_yes:
        See attachment.
        % endif
    - ppo_explanation_see_attached: |
        Please see attached "Statement of Facts".
    - respondent_carries_firearm_for_work_known: ${ respondent_carries_firearm_for_work_known }
    - respondent_carries_firearm_for_work_unknown: ${ respondent_carries_firearm_for_work_unknown }
    - pending_actions_between_parties_yes: ${ pending_actions_between_parties_yes }
    - pending_actions_between_parties_no: ${ pending_actions_between_parties_no }
    - orders_judgments_re_parties_yes: ${ orders_judgments_re_parties_yes }
    - orders_judgments_re_parties_no: ${ orders_judgments_re_parties_no }
    - wants_no_stalking: ${ wants_no_stalking }
    - stalking_includes_following_appearing_in_sight: ${ stalking_includes_following_appearing_in_sight }
    - stalking_includes_sending_communications: ${ stalking_includes_sending_communications }
    - stalking_includes_approaching_confronting_in_public: ${ stalking_includes_approaching_confronting_in_public }
    - stalking_includes_being_on_petitioners_property: ${ stalking_includes_being_on_petitioners_property }
    - stalking_includes_leaving_object: ${ stalking_includes_leaving_object }
    - stalking_includes_appearing_at_petitioners_work: ${ stalking_includes_appearing_at_petitioners_work }
    - stalking_includes_phone_contact: ${ stalking_includes_phone_contact }
    - wants_no_threatening_petitioner: ${ wants_no_threatening_petitioner }
    - wants_no_firearm_purchase_or_possession: ${ wants_no_firearm_purchase_or_possession }
    - wants_other_request: ${ wants_other_request }
    - other_request_see_attached: |
        % if wants_other_request:
        Please see "Relief Requested" in Attachment.
        % endif
    - wants_no_message_posting: ${ wants_no_message_posting }
    - wants_ex_parte_order: ${ wants_ex_parte_order }
    - has_next_friend_petitioning: ${ has_next_friend_petitioning }
---
#################### Documents End #####################
---